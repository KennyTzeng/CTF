
./leakless:     file format elf32-i386


Disassembly of section .init:

0804838c <_init>:
 804838c:	53                   	push   ebx
 804838d:	83 ec 08             	sub    esp,0x8
 8048390:	e8 db 00 00 00       	call   8048470 <__x86.get_pc_thunk.bx>
 8048395:	81 c3 6b 1c 00 00    	add    ebx,0x1c6b
 804839b:	8b 83 f4 ff ff ff    	mov    eax,DWORD PTR [ebx-0xc]
 80483a1:	85 c0                	test   eax,eax
 80483a3:	74 05                	je     80483aa <_init+0x1e>
 80483a5:	e8 86 00 00 00       	call   8048430 <setvbuf@plt+0x10>
 80483aa:	83 c4 08             	add    esp,0x8
 80483ad:	5b                   	pop    ebx
 80483ae:	c3                   	ret    

Disassembly of section .plt:

080483b0 <read@plt-0x10>:
 80483b0:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 80483b6:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 80483bc:	00 00                	add    BYTE PTR [eax],al
	...

080483c0 <read@plt>:
 80483c0:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 80483c6:	68 00 00 00 00       	push   0x0
 80483cb:	e9 e0 ff ff ff       	jmp    80483b0 <_init+0x24>

080483d0 <signal@plt>:
 80483d0:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 80483d6:	68 08 00 00 00       	push   0x8
 80483db:	e9 d0 ff ff ff       	jmp    80483b0 <_init+0x24>

080483e0 <alarm@plt>:
 80483e0:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 80483e6:	68 10 00 00 00       	push   0x10
 80483eb:	e9 c0 ff ff ff       	jmp    80483b0 <_init+0x24>

080483f0 <puts@plt>:
 80483f0:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 80483f6:	68 18 00 00 00       	push   0x18
 80483fb:	e9 b0 ff ff ff       	jmp    80483b0 <_init+0x24>

08048400 <exit@plt>:
 8048400:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 8048406:	68 20 00 00 00       	push   0x20
 804840b:	e9 a0 ff ff ff       	jmp    80483b0 <_init+0x24>

08048410 <__libc_start_main@plt>:
 8048410:	ff 25 20 a0 04 08    	jmp    DWORD PTR ds:0x804a020
 8048416:	68 28 00 00 00       	push   0x28
 804841b:	e9 90 ff ff ff       	jmp    80483b0 <_init+0x24>

08048420 <setvbuf@plt>:
 8048420:	ff 25 24 a0 04 08    	jmp    DWORD PTR ds:0x804a024
 8048426:	68 30 00 00 00       	push   0x30
 804842b:	e9 80 ff ff ff       	jmp    80483b0 <_init+0x24>

Disassembly of section .plt.got:

08048430 <.plt.got>:
 8048430:	ff 25 f4 9f 04 08    	jmp    DWORD PTR ds:0x8049ff4
 8048436:	66 90                	xchg   ax,ax

Disassembly of section .text:

08048440 <_start>:
 8048440:	31 ed                	xor    ebp,ebp
 8048442:	5e                   	pop    esi
 8048443:	89 e1                	mov    ecx,esp
 8048445:	83 e4 f0             	and    esp,0xfffffff0
 8048448:	50                   	push   eax
 8048449:	54                   	push   esp
 804844a:	52                   	push   edx
 804844b:	68 a0 86 04 08       	push   0x80486a0
 8048450:	68 40 86 04 08       	push   0x8048640
 8048455:	51                   	push   ecx
 8048456:	56                   	push   esi
 8048457:	68 fa 85 04 08       	push   0x80485fa
 804845c:	e8 af ff ff ff       	call   8048410 <__libc_start_main@plt>
 8048461:	f4                   	hlt    
 8048462:	66 90                	xchg   ax,ax
 8048464:	66 90                	xchg   ax,ax
 8048466:	66 90                	xchg   ax,ax
 8048468:	66 90                	xchg   ax,ax
 804846a:	66 90                	xchg   ax,ax
 804846c:	66 90                	xchg   ax,ax
 804846e:	66 90                	xchg   ax,ax

08048470 <__x86.get_pc_thunk.bx>:
 8048470:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048473:	c3                   	ret    
 8048474:	66 90                	xchg   ax,ax
 8048476:	66 90                	xchg   ax,ax
 8048478:	66 90                	xchg   ax,ax
 804847a:	66 90                	xchg   ax,ax
 804847c:	66 90                	xchg   ax,ax
 804847e:	66 90                	xchg   ax,ax

08048480 <deregister_tm_clones>:
 8048480:	b8 30 a0 04 08       	mov    eax,0x804a030
 8048485:	3d 30 a0 04 08       	cmp    eax,0x804a030
 804848a:	74 24                	je     80484b0 <deregister_tm_clones+0x30>
 804848c:	b8 00 00 00 00       	mov    eax,0x0
 8048491:	85 c0                	test   eax,eax
 8048493:	74 1b                	je     80484b0 <deregister_tm_clones+0x30>
 8048495:	55                   	push   ebp
 8048496:	89 e5                	mov    ebp,esp
 8048498:	83 ec 14             	sub    esp,0x14
 804849b:	68 30 a0 04 08       	push   0x804a030
 80484a0:	ff d0                	call   eax
 80484a2:	83 c4 10             	add    esp,0x10
 80484a5:	c9                   	leave  
 80484a6:	c3                   	ret    
 80484a7:	89 f6                	mov    esi,esi
 80484a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
 80484b0:	f3 c3                	repz ret 
 80484b2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 80484b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080484c0 <register_tm_clones>:
 80484c0:	b8 30 a0 04 08       	mov    eax,0x804a030
 80484c5:	2d 30 a0 04 08       	sub    eax,0x804a030
 80484ca:	c1 f8 02             	sar    eax,0x2
 80484cd:	89 c2                	mov    edx,eax
 80484cf:	c1 ea 1f             	shr    edx,0x1f
 80484d2:	01 d0                	add    eax,edx
 80484d4:	d1 f8                	sar    eax,1
 80484d6:	74 20                	je     80484f8 <register_tm_clones+0x38>
 80484d8:	ba 00 00 00 00       	mov    edx,0x0
 80484dd:	85 d2                	test   edx,edx
 80484df:	74 17                	je     80484f8 <register_tm_clones+0x38>
 80484e1:	55                   	push   ebp
 80484e2:	89 e5                	mov    ebp,esp
 80484e4:	83 ec 10             	sub    esp,0x10
 80484e7:	50                   	push   eax
 80484e8:	68 30 a0 04 08       	push   0x804a030
 80484ed:	ff d2                	call   edx
 80484ef:	83 c4 10             	add    esp,0x10
 80484f2:	c9                   	leave  
 80484f3:	c3                   	ret    
 80484f4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80484f8:	f3 c3                	repz ret 
 80484fa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

08048500 <__do_global_dtors_aux>:
 8048500:	80 3d 30 a0 04 08 00 	cmp    BYTE PTR ds:0x804a030,0x0
 8048507:	75 17                	jne    8048520 <__do_global_dtors_aux+0x20>
 8048509:	55                   	push   ebp
 804850a:	89 e5                	mov    ebp,esp
 804850c:	83 ec 08             	sub    esp,0x8
 804850f:	e8 6c ff ff ff       	call   8048480 <deregister_tm_clones>
 8048514:	c6 05 30 a0 04 08 01 	mov    BYTE PTR ds:0x804a030,0x1
 804851b:	c9                   	leave  
 804851c:	c3                   	ret    
 804851d:	8d 76 00             	lea    esi,[esi+0x0]
 8048520:	f3 c3                	repz ret 
 8048522:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8048529:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048530 <frame_dummy>:
 8048530:	55                   	push   ebp
 8048531:	89 e5                	mov    ebp,esp
 8048533:	5d                   	pop    ebp
 8048534:	eb 8a                	jmp    80484c0 <register_tm_clones>

08048536 <handler>:
 8048536:	55                   	push   ebp
 8048537:	89 e5                	mov    ebp,esp
 8048539:	53                   	push   ebx
 804853a:	83 ec 04             	sub    esp,0x4
 804853d:	e8 2e ff ff ff       	call   8048470 <__x86.get_pc_thunk.bx>
 8048542:	81 c3 be 1a 00 00    	add    ebx,0x1abe
 8048548:	83 ec 0c             	sub    esp,0xc
 804854b:	8d 83 c0 e6 ff ff    	lea    eax,[ebx-0x1940]
 8048551:	50                   	push   eax
 8048552:	e8 99 fe ff ff       	call   80483f0 <puts@plt>
 8048557:	83 c4 10             	add    esp,0x10
 804855a:	83 ec 0c             	sub    esp,0xc
 804855d:	6a 00                	push   0x0
 804855f:	e8 9c fe ff ff       	call   8048400 <exit@plt>

08048564 <setup>:
 8048564:	55                   	push   ebp
 8048565:	89 e5                	mov    ebp,esp
 8048567:	53                   	push   ebx
 8048568:	83 ec 04             	sub    esp,0x4
 804856b:	e8 00 ff ff ff       	call   8048470 <__x86.get_pc_thunk.bx>
 8048570:	81 c3 90 1a 00 00    	add    ebx,0x1a90
 8048576:	8b 83 f8 ff ff ff    	mov    eax,DWORD PTR [ebx-0x8]
 804857c:	8b 00                	mov    eax,DWORD PTR [eax]
 804857e:	6a 00                	push   0x0
 8048580:	6a 02                	push   0x2
 8048582:	6a 00                	push   0x0
 8048584:	50                   	push   eax
 8048585:	e8 96 fe ff ff       	call   8048420 <setvbuf@plt>
 804858a:	83 c4 10             	add    esp,0x10
 804858d:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048593:	8b 00                	mov    eax,DWORD PTR [eax]
 8048595:	6a 00                	push   0x0
 8048597:	6a 02                	push   0x2
 8048599:	6a 00                	push   0x0
 804859b:	50                   	push   eax
 804859c:	e8 7f fe ff ff       	call   8048420 <setvbuf@plt>
 80485a1:	83 c4 10             	add    esp,0x10
 80485a4:	83 ec 08             	sub    esp,0x8
 80485a7:	8d 83 36 e5 ff ff    	lea    eax,[ebx-0x1aca]
 80485ad:	50                   	push   eax
 80485ae:	6a 0e                	push   0xe
 80485b0:	e8 1b fe ff ff       	call   80483d0 <signal@plt>
 80485b5:	83 c4 10             	add    esp,0x10
 80485b8:	83 ec 0c             	sub    esp,0xc
 80485bb:	6a 78                	push   0x78
 80485bd:	e8 1e fe ff ff       	call   80483e0 <alarm@plt>
 80485c2:	83 c4 10             	add    esp,0x10
 80485c5:	90                   	nop
 80485c6:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 80485c9:	c9                   	leave  
 80485ca:	c3                   	ret    

080485cb <feedme>:
 80485cb:	55                   	push   ebp
 80485cc:	89 e5                	mov    ebp,esp
 80485ce:	53                   	push   ebx
 80485cf:	83 ec 44             	sub    esp,0x44
 80485d2:	e8 56 00 00 00       	call   804862d <__x86.get_pc_thunk.ax>
 80485d7:	05 29 1a 00 00       	add    eax,0x1a29
 80485dc:	83 ec 04             	sub    esp,0x4
 80485df:	68 00 01 00 00       	push   0x100
 80485e4:	8d 55 b8             	lea    edx,[ebp-0x48]
 80485e7:	52                   	push   edx
 80485e8:	6a 00                	push   0x0
 80485ea:	89 c3                	mov    ebx,eax
 80485ec:	e8 cf fd ff ff       	call   80483c0 <read@plt>
 80485f1:	83 c4 10             	add    esp,0x10
 80485f4:	90                   	nop
 80485f5:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 80485f8:	c9                   	leave  
 80485f9:	c3                   	ret    

080485fa <main>:
 80485fa:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 80485fe:	83 e4 f0             	and    esp,0xfffffff0
 8048601:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 8048604:	55                   	push   ebp
 8048605:	89 e5                	mov    ebp,esp
 8048607:	51                   	push   ecx
 8048608:	83 ec 04             	sub    esp,0x4
 804860b:	e8 1d 00 00 00       	call   804862d <__x86.get_pc_thunk.ax>
 8048610:	05 f0 19 00 00       	add    eax,0x19f0
 8048615:	e8 4a ff ff ff       	call   8048564 <setup>
 804861a:	e8 ac ff ff ff       	call   80485cb <feedme>
 804861f:	b8 00 00 00 00       	mov    eax,0x0
 8048624:	83 c4 04             	add    esp,0x4
 8048627:	59                   	pop    ecx
 8048628:	5d                   	pop    ebp
 8048629:	8d 61 fc             	lea    esp,[ecx-0x4]
 804862c:	c3                   	ret    

0804862d <__x86.get_pc_thunk.ax>:
 804862d:	8b 04 24             	mov    eax,DWORD PTR [esp]
 8048630:	c3                   	ret    
 8048631:	66 90                	xchg   ax,ax
 8048633:	66 90                	xchg   ax,ax
 8048635:	66 90                	xchg   ax,ax
 8048637:	66 90                	xchg   ax,ax
 8048639:	66 90                	xchg   ax,ax
 804863b:	66 90                	xchg   ax,ax
 804863d:	66 90                	xchg   ax,ax
 804863f:	90                   	nop

08048640 <__libc_csu_init>:
 8048640:	55                   	push   ebp
 8048641:	57                   	push   edi
 8048642:	56                   	push   esi
 8048643:	53                   	push   ebx
 8048644:	e8 27 fe ff ff       	call   8048470 <__x86.get_pc_thunk.bx>
 8048649:	81 c3 b7 19 00 00    	add    ebx,0x19b7
 804864f:	83 ec 0c             	sub    esp,0xc
 8048652:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 8048656:	8d b3 08 ff ff ff    	lea    esi,[ebx-0xf8]
 804865c:	e8 2b fd ff ff       	call   804838c <_init>
 8048661:	8d 83 04 ff ff ff    	lea    eax,[ebx-0xfc]
 8048667:	29 c6                	sub    esi,eax
 8048669:	c1 fe 02             	sar    esi,0x2
 804866c:	85 f6                	test   esi,esi
 804866e:	74 25                	je     8048695 <__libc_csu_init+0x55>
 8048670:	31 ff                	xor    edi,edi
 8048672:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048678:	83 ec 04             	sub    esp,0x4
 804867b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804867f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048683:	55                   	push   ebp
 8048684:	ff 94 bb 04 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xfc]
 804868b:	83 c7 01             	add    edi,0x1
 804868e:	83 c4 10             	add    esp,0x10
 8048691:	39 fe                	cmp    esi,edi
 8048693:	75 e3                	jne    8048678 <__libc_csu_init+0x38>
 8048695:	83 c4 0c             	add    esp,0xc
 8048698:	5b                   	pop    ebx
 8048699:	5e                   	pop    esi
 804869a:	5f                   	pop    edi
 804869b:	5d                   	pop    ebp
 804869c:	c3                   	ret    
 804869d:	8d 76 00             	lea    esi,[esi+0x0]

080486a0 <__libc_csu_fini>:
 80486a0:	f3 c3                	repz ret 

Disassembly of section .fini:

080486a4 <_fini>:
 80486a4:	53                   	push   ebx
 80486a5:	83 ec 08             	sub    esp,0x8
 80486a8:	e8 c3 fd ff ff       	call   8048470 <__x86.get_pc_thunk.bx>
 80486ad:	81 c3 53 19 00 00    	add    ebx,0x1953
 80486b3:	83 c4 08             	add    esp,0x8
 80486b6:	5b                   	pop    ebx
 80486b7:	c3                   	ret    
