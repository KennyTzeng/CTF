Gadgets information
============================================================
0x00000000004941e8 : adc ah, ah ; stc ; call qword ptr [rax]
0x000000000043d32f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d399 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d03d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004aca71 : adc al, 0 ; add byte ptr [rbx - 0xa], ch ; jmp rdx
0x000000000042d775 : adc al, 0x13 ; jmp rdx
0x00000000004aca70 : adc al, 0x14 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; movsxd rsi, esi ; jmp rdx
0x0000000000425a35 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048cd5a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e8a1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000444700 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000004b1270 : adc al, 0x5c ; add byte ptr [rax], al ; jl 0x4b12ef ; cli ; jmp rax
0x0000000000471cc8 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043e7c0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043ceee : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042d771 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040d250 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000424637 : adc al, 0xa ; jmp r10
0x0000000000425ba3 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000446c7f : adc al, 0xe ; cmp rdi, rdx ; jb 0x446c92 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042a01a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042bcea : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x00000000004126ab : adc al, 0xf6 ; ret 0x7420
0x000000000048d0dd : adc al, 0xf7 ; ret
0x0000000000494d0d : adc al, 0xfa ; jmp qword ptr [rax]
0x00000000004b2de1 : adc al, 0xfc ; jmp qword ptr [rax]
0x0000000000424256 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000043d4d7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d541 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040101a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000047bb6c : adc al, ch ; cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000048c9ad : adc bh, al ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004184fe : adc bh, byte ptr [rax] ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042459a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x0000000000494579 : adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x00000000004943b9 : adc bh, dl ; call rsi
0x00000000004943b5 : adc bh, dl ; inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x0000000000494d45 : adc bh, dl ; jmp qword ptr [rax + 0x20fffa13]
0x0000000000494288 : adc bl, ah ; stc ; call qword ptr [rax]
0x0000000000440bc5 : adc bl, ch ; call 0xffffffffc414951a
0x0000000000440ae5 : adc bl, ch ; call 0xffffffffc43c943a
0x0000000000482c82 : adc bl, ch ; jno 0x482cd8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000444036 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004440a7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444007 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444035 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047f0fa : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000418f35 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004836ee : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045bce9 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000483f03 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045af05 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045b6e6 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000481bdf : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000411322 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041851f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047c1ff : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041134d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000483efd : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041e7a3 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041aadc : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041ae58 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000423796 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000481be0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412dae : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000411323 : adc byte ptr [rax + 1], cl ; ret
0x0000000000410727 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000400e4e : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000475935 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000488bdf : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000041c73d : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044bd85 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000458608 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000470957 : adc byte ptr [rax - 0x77], cl ; jo 0x470975 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470917 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000047091b : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000421f4f : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041db11 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x0000000000418520 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000416cff : adc byte ptr [rax - 0x78], al ; jl 0x416d21 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440da7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000440de3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401020 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004195d3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004552e8 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x00000000004a4c48 : adc byte ptr [rax - 3], bh ; jmp qword ptr [rbx]
0x0000000000493e14 : adc byte ptr [rax - 7], al ; call qword ptr [rax + 0x10fff941]
0x000000000043ed8c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d6e1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000447f5c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000494ab0 : adc byte ptr [rax], ch ; cli ; call rax
0x000000000048e008 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048ae68 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x0000000000493fb4 : adc byte ptr [rbp - 0x721f0007], cl ; stc ; jmp rax
0x00000000004139e4 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000410593 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000418f36 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b3887 : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044bd93 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044bd92 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000418102 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000470e4e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000493e1c : adc byte ptr [rbx - 7], al ; call qword ptr [rax + 0x10fff944]
0x000000000041134e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000471f53 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000494058 : adc byte ptr [rcx + rdi*8 - 0x64a0f01], dh ; call rax
0x0000000000493df4 : adc byte ptr [rcx + rdi*8], dh ; call qword ptr [rax + 0x10fff935]
0x000000000044ad02 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048aa6f : adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000418e87 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000045bc81 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042a0ad : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000494380 : adc byte ptr [rcx], 0xfa ; call qword ptr [rax]
0x000000000048253a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004488b9 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000418105 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000411c97 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049505c : adc byte ptr [rdi], ch ; sti ; lcall ptr [rsi + rbp] ; sti ; call qword ptr [rdi]
0x00000000004836ef : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045bcea : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000444913 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042a491 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a581 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a3a1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ade9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042a941 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a0d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042ab21 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a2b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042ad01 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ac11 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a553 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a643 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a463 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a1c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a373 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a193 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a283 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a0a3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045af06 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045b6e7 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000449c89 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000493dfc : adc byte ptr [rdi], dh ; stc ; call qword ptr [rax + 0x10fff938]
0x0000000000483db1 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x00000000004830ed : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004acedb : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042dc69 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004b186c : adc byte ptr [rdx], ah ; add al, dh ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rax]
0x0000000000493e04 : adc byte ptr [rdx], bh ; stc ; call qword ptr [rax + 0x10fff93b]
0x000000000042cbab : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000493e0c : adc byte ptr [rip + 0x3e90fff9], bh ; stc ; call qword ptr [rax]
0x000000000042ca5a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042c055 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000424785 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438cab : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000049403c : adc byte ptr [rsi - 0x480f0007], dh ; stc ; jmp rax
0x0000000000493fb0 : adc byte ptr [rsi - 0x72ef0007], 0xf9 ; jmp rax
0x0000000000462f3c : adc ch, 0xf9 ; dec dword ptr [rax + 0x29] ; ret
0x000000000042417a : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000494b58 : adc ch, byte ptr [rbx] ; cli ; call qword ptr [rdx + 0x12fffa2a]
0x0000000000494b50 : adc ch, byte ptr [rdx + rdi*8] ; call qword ptr [rdx + 0x12fffa2b]
0x0000000000494b48 : adc ch, byte ptr [rip + 0x2c92fffa] ; cli ; call qword ptr [rdx]
0x0000000000494b40 : adc ch, byte ptr [rsi] ; cli ; call qword ptr [rdx + 0x12fffa2d]
0x0000000000494284 : adc cl, ah ; stc ; call qword ptr [rax]
0x000000000045d1cf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044c34a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000440ad5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000045d1d2 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000485dba : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045bfa5 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000494ee4 : adc cl, dh ; cli ; jmp qword ptr [rax]
0x000000000047f29c : adc cl, dl ; and eax, dword ptr [rax] ; ret
0x00000000004ab589 : adc dh, bh ; call rax
0x00000000004ab585 : adc dh, bh ; inc ebp ; adc dh, bh ; call rax
0x00000000004b0a90 : adc dh, bh ; stc ; call qword ptr [rax]
0x00000000004b3f30 : adc dh, cl ; cld ; jmp qword ptr [rsi]
0x0000000000494f3c : adc dh, dh ; cli ; jmp qword ptr [rax]
0x000000000041c18e : adc dh, dh ; ret 0xf0f
0x00000000004941e4 : adc dl, ah ; stc ; call qword ptr [rax]
0x000000000049444d : adc dl, bh ; call qword ptr [rdx + 0x22fffa0f]
0x00000000004943c9 : adc dl, bh ; call qword ptr [rsi]
0x0000000000494589 : adc dl, bh ; call rax
0x0000000000494585 : adc dl, bh ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x0000000000494d01 : adc dl, bh ; jmp qword ptr [rax + 0x20fffa11]
0x0000000000494d41 : adc dl, bh ; jmp qword ptr [rax]
0x0000000000494509 : adc dl, bh ; jmp rsp
0x0000000000494588 : adc dl, dil ; call rax
0x000000000046fd2b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045a8ad : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000041133f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000040513f : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000004714e4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000043ed8b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043d677 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ec8f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045af15 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000446ed8 : adc dword ptr [rbx], eax ; ret
0x0000000000446e51 : adc dword ptr [rbx], esp ; ret
0x00000000004385d7 : adc dword ptr [rcx + 7], edi ; ret
0x0000000000446e4c : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000489726 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000438272 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000438236 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046f12e : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x46f104
0x0000000000446ed3 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446c33 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000446db5 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000446dba : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000446d92 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446d97 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000438739 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000446c30 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000495084 : adc dword ptr [rdi], ebp ; sti ; call qword ptr [rcx]
0x0000000000446a2c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000446b5f : adc dword ptr [rsi + 3], edx ; ret
0x0000000000446bfc : adc dword ptr [rsi + 7], edx ; ret
0x00000000004469fe : adc dword ptr [rsi - 1], edx ; ret
0x000000000048ace6 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043d676 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000424254 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000494d4d : adc eax, 0x16a0fffa ; cli ; jmp qword ptr [rax]
0x00000000004235a0 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x0000000000424430 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x00000000004241c5 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000423539 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x000000000045a889 : adc eax, 0x26022a ; je 0x45a8a0 ; ret
0x000000000044d167 : adc eax, 0x26b94c ; pop rbx ; ret
0x0000000000423570 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x0000000000418e24 : adc eax, 0x2a0a07 ; ret
0x000000000047426b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000047bad2 : adc eax, 0x4000003 ; ret
0x000000000047ba22 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x000000000042367a : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x000000000043d201 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000469385 : adc eax, 0x83fffffd ; ret
0x0000000000478bd1 : adc eax, 0x89000003 ; ret 0xe8c0
0x000000000047473a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000004244f4 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x00000000004243b4 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x0000000000447a84 : adc eax, 0xf880272 ; ret
0x0000000000473ba5 : adc eax, 0xfffd4086 ; cmove rax, rdx ; ret
0x000000000043eaee : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042353b : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000484269 : adc eax, eax ; ret
0x00000000004843a6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a77c5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004129d7 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047593c : adc ebx, esi ; ret
0x0000000000416f1a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040ea61 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004575d4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000468b76 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r10 + rax*8]
0x000000000047ef9e : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f03b : adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000494d09 : adc edi, edx ; jmp qword ptr [rax + 0x20fffa14]
0x0000000000494d49 : adc edi, edx ; jmp qword ptr [rax]
0x0000000000494381 : adc edx, edi ; call qword ptr [rax]
0x000000000049457d : adc edx, edi ; jmp qword ptr [rax]
0x0000000000494441 : adc edx, edi ; jmp rdx
0x00000000004a8cde : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004162e3 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048de7c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004126a9 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000004ab59d : adc esi, edi ; call qword ptr [rcx + rdx]
0x00000000004ab5a9 : adc esi, edi ; call qword ptr [rcx]
0x00000000004ab5a1 : adc esi, edi ; jmp qword ptr [rdi]
0x00000000004ab1d9 : adc esi, edi ; jmp rsp
0x00000000004385d6 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000438271 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000438235 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000438738 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000446b5e : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000446bfb : adc qword ptr [rsi + 7], rdx ; ret
0x00000000004469fd : adc qword ptr [rsi - 1], rdx ; ret
0x00000000004943b8 : adc r15b, dl ; call rsi
0x00000000004843a5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004af73f : add ah, ah ; add byte ptr [rax], al ; or al, 0x82 ; stc ; call qword ptr [rdx]
0x00000000004b4e2b : add ah, ah ; std ; jmp rsp
0x0000000000447eae : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000447f8b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000447ef9 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000446b5a : add ah, byte ptr [rdx - 0xf] ; jl 0x446baf ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b2792 : add ah, byte ptr [rsi + rcx + 8] ; ret
0x000000000045a88b : add ah, byte ptr [rsi] ; add byte ptr [rax + rcx - 0xd], dh ; ret
0x00000000004b1883 : add ah, ch ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000004adf53 : add ah, cl ; sal dh, cl ; call qword ptr [rax]
0x00000000004b4e27 : add ah, cl ; xchg eax, edi ; add byte ptr [rax], al ; in al, 0x36 ; std ; jmp rsp
0x0000000000493cc8 : add ah, dh ; clc ; call rax
0x0000000000400a59 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004ac0db : add ah, dh ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004adf4f : add ah, dh ; sub byte ptr [rax], al ; add ah, cl ; sal dh, cl ; call qword ptr [rax]
0x00000000004b1a4b : add ah, dl ; fdivp st(2) ; call qword ptr [rsi]
0x0000000000452f13 : add al, 0 ; add bh, dh ; ret 0
0x0000000000452f07 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000456c0f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000410ec0 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000004abae5 : add al, 0 ; add byte ptr [rax - 0x6b], cl ; cmc ; call qword ptr [rdx]
0x000000000042aa07 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046f046 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000043f9af : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aa35 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048dfa0 : add al, 0 ; add byte ptr [rax], al ; jne 0x48dfc7 ; ret
0x00000000004747c3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000004abaf9 : add al, 0 ; add byte ptr [rbp + rdx*4 - 0xb], dl ; call rsp
0x00000000004724e0 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a001 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ac04 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409ec0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000004241a5 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x0000000000448fd1 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000447e55 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000047593b : add al, 0x11 ; ret
0x0000000000447f44 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000425a31 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000004259ca : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000486bb0 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048abe7 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048a8eb : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000489ae4 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045a8ea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004841bb : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484207 ; leave ; ret
0x000000000040e967 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000047330e : add al, 0x31 ; ret
0x000000000047320a : add al, 0x37 ; ret
0x000000000041779f : add al, 0x3a ; ret
0x000000000047f876 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f82a ; xor eax, eax ; ret
0x000000000044456b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000443a79 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000443a8b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000048d0f0 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x000000000043517a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004422b9 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004735e4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047e606 : add al, 0x4c ; cmp ecx, eax ; jne 0x47e5b4 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000473ea8 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000045624a : add al, 0x4d ; cmp ebp, ebx ; jb 0x4562c0 ; mov rdx, rax ; jmp 0x456217
0x0000000000443a87 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000004422c7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004575d2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000046e828 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043ceeb : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043e7c3 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000401f37 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000448488 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448478 ; ret
0x000000000043aaf7 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044d239 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048bf8a : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000466949 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000474299 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048c88b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046e6bc : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048af39 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000046ee58 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000443a76 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00000000004422b6 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000004b3e60 : add al, 0x88 ; add byte ptr [rax], al ; sbb al, 0xcb ; cld ; call rdx
0x000000000048ad13 : add al, 0x88 ; add rax, r8 ; jmp rax
0x000000000044848b : add al, 0x8a ; je 0x448475 ; ret
0x0000000000447f13 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000048c4c3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000448fd5 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047c01f : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047c947 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000447e59 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046ba20 : add al, 0xc6 ; jmp rax
0x0000000000460bba : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x000000000046121a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460b70 : add al, 0xc7 ; jmp rax
0x000000000046ba5b : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x00000000004842fd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x484359
0x00000000004880fd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x488159
0x0000000000458ec1 : add al, 0xe8 ; test rax, rax ; je 0x458ed1 ; call rax
0x0000000000484ba8 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a016 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000044696b : add al, 0xf ; sub rax, rsi ; ret
0x00000000004354e3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000044964b : add al, 0xf3 ; ret
0x000000000046062e : add al, 0xf8 ; jmp rax
0x000000000049471d : add al, 0xfa ; call rsp
0x00000000004945dd : add al, 0xfa ; jmp qword ptr [rax]
0x00000000004ab125 : add al, 0xfe ; jmp rsp
0x000000000040ef87 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042d2b7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043fedd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046ba1c : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004400f8 : add al, 7 ; ret
0x0000000000425b9f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b2c3b : add al, ah ; jne 0x4b2c47 ; add al, al ; or edi, esp ; jmp qword ptr [rax]
0x00000000004af81b : add al, al ; add byte ptr [r8], al ; jo 0x4af7ae ; stc ; call qword ptr [rbx]
0x00000000004b561b : add al, al ; lahf ; add byte ptr [rax], al ; push rax ; test ebp, edi ; call qword ptr [rbx]
0x00000000004b2c3f : add al, al ; or edi, esp ; jmp qword ptr [rax]
0x000000000049efe7 : add al, al ; sldt word ptr [rax] ; ret
0x0000000000494f88 : add al, bh ; cli ; jmp qword ptr [rax]
0x0000000000447fa5 : add al, bh ; jg 0x447fa7 ; int1 ; mov eax, eax ; ret
0x00000000004b3053 : add al, bh ; jns 0x4b305f ; add al, bl ; and edi, esp ; jmp qword ptr [rcx]
0x00000000004b0953 : add al, bh ; push rdx ; add byte ptr [rax], al ; pop rax ; sti ; std ; jmp qword ptr [rdx]
0x00000000004ac0c7 : add al, bh ; sub al, 0xf6 ; call qword ptr [rax]
0x00000000004b3057 : add al, bl ; and edi, esp ; jmp qword ptr [rcx]
0x00000000004b1233 : add al, bl ; pop rbx ; add byte ptr [rax], al ; or bl, dh ; std ; jmp qword ptr [rdi]
0x00000000004afbe7 : add al, bl ; xchg eax, esi ; stc ; jmp qword ptr [rcx]
0x0000000000440ad1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000040101b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000454f0d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047ae80 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000045f4b3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042af12 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000487fde : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045a97d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000401005 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000468814 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000423153 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047c1fa : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000478335 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000447494 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042145a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004546ab : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042abe7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e581 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ac15 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045a872 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047daf6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044a429 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000474554 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000445f14 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000410926 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x00000000004858e4 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000041ab26 : add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000424153 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x000000000042353c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000048ace2 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c01b : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047c943 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000484d2a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d17a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d16e
0x000000000044ad05 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044bb4e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004abe9d : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000424521 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x000000000042430d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x000000000041a2eb : add al, ch ; call qword ptr [rdi]
0x000000000041f829 : add al, ch ; int1 ; ret 2
0x000000000046f84b : add al, ch ; lahf ; ret 0xfffd
0x00000000004b01e7 : add al, ch ; mov bh, 0xf9 ; call qword ptr [rcx]
0x000000000044f7c4 : add al, ch ; push rsi ; ret
0x0000000000400ee6 : add al, ch ; push rsp ; ret 4
0x000000000040fe87 : add al, ch ; ret
0x0000000000421328 : add al, ch ; ret 0x2a7
0x0000000000465ac8 : add al, ch ; ret 0xb1
0x00000000004b1857 : add al, ch ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rbx]
0x0000000000452249 : add al, ch ; xchg eax, ecx ; clc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004b4723 : add al, cl ; nop ; add byte ptr [rax], al ; call 0xffffffffe34b443a
0x00000000004b464b : add al, dh ; pop qword ptr [rax] ; add byte ptr [rax + 2], dl ; std ; jmp qword ptr [rdx]
0x00000000004b074b : add al, dh ; push rax ; add byte ptr [rax], al ; xlatb ; std ; hlt ; jmp qword ptr [rbx]
0x00000000004b044f : add al, dh ; ret
0x00000000004b186f : add al, dh ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b3e4b : add al, dh ; xchg dword ptr [rax], eax ; add byte ptr [rax], al ; retf ; cld ; jmp qword ptr [rcx]
0x00000000004a38ff : add al, dl ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x00000000004b3d9e : add bh, ah ; ret
0x000000000044e5bf : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045e807 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea5f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040101d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004857af : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004942a0 : add bh, bl ; stc ; call rax
0x0000000000484439 : add bh, byte ptr [rax + 1] ; ret
0x0000000000484596 : add bh, byte ptr [rax + 2] ; ret
0x000000000044936b : add bh, byte ptr [rax - 1] ; ret
0x00000000004462e2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004b4651 : add bh, ch ; jmp qword ptr [rdx]
0x0000000000494f64 : add bh, dh ; cli ; jmp qword ptr [rax]
0x0000000000400dea : add bh, dh ; ret 0
0x0000000000452f09 : add bh, dh ; ret 0xf800
0x000000000040f09f : add bh, dh ; ret 0xffef
0x00000000004947a9 : add bh, dl ; call qword ptr [rax]
0x000000000049466d : add bh, dl ; call rdx
0x0000000000494669 : add bh, dl ; inc dword ptr [rdx + 2] ; cli ; call rdx
0x00000000004b0b15 : add bh, dl ; jmp qword ptr [rdx]
0x00000000004945ed : add bh, dl ; jmp rsi
0x00000000004b074f : add bh, dl ; std ; hlt ; jmp qword ptr [rbx]
0x00000000004942f8 : add bl, 0xf9 ; call rax
0x0000000000474551 : add bl, al ; mov eax, 2 ; ret
0x0000000000487ffa : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000463399 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x463332 ; ret
0x0000000000489f0b : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000485a79 : add bl, ch ; ret
0x000000000040f338 : add bl, ch ; ret 0x1f0f
0x00000000004b3e50 : add bl, cl ; cld ; jmp qword ptr [rcx]
0x000000000048ace3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a5f : add bl, dh ; ret
0x000000000041ae1e : add bl, sil ; ret
0x0000000000481490 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000472786 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004550b5 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040e15a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b01e5 : add byte ptr [r8], al ; call 0x124afbaa
0x00000000004af81d : add byte ptr [r8], al ; jo 0x4af7ac ; stc ; call qword ptr [rbx]
0x00000000004aff91 : add byte ptr [r8], al ; pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x00000000004af791 : add byte ptr [r8], al ; sub al, 0x82 ; stc ; jmp rbx
0x00000000004b05cd : add byte ptr [r8], r8b ; push rax ; fyl2xp1 ; call qword ptr [rax]
0x000000000042324f : add byte ptr [rax + 0x16], bh ; ret
0x00000000004af3fb : add byte ptr [rax + 0x2000003d], ah ; hlt ; clc ; call qword ptr [rax]
0x0000000000411f40 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000452691 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004531f7 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000465b58 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047a80a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000040ea3f : add byte ptr [rax + 0x39], cl ; ret
0x000000000048aee3 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000419e2f : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000412f2f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048af78 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047ae82 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041ccf0 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x00000000004781de : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004af3d3 : add byte ptr [rax + 0x3d], bh ; add byte ptr [rax], al ; cwde ; fdivr st(0) ; call qword ptr [rax]
0x00000000004af3ab : add byte ptr [rax + 0x3d], dl ; add byte ptr [rax], al ; jo 0x4af371 ; clc ; call qword ptr [rax]
0x00000000004ab0a5 : add byte ptr [rax + 0x40], al ; js 0x4ab0ac ; std ; call rax
0x00000000004af517 : add byte ptr [rax + 0x46], bh ; stc ; jmp qword ptr [rbx]
0x00000000004abae3 : add byte ptr [rax + 0x48000004], cl ; xchg eax, ebp ; cmc ; call qword ptr [rdx]
0x00000000004b05cb : add byte ptr [rax + 0x4f], dh ; add byte ptr [rax], al ; push rax ; fyl2xp1 ; call qword ptr [rax]
0x00000000004adaeb : add byte ptr [rax + 0x50000024], dl ; mov ah, 0xf6 ; call qword ptr [rsi]
0x000000000040d24d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046e825 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000401f34 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046ee55 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000448fd2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000447e56 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000459417 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048c9b3 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000046f323 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045d931 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000047545f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000004afee3 : add byte ptr [rax + 0x68000048], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000047547f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000047546f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x000000000047548f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x0000000000489723 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000440acf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004af513 : add byte ptr [rax + 0x7800003e], bh ; stc ; jmp qword ptr [rbx]
0x000000000044450f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004ac0c3 : add byte ptr [rax + 0xa], ch ; add byte ptr [rax], al ; clc ; sub al, 0xf6 ; call qword ptr [rax]
0x0000000000424479 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x0000000000447f27 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x00000000004152af : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473175 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000044f98f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041caa4 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047b016 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x00000000004235c4 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000412c5a : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041db53 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047b065 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000447e9a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000042353d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042423d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000453d28 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004843fc : add byte ptr [rax + 1], bh ; ret
0x000000000042af14 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000410ec2 : add byte ptr [rax + 1], cl ; ret
0x0000000000483608 : add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000487fe0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x0000000000484605 : add byte ptr [rax + 2], bh ; ret
0x00000000004b464f : add byte ptr [rax + 2], dl ; std ; jmp qword ptr [rdx]
0x0000000000481491 : add byte ptr [rax + 9], cl ; ret 0x840f
0x0000000000476080 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049df8b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004af6c7 : add byte ptr [rax + rax*2], ch ; add byte ptr [rcx + rdi*2], dh ; stc ; call rsp
0x00000000004501e3 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x00000000004724df : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004241a4 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041d9fb : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473b87 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b2a5c : add byte ptr [rax + rax], dh ; mov al, 0xfc ; sti ; jmp qword ptr [rbx]
0x00000000004b1edf : add byte ptr [rax + rbp*2 - 0x6d540000], al ; sti ; jmp qword ptr [rax]
0x000000000045a88d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045a97f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004b3e5f : add byte ptr [rax + rcx*4], al ; add byte ptr [rax], al ; sbb al, 0xcb ; cld ; call rdx
0x000000000049f137 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000047b8d4 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x00000000004b43df : add byte ptr [rax - 0x16], dh ; cld ; jmp qword ptr [rcx]
0x000000000041cf0f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004b01e3 : add byte ptr [rax - 0x17ffffb5], cl ; mov bh, 0xf9 ; call qword ptr [rcx]
0x00000000004b05cf : add byte ptr [rax - 0x27], dl ; stc ; call qword ptr [rax]
0x00000000004afbe3 : add byte ptr [rax - 0x27ffffbb], cl ; xchg eax, esi ; stc ; jmp qword ptr [rcx]
0x0000000000401007 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040fce3 : add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000464efb : add byte ptr [rax - 0x39], cl ; ret 0xb2c8
0x000000000045d1bf : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040dbd7 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000423155 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000467e85 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x00000000004747af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047478f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004747ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047479f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004747df : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004585d9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004585b0 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000457f10 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000004b0337 : add byte ptr [rax - 0x47], ch ; stc ; call qword ptr [rcx]
0x00000000004af3af : add byte ptr [rax - 0x49], dh ; clc ; call qword ptr [rax]
0x00000000004612bf : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004b4df3 : add byte ptr [rax - 0x57ffff69], bl ; std ; jmp qword ptr [rcx]
0x00000000004afee7 : add byte ptr [rax - 0x5c], ch ; stc ; jmp qword ptr [rcx]
0x00000000004b5b87 : add byte ptr [rax - 0x5f], cl ; std ; jmp qword ptr [rax]
0x00000000004b2ddb : add byte ptr [rax - 0x5fffff89], al ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004abb87 : add byte ptr [rax - 0x65], bh ; cmc ; call rax
0x00000000004b50ab : add byte ptr [rax - 0x66], dl ; add byte ptr [rax], al ; nop ; pop rcx ; std ; call qword ptr [rdx]
0x00000000004aff13 : add byte ptr [rax - 0x67ffffb8], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004ac003 : add byte ptr [rax - 0x67fffff7], ch ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004af387 : add byte ptr [rax - 0x6b], bl ; clc ; call qword ptr [rax]
0x00000000004abae7 : add byte ptr [rax - 0x6b], cl ; cmc ; call qword ptr [rdx]
0x00000000004b14c7 : add byte ptr [rax - 0x72], bl ; cli ; call qword ptr [rdx]
0x0000000000454eaa : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000045702d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044d12f : add byte ptr [rax - 0x73], cl ; add eax, 0x26d1c9 ; ret
0x000000000045704b : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457069 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000477e86 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041c18a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041e79f : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041aad8 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046b4fb : add byte ptr [rax - 0x73], cl ; xor eax, 0x24b91d ; jmp rax
0x000000000047c1fc : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004195cf : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485db7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048a8e8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000461217 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460b6d : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000046062b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000045772f : add byte ptr [rax - 0x75], cl ; add eax, 0x264741 ; ret
0x000000000044f22f : add byte ptr [rax - 0x75], cl ; add eax, 0x26d6f1 ; ret
0x00000000004183ff : add byte ptr [rax - 0x75], cl ; add eax, 0x2a0d19 ; ret
0x000000000040defb : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044e67f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000042262f : add byte ptr [rax - 0x75], cl ; je 0x422661 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045b31b : add byte ptr [rax - 0x75], cl ; jl 0x45b34c ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040e992 : add byte ptr [rax - 0x75], cl ; js 0x40e9bc ; call rdx
0x0000000000471ddf : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000486b00 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400ecd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042f09f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041206f : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000484896 : add byte ptr [rax - 0x77], cl ; add eax, 0x2377ca ; ret
0x000000000041949a : add byte ptr [rax - 0x77], cl ; add eax, 0x2a03be ; ret
0x0000000000418f95 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0853 ; ret
0x0000000000418f6d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0873 ; ret
0x0000000000418f4d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a088b ; ret
0x00000000004126f2 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000414453 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004550b6 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000048b38e : add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x0000000000417feb : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000400b34 : add byte ptr [rax - 0x77], cl ; in eax, 0xe8 ; ret
0x000000000044bd9f : add byte ptr [rax - 0x77], cl ; jo 0x44bdc9 ; ret
0x0000000000412843 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00000000004232af : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040382f : add byte ptr [rax - 0x77], cl ; ret
0x00000000004491cb : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041d9a7 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000410f96 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000412e7a : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048e75c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000449277 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402dae : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000045f9e8 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041ac5c : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402b2f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000410198 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000448fa3 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048deaf : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000456118 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000403143 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046a047 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f36d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000004145d8 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004491e2 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000446cf0 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481b11 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048cacf : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047b583 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004100cf : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000045cdf8 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x45cdc8
0x000000000048a9c6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x00000000004735df : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047183b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004b561f : add byte ptr [rax - 0x7b], dl ; std ; call qword ptr [rbx]
0x00000000004b3acb : add byte ptr [rax - 0x7c], dh ; add byte ptr [rax], al ; jp 0x4b3aa4 ; hlt ; jmp qword ptr [rcx]
0x00000000004af81f : add byte ptr [rax - 0x7c], dh ; stc ; call qword ptr [rbx]
0x000000000048ec0e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000047e147 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12d57
0x000000000047e146 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12d58
0x000000000041f95c : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041cd97 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041c9f4 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047f82d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004234fd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401a69 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000461723 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a6f1 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041682f : add byte ptr [rax - 0x7d], cl ; jg 0x416875 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041ede2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004717f6 : add byte ptr [rax - 0x7d], cl ; js 0x471834 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000405f3f : add byte ptr [rax - 0x7d], cl ; ret
0x00000000004463df : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044c147 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046ee67 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f1bf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455d74 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000048582f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dafa : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045d914 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042a0a9 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e437 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048de8f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046f048 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000423f00 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043d063 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a0d7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047ddb7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000425adf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000047371f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000489492 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000041a2e4 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call qword ptr [rdi]
0x0000000000415950 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000045a874 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000432d0b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004afefb : add byte ptr [rax - 0x7fffffb8], ah ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004119fa : add byte ptr [rax - 1], bh ; ret
0x00000000004b0957 : add byte ptr [rax - 5], bl ; std ; jmp qword ptr [rdx]
0x000000000041a2e8 : add byte ptr [rax], 0 ; add al, ch ; call qword ptr [rdi]
0x000000000041f826 : add byte ptr [rax], 0 ; add al, ch ; int1 ; ret 2
0x000000000046f848 : add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000044f7c1 : add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000412a24 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000421325 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2a7
0x000000000041577a : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00000000004145d5 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004354eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000447edb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000418213 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042bd6b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c2d1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af3ff : add byte ptr [rax], ah ; hlt ; clc ; call qword ptr [rax]
0x00000000004aca6e : add byte ptr [rax], al ; adc al, 0x14 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; movsxd rsi, esi ; jmp rdx
0x00000000004b126e : add byte ptr [rax], al ; adc al, 0x5c ; add byte ptr [rax], al ; jl 0x4b12f1 ; cli ; jmp rax
0x00000000004b186a : add byte ptr [rax], al ; adc byte ptr [rdx], ah ; add al, dh ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b0a8e : add byte ptr [rax], al ; adc dh, bh ; stc ; call qword ptr [rax]
0x00000000004b3f2e : add byte ptr [rax], al ; adc dh, cl ; cld ; jmp qword ptr [rsi]
0x00000000004b3e5e : add byte ptr [rax], al ; add al, 0x88 ; add byte ptr [rax], al ; sbb al, 0xcb ; cld ; call rdx
0x000000000041a2e9 : add byte ptr [rax], al ; add al, ch ; call qword ptr [rdi]
0x000000000041f827 : add byte ptr [rax], al ; add al, ch ; int1 ; ret 2
0x000000000046f849 : add byte ptr [rax], al ; add al, ch ; lahf ; ret 0xfffd
0x000000000044f7c2 : add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x000000000040fe85 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000421326 : add byte ptr [rax], al ; add al, ch ; ret 0x2a7
0x0000000000465ac6 : add byte ptr [rax], al ; add al, ch ; ret 0xb1
0x00000000004a38fd : add byte ptr [rax], al ; add al, dl ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x000000000045e84e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea5d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004857ad : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047454f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000485a77 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f336 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000004b3e4e : add byte ptr [rax], al ; add bl, cl ; cld ; jmp qword ptr [rcx]
0x000000000041577b : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000468868 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000465b56 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047a808 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000041efcf : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048aee1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000419e2d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000412f2d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048af76 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000046af84 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000044450d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000447f25 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041caa2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000484ff2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000452d12 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041db51 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000447e98 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000047426d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000453d26 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004843fa : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000482f39 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000483606 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000484603 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000004b2a5a : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; mov al, 0xfc ; sti ; jmp qword ptr [rbx]
0x000000000044a1a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040fce1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000045d1bd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044960d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004585d7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004585ae : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000457f0e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x000000000045702b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000457049 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457067 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x00000000004195cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040e990 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40e9be ; call rdx
0x000000000041842d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000048b38c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000044bd9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44bdcb ; ret
0x00000000004232ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000410111 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000410f94 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000045fe44 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041b62d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048dead : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046a2e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f36b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000004145d6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000048cacd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048a9c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000405f3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004463dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048582d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047daf8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042adc3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048de8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000472a9e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043e721 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aded : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000425add : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000489490 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000434504 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004119f8 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004a38fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x000000000040ea5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004857ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004183eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000412f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000045d1bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044960b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041842b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044bd9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44bdcd ; ret
0x000000000041b62b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048deab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048cacb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000405f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004463db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048de8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000417016 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049fe12 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0302 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000418d8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044661b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000425e2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042473b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004129ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000419b2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042245b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a2eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000047476c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000004819bf : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ea5c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004857ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a1e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a0fec : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000447e97 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000048d094 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48d07c ; ret
0x0000000000485a76 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485a44
0x000000000045fc7d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000444b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000444b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000444b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000444b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000444b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000444abc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444acc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444adc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444aec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444afc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000444b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000444b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000444aac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000400bb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000044450c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000443eec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004183ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004843f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000484602 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000004354ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044bd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x00000000004819cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041841c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041842c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000040f87b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x44bab9
0x0000000000480e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x00000000004129ac : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000447edc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043563c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000418d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041155c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000417018 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a15a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049fe14 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0304 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042b61c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000041732c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004735cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000004448ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3d75 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x0000000000449324 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x0000000000484f2d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048dfa1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004757eb : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000481d52 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481c92 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000457655 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000481eb3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x00000000004841be : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a43d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449554 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x00000000004756b9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x00000000004498e4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044a253 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488288 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045a9cc : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000484e4a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048d0d6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000041ed69 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000044b9d8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000457889 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000434dcd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000413f82 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416f34 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fc89 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d095 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000046cc7d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x0000000000465c8a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000411284 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000460767 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c548 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000469256 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d4e2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000044661d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e0e3 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000491f7d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004739ad : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004916dd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423bed : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044b088 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b097 ; call r12
0x000000000044b0b8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b0c7 ; call r12
0x000000000045f061 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047ce : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000479c02 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041cbc5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000425e2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042473d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042b7f0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042b816 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000040ec72 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b0fa : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000048ce03 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048ce2b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048db7a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004630c3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040db84 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000480f34 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000447e25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000004355cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043563d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000447edd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000004129ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042b13d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004585f9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000476720 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048d005 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000042c2d2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000419b2d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042b062 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000413b75 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045ea88 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000454926 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000400bb5 : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000469d66 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e590 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000450d7c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000042245d : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a2ed : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000445d71 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004b172e : add byte ptr [rax], al ; add dh, dh ; std ; call rdx
0x000000000047476e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042af13 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000411622 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d040 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000048478c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048ab03 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000415eab : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449449 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000000004497dc : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x00000000004014fc : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044af7e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004819c1 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004af3fe : add byte ptr [rax], al ; and ah, dh ; clc ; call qword ptr [rax]
0x00000000004b187e : add byte ptr [rax], al ; and al, 0x62 ; add byte ptr [rax], al ; in al, dx ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x0000000000447f26 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004a4c3e : add byte ptr [rax], al ; and eax, dword ptr [rdi + 0x7458fffd] ; std ; call qword ptr [rax]
0x000000000042b13e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000440760 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000473174 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004b01e6 : add byte ptr [rax], al ; call 0x124afba9
0x00000000004b1856 : add byte ptr [rax], al ; call 0x144b1310
0x00000000004b0242 : add byte ptr [rax], al ; call 0x384b029d
0x000000000046f84a : add byte ptr [rax], al ; call 0x44baf4
0x000000000041f828 : add byte ptr [rax], al ; call 0x44bb24
0x00000000004b5086 : add byte ptr [rax], al ; call 0xffffffffc44b4dea
0x00000000004abf42 : add byte ptr [rax], al ; call 0xffffffffd84abf5a
0x00000000004b4726 : add byte ptr [rax], al ; call 0xffffffffe34b4437
0x000000000040101c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000040ea5e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048ce09 : add byte ptr [rax], al ; call r14
0x000000000040e96b : add byte ptr [rax], al ; call rax
0x00000000004857ae : add byte ptr [rax], al ; call rbx
0x00000000004a1e3e : add byte ptr [rax], al ; call rdi
0x000000000040e8a5 : add byte ptr [rax], al ; call rdx
0x00000000004a0fee : add byte ptr [rax], al ; call rsp
0x0000000000447fa4 : add byte ptr [rax], al ; clc ; jg 0x447fa8 ; int1 ; mov eax, eax ; ret
0x00000000004b3052 : add byte ptr [rax], al ; clc ; jns 0x4b3060 ; add al, bl ; and edi, esp ; jmp qword ptr [rcx]
0x00000000004b0952 : add byte ptr [rax], al ; clc ; push rdx ; add byte ptr [rax], al ; pop rax ; sti ; std ; jmp qword ptr [rdx]
0x00000000004ac0c6 : add byte ptr [rax], al ; clc ; sub al, 0xf6 ; call qword ptr [rax]
0x0000000000447ed1 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000447e99 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000042417c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000423573 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004af396 : add byte ptr [rax], al ; cmp al, 0x3d ; add byte ptr [rax], al ; push rsp ; xchg eax, ebp ; clc ; jmp qword ptr [rsi]
0x000000000047f82c : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000041f3e7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x41f3b8 ; ret
0x00000000004b2a46 : add byte ptr [rax], al ; cwde ; cld ; sti ; jmp qword ptr [rbx]
0x00000000004af3d6 : add byte ptr [rax], al ; cwde ; fdivr st(0) ; call qword ptr [rax]
0x00000000004aff16 : add byte ptr [rax], al ; cwde ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004ac006 : add byte ptr [rax], al ; cwde ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004b4df2 : add byte ptr [rax], al ; cwde ; xchg eax, edi ; add byte ptr [rax], al ; test al, 0x36 ; std ; jmp qword ptr [rcx]
0x00000000004b4256 : add byte ptr [rax], al ; enter -0x320, -1 ; ret
0x00000000004b4722 : add byte ptr [rax], al ; enter 0x90, 0 ; call 0xffffffffe34b443b
0x00000000004b1232 : add byte ptr [rax], al ; fcomp dword ptr [rbx] ; add byte ptr [rax], cl ; std ; jmp qword ptr [rdi]
0x00000000004b3056 : add byte ptr [rax], al ; fsub dword ptr [rbx] ; cld ; jmp qword ptr [rcx]
0x0000000000400a58 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004ac0da : add byte ptr [rax], al ; hlt ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004adf4e : add byte ptr [rax], al ; hlt ; sub byte ptr [rax], al ; add ah, cl ; sal dh, cl ; call qword ptr [rax]
0x00000000004b172f : add byte ptr [rax], al ; idiv ch ; call rdx
0x00000000004b4e2a : add byte ptr [rax], al ; in al, 0x36 ; std ; jmp rsp
0x00000000004af73e : add byte ptr [rax], al ; in al, 0x40 ; add byte ptr [rax], al ; or al, 0x82 ; stc ; call qword ptr [rdx]
0x00000000004b1882 : add byte ptr [rax], al ; in al, dx ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000004af6c6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; xor al, 0x79 ; stc ; call rsp
0x00000000004aca72 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; movsxd rsi, esi ; jmp rdx
0x000000000048db7b : add byte ptr [rax], al ; ja 0x48db88 ; sbb eax, eax ; ret
0x00000000004b11f2 : add byte ptr [rax], al ; jb 0x4b11f6 ; call qword ptr [rdx]
0x0000000000412646 : add byte ptr [rax], al ; je 0x412651 ; ret
0x00000000004241e0 : add byte ptr [rax], al ; je 0x4241af ; ret
0x0000000000473b89 : add byte ptr [rax], al ; je 0x473b95 ; ret
0x000000000048d006 : add byte ptr [rax], al ; je 0x48cff4 ; add rsp, 0x18 ; ret
0x000000000048d096 : add byte ptr [rax], al ; je 0x48d07a ; ret
0x000000000048d0d7 : add byte ptr [rax], al ; je 0x48d0e8 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004ac0d6 : add byte ptr [rax], al ; jl 0x4ac0ed ; add byte ptr [rax], al ; hlt ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004b1272 : add byte ptr [rax], al ; jl 0x4b12ed ; cli ; jmp rax
0x000000000040f337 : add byte ptr [rax], al ; jmp 0x40f300
0x0000000000449161 : add byte ptr [rax], al ; jmp 0x448ff3
0x000000000045cd5f : add byte ptr [rax], al ; jmp 0x45cd28
0x0000000000485a78 : add byte ptr [rax], al ; jmp 0x485a42
0x000000000044a42b : add byte ptr [rax], al ; jmp rax
0x0000000000419d0e : add byte ptr [rax], al ; jne 0x419d21 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042bdd2 : add byte ptr [rax], al ; jne 0x42bce8 ; ret
0x000000000044856d : add byte ptr [rax], al ; jne 0x44859d ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449325 : add byte ptr [rax], al ; jne 0x449341 ; add rsp, 0x28 ; ret
0x0000000000449555 : add byte ptr [rax], al ; jne 0x4495a3 ; add rsp, 0x58 ; ret
0x00000000004498e5 : add byte ptr [rax], al ; jne 0x44993b ; add rsp, 0x68 ; ret
0x000000000044a254 : add byte ptr [rax], al ; jne 0x44a26f ; add rsp, 0x28 ; ret
0x000000000045a9cd : add byte ptr [rax], al ; jne 0x45a9de ; add rsp, 0x18 ; ret
0x00000000004756ba : add byte ptr [rax], al ; jne 0x47570b ; add rsp, 0x58 ; ret
0x00000000004757ec : add byte ptr [rax], al ; jne 0x475813 ; add rsp, 0x38 ; ret
0x0000000000481b98 : add byte ptr [rax], al ; jne 0x481bab ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481c93 : add byte ptr [rax], al ; jne 0x481ccb ; add rsp, 0x38 ; ret
0x0000000000481d53 : add byte ptr [rax], al ; jne 0x481d86 ; add rsp, 0x68 ; ret
0x0000000000481eb4 : add byte ptr [rax], al ; jne 0x481ef6 ; add rsp, 0x78 ; ret
0x0000000000482183 : add byte ptr [rax], al ; jne 0x4821b6 ; add rsp, 0x68 ; ret
0x00000000004841bf : add byte ptr [rax], al ; jne 0x484203 ; leave ; ret
0x0000000000484e4b : add byte ptr [rax], al ; jne 0x484e5c ; add rsp, 0x38 ; ret
0x0000000000484f2e : add byte ptr [rax], al ; jne 0x484f4c ; add rsp, 0x38 ; ret
0x00000000004876f9 : add byte ptr [rax], al ; jne 0x487704 ; pop rbx ; ret
0x0000000000488289 : add byte ptr [rax], al ; jne 0x4882a4 ; add rsp, 0x38 ; ret
0x000000000048dfa2 : add byte ptr [rax], al ; jne 0x48dfc5 ; ret
0x00000000004af3ae : add byte ptr [rax], al ; jo 0x4af36e ; clc ; call qword ptr [rax]
0x00000000004af81e : add byte ptr [rax], al ; jo 0x4af7ab ; stc ; call qword ptr [rbx]
0x00000000004b05ca : add byte ptr [rax], al ; jo 0x4b0626 ; add byte ptr [rax], al ; push rax ; fyl2xp1 ; call qword ptr [rax]
0x00000000004b3aca : add byte ptr [rax], al ; jo 0x4b3a5b ; add byte ptr [rax], al ; jp 0x4b3aa5 ; hlt ; jmp qword ptr [rcx]
0x00000000004b43de : add byte ptr [rax], al ; jo 0x4b43d1 ; cld ; jmp qword ptr [rcx]
0x00000000004b3ace : add byte ptr [rax], al ; jp 0x4b3aa1 ; hlt ; jmp qword ptr [rcx]
0x00000000004ab0a4 : add byte ptr [rax], al ; js 0x4ab0ad ; std ; call rax
0x00000000004abb86 : add byte ptr [rax], al ; js 0x4abb2a ; cmc ; call rax
0x00000000004af3d2 : add byte ptr [rax], al ; js 0x4af41c ; add byte ptr [rax], al ; cwde ; fdivr st(0) ; call qword ptr [rax]
0x00000000004af516 : add byte ptr [rax], al ; js 0x4af565 ; stc ; jmp qword ptr [rbx]
0x0000000000444b3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000444b4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000444b5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000444b6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000444b7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000444a9d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444abe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444ace : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444ade : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444aee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444afe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000444b0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000444a4a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444b1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444b2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000444aae : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000044d12e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x26d1c9] ; ret
0x000000000046b4fa : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x24b91d] ; jmp rax
0x0000000000400bb6 : add byte ptr [rax], al ; leave ; ret
0x00000000004b3e4a : add byte ptr [rax], al ; lock xchg dword ptr [rax], eax ; add byte ptr [rax], al ; retf ; cld ; jmp qword ptr [rcx]
0x00000000004b1ee2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; sti ; jmp qword ptr [rax]
0x00000000004b2c3a : add byte ptr [rax], al ; loopne 0x4b2cbc ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; jmp qword ptr [rax]
0x00000000004b0b0e : add byte ptr [rax], al ; mov ah, 0x54 ; add byte ptr [rax], al ; sub al, 2 ; cli ; jmp qword ptr [rdx]
0x00000000004b04ea : add byte ptr [rax], al ; mov ah, 0xcc ; stc ; jmp qword ptr [rdx]
0x00000000004b2a5e : add byte ptr [rax], al ; mov al, 0xfc ; sti ; jmp qword ptr [rbx]
0x0000000000443a1e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000044226e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004abae2 : add byte ptr [rax], al ; mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x6b], cl ; cmc ; call qword ptr [rdx]
0x00000000004afee2 : add byte ptr [rax], al ; mov byte ptr [rax], cl ; add byte ptr [rax - 0x5c], ch ; stc ; jmp qword ptr [rcx]
0x00000000004afbe2 : add byte ptr [rax], al ; mov byte ptr [rbp], al ; add al, bl ; xchg eax, esi ; stc ; jmp qword ptr [rcx]
0x00000000004b01e2 : add byte ptr [rax], al ; mov byte ptr [rbx], cl ; add al, ch ; mov bh, 0xf9 ; call qword ptr [rcx]
0x00000000004126ee : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000044450e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000443eee : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004718db : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418fac : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a0858], eax ; ret
0x0000000000443efe : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400bb1 : add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x00000000004234ce : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000047545e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x000000000047547e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000047546e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000047548e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000004af512 : add byte ptr [rax], al ; mov eax, 0x7800003e ; stc ; jmp qword ptr [rbx]
0x00000000004aff12 : add byte ptr [rax], al ; mov eax, 0x98000048 ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004119f9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004843fb : add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000484604 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000004180ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048f41e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f439 ; ret
0x000000000048f64e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f669 ; ret
0x000000000047e58f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000468542 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000465ce1 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000443f2e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048ce04 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048ce2c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000434dce : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004354ee : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044bd9e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000484dc8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481b10 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488302 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004883d6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047b554 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048d12e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000484418 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000418f6c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a0873], rax ; ret
0x0000000000418f4c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a088b], rax ; ret
0x000000000041765e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000047478e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047479e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004747ae : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004747be : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004747ce : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004747de : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004747ee : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047cb23 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041154e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004819ce : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047c33e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471dde : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041841e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d0ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d13e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d19e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d18e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d14e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000045772e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x264741] ; ret
0x000000000044f23e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26d6f1] ; ret
0x00000000004183fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a0d19] ; ret
0x000000000048ae7e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x00000000004739ae : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000413ad4 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d2a8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000414452 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041842e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041d9fe : add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000446cef : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b089 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040e991 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000491f7e : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000004916de : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000040f87d : add byte ptr [rax], al ; mov rdi, rbx ; call 0x44bab7
0x000000000046ec9f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043532e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000456117 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x4560d4
0x0000000000420046 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048db1e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004232ae : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004adafe : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add byte ptr [rsp + rsi*4 - 0xa], bl ; call qword ptr [rsi]
0x0000000000480e4e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048af35 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000046ee54 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045a0bd : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000459bbe : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000004129ae : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000447ede : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000434f5e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043563e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004355ce : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b50ae : add byte ptr [rax], al ; nop ; pop rcx ; std ; call qword ptr [rdx]
0x000000000044bcb9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004b1566 : add byte ptr [rax], al ; or al, 0x5f ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x00000000004af742 : add byte ptr [rax], al ; or al, 0x82 ; stc ; call qword ptr [rdx]
0x00000000004b1236 : add byte ptr [rax], al ; or bl, dh ; std ; jmp qword ptr [rdi]
0x00000000004b43da : add byte ptr [rax], al ; or byte ptr [rbp - 0x15900000], 0xfc ; jmp qword ptr [rcx]
0x00000000004b0956 : add byte ptr [rax], al ; pop rax ; sti ; std ; jmp qword ptr [rdx]
0x00000000004af386 : add byte ptr [rax], al ; pop rax ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x000000000044a43e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400a96 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000465c8b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045788a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000413f83 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416f35 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fc8a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d86 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004adb02 : add byte ptr [rax], al ; pop rsp ; mov ah, 0xf6 ; call qword ptr [rsi]
0x00000000004ac0c2 : add byte ptr [rax], al ; push -0x7fffff6 ; sub al, 0xf6 ; call qword ptr [rax]
0x00000000004b464e : add byte ptr [rax], al ; push rax ; add bh, ch ; jmp qword ptr [rdx]
0x00000000004af3aa : add byte ptr [rax], al ; push rax ; cmp eax, 0xb7700000 ; clc ; call qword ptr [rax]
0x00000000004b05ce : add byte ptr [rax], al ; push rax ; fyl2xp1 ; call qword ptr [rax]
0x00000000004adaee : add byte ptr [rax], al ; push rax ; mov ah, 0xf6 ; call qword ptr [rsi]
0x00000000004b561e : add byte ptr [rax], al ; push rax ; test ebp, edi ; call qword ptr [rbx]
0x00000000004af39a : add byte ptr [rax], al ; push rsp ; xchg eax, ebp ; clc ; jmp qword ptr [rsi]
0x00000000004abafa : add byte ptr [rax], al ; push rsp ; xchg eax, ebp ; cmc ; call rsp
0x00000000004abaf6 : add byte ptr [rax], al ; pushfq ; add al, 0 ; add byte ptr [rbp + rdx*4 - 0xb], dl ; call rsp
0x00000000004aff92 : add byte ptr [rax], al ; pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x00000000004b561a : add byte ptr [rax], al ; rcr byte ptr [rdi - 0x7ab00000], 0xfd ; call qword ptr [rbx]
0x00000000004b0d6e : add byte ptr [rax], al ; rcr byte ptr [rsi], 1 ; cli ; call qword ptr [rdi]
0x0000000000400a5e : add byte ptr [rax], al ; ret
0x00000000004981c6 : add byte ptr [rax], al ; ret 0
0x000000000049f13e : add byte ptr [rax], al ; ret 0x10
0x00000000004a0e0e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a15a6 : add byte ptr [rax], al ; ret 0x1d5
0x000000000049fe16 : add byte ptr [rax], al ; ret 0x24
0x00000000004a0306 : add byte ptr [rax], al ; ret 0x33
0x000000000049e93e : add byte ptr [rax], al ; ret 0xa
0x000000000049ed3e : add byte ptr [rax], al ; ret 0xd
0x00000000004a21e2 : add byte ptr [rax], al ; ret 1
0x00000000004a23e2 : add byte ptr [rax], al ; ret 2
0x00000000004a25e2 : add byte ptr [rax], al ; ret 3
0x00000000004a27e2 : add byte ptr [rax], al ; ret 4
0x00000000004a29e2 : add byte ptr [rax], al ; ret 5
0x000000000049e4e6 : add byte ptr [rax], al ; ret 6
0x00000000004a2de2 : add byte ptr [rax], al ; ret 7
0x00000000004a2fe2 : add byte ptr [rax], al ; ret 8
0x00000000004a31e2 : add byte ptr [rax], al ; ret 9
0x00000000004b3e4f : add byte ptr [rax], al ; retf ; cld ; jmp qword ptr [rcx]
0x00000000004a27de : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004af81a : add byte ptr [rax], al ; rol byte ptr [rcx], 0 ; jo 0x4af7af ; stc ; call qword ptr [rbx]
0x000000000049ebe6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004b3f2a : add byte ptr [rax], al ; ror byte ptr [rax - 0x31f00000], 1 ; cld ; jmp qword ptr [rsi]
0x00000000004b2c3e : add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; jmp qword ptr [rax]
0x00000000004b3e62 : add byte ptr [rax], al ; sbb al, 0xcb ; cld ; call rdx
0x00000000004b172a : add byte ptr [rax], al ; shl byte ptr [rax], 1 ; add byte ptr [rax], al ; idiv ch ; call rdx
0x00000000004a38fe : add byte ptr [rax], al ; shr byte ptr [rsi - 0x521f0004], 1 ; cld ; jmp rax
0x000000000041ea7c : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004af792 : add byte ptr [rax], al ; sub al, 0x82 ; stc ; jmp rbx
0x00000000004b0b12 : add byte ptr [rax], al ; sub al, 2 ; cli ; jmp qword ptr [rdx]
0x00000000004b5b82 : add byte ptr [rax], al ; sub byte ptr [rbp - 0x5eb80000], ah ; std ; jmp qword ptr [rax]
0x00000000004abb82 : add byte ptr [rax], al ; sub byte ptr [rip - 0x64880000], al ; cmc ; call rax
0x00000000004af382 : add byte ptr [rax], al ; sub byte ptr [rip - 0x6aa80000], bh ; clc ; call qword ptr [rax]
0x000000000042cd1c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004177a6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000446831 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000044bb35 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000474d03 : add byte ptr [rax], al ; syscall ; ret
0x00000000004b4df6 : add byte ptr [rax], al ; test al, 0x36 ; std ; jmp qword ptr [rcx]
0x00000000004ac002 : add byte ptr [rax], al ; test al, 9 ; add byte ptr [rax], al ; cwde ; sub dh, dh ; jmp qword ptr [rax]
0x000000000044b9d9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042b61e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004b11ee : add byte ptr [rax], al ; xchg eax, esp ; pop rbx ; add byte ptr [rax], al ; jb 0x4b11fa ; call qword ptr [rdx]
0x00000000004b156a : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x00000000004abae6 : add byte ptr [rax], al ; xchg rax, rbp ; cmc ; call qword ptr [rdx]
0x00000000004b074e : add byte ptr [rax], al ; xlatb ; std ; hlt ; jmp qword ptr [rbx]
0x00000000004af78e : add byte ptr [rax], al ; xor al, 0x41 ; add byte ptr [rax], al ; sub al, 0x82 ; stc ; jmp rbx
0x00000000004aff8e : add byte ptr [rax], al ; xor al, 0x49 ; add byte ptr [rax], al ; pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x00000000004af6ca : add byte ptr [rax], al ; xor al, 0x79 ; stc ; call rsp
0x00000000004b0a8a : add byte ptr [rax], al ; xor byte ptr [rax + rax], dl ; adc dh, bh ; stc ; call qword ptr [rax]
0x000000000045c717 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000475c16 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040ec73 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d2b5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f226 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042b56a : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000457656 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00000000004448ee : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400bb2 : add byte ptr [rax], bh ; leave ; ret
0x00000000004afdb7 : add byte ptr [rax], bh ; pushfq ; stc ; call qword ptr [rbx]
0x00000000004ad973 : add byte ptr [rax], bl ; and eax, dword ptr [rax] ; add byte ptr [rax], ch ; mov dl, 0xf6 ; call qword ptr [rsi]
0x00000000004abb83 : add byte ptr [rax], ch ; add eax, 0x9b780000 ; cmc ; call rax
0x00000000004af383 : add byte ptr [rax], ch ; cmp eax, 0x95580000 ; clc ; call qword ptr [rax]
0x00000000004ad977 : add byte ptr [rax], ch ; mov dl, 0xf6 ; call qword ptr [rsi]
0x0000000000493dcc : add byte ptr [rax], ch ; stc ; jmp qword ptr [rax]
0x000000000048b87e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x230929], 8 ; ret
0x000000000048b885 : add byte ptr [rax], cl ; ret
0x00000000004b1237 : add byte ptr [rax], cl ; std ; jmp qword ptr [rdi]
0x00000000004b0a8b : add byte ptr [rax], dh ; push rsp ; add byte ptr [rax], al ; adc dh, bh ; stc ; call qword ptr [rax]
0x00000000004b3d77 : add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x00000000004b0d6b : add byte ptr [rax], dl ; push rdi ; add byte ptr [rax], al ; rcr byte ptr [rsi], 1 ; cli ; call qword ptr [rdi]
0x000000000044af7d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b04e9 : add byte ptr [rax], r8b ; mov ah, 0xcc ; stc ; jmp qword ptr [rdx]
0x00000000004234cd : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000041855d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000004180cd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000443f1d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000443f5d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000420045 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400a95 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000484b1d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a5d : add byte ptr [rax], r8b ; ret
0x00000000004462ed : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000449326 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x0000000000484f2f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048dfa3 : add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004757ed : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x000000000044856e : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481d54 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481c94 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000412e2a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000457657 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000481eb5 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x00000000004841c0 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a43f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000449556 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x00000000004756bb : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000416187 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004498e6 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000045c6f2 : add byte ptr [rbp + 0xa], dh ; jmp 0x45c720
0x000000000044f425 : add byte ptr [rbp + 0xb], dh ; jmp 0x44f455
0x0000000000482def : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000482cdf : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044a255 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x000000000048828a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x00000000004876fa : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045a9ce : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000484e4c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000419d0f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048d0d8 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000048cff0 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049ed37 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000430ee6 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x632
0x0000000000477e0f : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 2
0x000000000041ed6b : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000471f4e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000472048 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000472142 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000004abafb : add byte ptr [rbp + rdx*4 - 0xb], dl ; call rsp
0x00000000004af39b : add byte ptr [rbp + rdx*4 - 8], dl ; jmp qword ptr [rsi]
0x00000000004b4d5b : add byte ptr [rbp + rsi - 3], ah ; jmp qword ptr [rdx]
0x0000000000490034 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044b9da : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049efe3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000448bc7 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000468a09 : add byte ptr [rbp - 0x75], cl ; je 0x468a3a ; and byte ptr [rax + 1], cl ; ret
0x000000000044d145 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048f3c7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000043cee9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004913c3 : add byte ptr [rbx + 0x22844a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048522d : add byte ptr [rbx + 0x236f2c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047fc15 : add byte ptr [rbx + 0x23a5cb0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000042364f : add byte ptr [rbx + 0x29879a15], cl ; add bh, dh ; ret 0
0x000000000041ffbf : add byte ptr [rbx + 0x29984e3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000418497 : add byte ptr [rbx + 0x2a387505], al ; add byte ptr [rcx], al ; ret
0x0000000000419a8f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000045788b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000443f2f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000443a5f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000434dcf : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000042174f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412138 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000413f84 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405d91 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fc8b : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459bbf : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048f41f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000473b8a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b11ef : add byte ptr [rbx + rbx*2 + 0x724c0000], dl ; cli ; call qword ptr [rdx]
0x000000000048d097 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000484397 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000488197 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004b3e63 : add byte ptr [rbx + rcx*8], bl ; cld ; call rdx
0x0000000000447f58 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000447f66 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x0000000000447f5f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000447f74 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x0000000000447f6d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000447f51 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000471d99 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046cc7f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004481ce : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000465c8c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000445f16 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406ed5 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ac06 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000410928 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000407c4c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000409e1f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000409ec2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000048ee3f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x00000000004aca73 : add byte ptr [rbx - 0xa], ch ; jmp rdx
0x00000000004a4c3f : add byte ptr [rbx], ah ; xchg ebp, edi ; lcall ptr [rax + 0x74] ; std ; call qword ptr [rax]
0x000000000047b587 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004945e8 : add byte ptr [rbx], al ; cli ; push qword ptr [rax + 2] ; cli ; jmp rsi
0x0000000000466f45 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000041131f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000411286 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x00000000004898f2 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000047374f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040fd4d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000418f30 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004129a0 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x00000000004718dc : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042d76e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048af36 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045a0be : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042bfcc : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000443da8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000460769 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c54a : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004858e6 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000469258 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d4e4 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000461a8f : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000466af7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046bb0a : add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000044661f : add byte ptr [rcx + 1], cl ; ret
0x000000000040e0e5 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048c185 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000418f0d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004021a2 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004af78f : add byte ptr [rcx + rax*2], dh ; add byte ptr [rax], al ; sub al, 0x82 ; stc ; jmp rbx
0x0000000000416834 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004aff8f : add byte ptr [rcx + rcx*2], dh ; add byte ptr [rax], al ; pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x00000000004907ae : add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret 0x22a2
0x0000000000491f7f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004739af : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048db1f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004916df : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423bef : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000041f3e8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f3b7 ; ret
0x00000000004af6cb : add byte ptr [rcx + rdi*2], dh ; stc ; call rsp
0x000000000045516f : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000047ef9b : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f038 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e157 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044b08a : add byte ptr [rcx - 0x75], cl ; jge 0x44b095 ; call r12
0x000000000044b0ba : add byte ptr [rcx - 0x75], cl ; jge 0x44b0c5 ; call r12
0x000000000049208f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044bb47 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046bf0e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000045e747 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047d0 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000491732 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000479c04 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000048a8ba : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048a9c9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x000000000047139b : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000045af17 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000041cbc7 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041914f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045b18e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x0000000000425e2f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000042473f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000493e58 : add byte ptr [rcx - 7], bl ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x000000000042b7f2 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042b818 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000048b38a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000044682f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040eb5f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b0b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000047fc1b : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000041849d : add byte ptr [rcx], al ; ret
0x000000000044d15c : add byte ptr [rcx], bh ; ret
0x0000000000477ebc : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000040ec74 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b0fc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000047582a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475861 ; ret
0x0000000000482b0f : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490abd30
0x000000000041455f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x414579 ; ret
0x000000000044d17b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x0000000000432c1a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048ce05 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048ce2d : add byte ptr [rdi + 1], bh ; call rax
0x000000000048db7c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004b1567 : add byte ptr [rdi + rbx*2], cl ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x00000000004630c5 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004af397 : add byte ptr [rdi - 0x6aac0000], bh ; clc ; jmp qword ptr [rsi]
0x000000000040db86 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000480f36 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000434596 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000447e27 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000004355cf : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043563f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000447edf : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000004259df : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004129af : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042bd5f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042b89f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000046222b : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042b12f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b15f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b14f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042b13f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046c544 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047b8e3 : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000004585fb : add byte ptr [rdi], cl ; ret 0xc083
0x000000000042195e : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004696b8 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004203be : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000476723 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000044f5c4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000443a1f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000044226f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048d007 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047c01c : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047c944 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000412647 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004af793 : add byte ptr [rdx + rax*4], ch ; stc ; jmp rbx
0x00000000004af743 : add byte ptr [rdx + rax*4], cl ; stc ; call qword ptr [rdx]
0x00000000004b0b13 : add byte ptr [rdx + rax], ch ; cli ; jmp qword ptr [rdx]
0x000000000049e937 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004ac0d7 : add byte ptr [rdx + rcx], bh ; add ah, dh ; sub al, 0xf6 ; call qword ptr [rdx]
0x0000000000456ec0 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000456ebf : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x00000000004b1273 : add byte ptr [rdx + rsi*2 - 6], bh ; jmp rax
0x00000000004b11f3 : add byte ptr [rdx + rsi*2 - 6], cl ; call qword ptr [rdx]
0x00000000004b3acf : add byte ptr [rdx - 0x36], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000494da8 : add byte ptr [rdx - 6], al ; call qword ptr [rax]
0x00000000004b187f : add byte ptr [rdx], ah ; add byte ptr [rax], al ; in al, dx ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x0000000000494578 : add byte ptr [rdx], dl ; cli ; call qword ptr [rax + 0x20fffa11]
0x0000000000494898 : add byte ptr [rip + 0x3490fffa], dh ; cli ; jmp qword ptr [rax]
0x000000000042c2d4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046316a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000041a0f7 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000465eea : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x0000000000419b2f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000463193 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xa3e8
0x0000000000463131 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b064 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041a0f6 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004241e1 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004b04e7 : add byte ptr [rsi + rcx*2 - 0x334c0000], cl ; stc ; jmp qword ptr [rdx]
0x0000000000455c80 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000455c7f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004241a7 : add byte ptr [rsi - 9], dh ; ret 0
0x00000000004943a0 : add byte ptr [rsi], cl ; cli ; call qword ptr [rax + 0x20fffa0d]
0x00000000004abaf7 : add byte ptr [rsp + rax - 0x6aac0000], bl ; cmc ; call rsp
0x00000000004b126f : add byte ptr [rsp + rbx*2], dl ; add byte ptr [rax], al ; jl 0x4b12f0 ; cli ; jmp rax
0x00000000004b0b0f : add byte ptr [rsp + rdx*2 + 0x22c0000], dh ; cli ; jmp qword ptr [rdx]
0x00000000004aca6f : add byte ptr [rsp + rdx], dl ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; movsxd rsi, esi ; jmp rdx
0x000000000045293c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004adb03 : add byte ptr [rsp + rsi*4 - 0xa], bl ; call qword ptr [rsi]
0x00000000004af515 : add byte ptr ds:[rax], al ; js 0x4af566 ; stc ; jmp qword ptr [rbx]
0x0000000000448cf5 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000045a88c : add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x000000000044f424 : add byte ptr es:[rbp + 0xb], dh ; jmp 0x44f456
0x000000000044d144 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044b9d7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000415392 : add ch, al ; ret
0x0000000000415499 : add ch, al ; ret 0xffff
0x00000000004a981c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a981d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b3df5 : add ch, byte ptr [rbp + rcx + 7] ; ret
0x0000000000471c5a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000422aea : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000469293 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004ac9af : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000049436c : add ch, dl ; stc ; dec dword ptr [rsi + 0xc] ; cli ; call rax
0x0000000000447f08 : add cl, al ; call 0xffffffff84070820
0x0000000000494fa8 : add cl, bh ; cli ; jmp qword ptr [rax]
0x0000000000442297 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000469a72 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000454eae : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000468fc6 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000447bf4 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041cd9b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041c9f8 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000042447c : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000411424 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411343 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000450a4c : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000442298 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000442205 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000485465 : add cl, byte ptr [rax - 0x77] ; je 0x485496 ; or byte ptr [rax + 1], cl ; ret
0x000000000047e5b4 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004180b2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000440a60 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000440ac3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000483f5d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000435412 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000451b7a : add cl, byte ptr [rcx - 0x7d] ; ret
0x000000000044691b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000413b77 : add cl, ch ; ret
0x000000000045ea8a : add cl, ch ; ret 0xfffa
0x0000000000454928 : add cl, ch ; ret 0xfffd
0x0000000000400bb7 : add cl, cl ; ret
0x0000000000494ee0 : add cl, dh ; cli ; call qword ptr [rax]
0x0000000000469d68 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e592 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004a1e37 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004355c3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040058e : add dh, bl ; ret
0x000000000049421c : add dh, bl ; stc ; jmp rax
0x000000000042421e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004acee1 : add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000494944 : add dh, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x22fffa36]
0x0000000000494f38 : add dh, dh ; cli ; call qword ptr [rax]
0x000000000041ab28 : add dh, dh ; ret
0x0000000000450d7e : add dh, dh ; ret 0x4801
0x000000000042245f : add dh, dh ; ret 0x4804
0x000000000047c4c8 : add dh, dh ; ret 0x7403
0x000000000044a2ef : add dh, dh ; ret 0x7404
0x0000000000444947 : add dh, dh ; ret 0x7501
0x0000000000444954 : add dh, dh ; ret 0x7502
0x0000000000444961 : add dh, dh ; ret 0x7504
0x0000000000444919 : add dh, dh ; ret 0x7510
0x0000000000444926 : add dh, dh ; ret 0x7520
0x000000000042444c : add dh, dh ; ret 0x7540
0x0000000000422783 : add dh, dh ; ret 0xf02
0x000000000045a018 : add dh, dh ; ret 0xf04
0x000000000041aa59 : add dh, dh ; ret 0xf08
0x0000000000466951 : add dh, dh ; ret 0xf40
0x0000000000466937 : add dh, dh ; ret 0xf50
0x00000000004b1730 : add dh, dh ; std ; call rdx
0x000000000049466c : add dil, dl ; call rdx
0x000000000049444c : add dl, byte ptr [rax] ; cli ; call qword ptr [rdx + 0x22fffa0f]
0x000000000047988d : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000046fd27 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046eb45 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000044f993 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000443a21 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000046554a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000416a2d : add dword ptr [rax + 0x39], ecx ; ret
0x000000000047fa59 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047fa6b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045b1df : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x000000000046492a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045cbd3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045cb5d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000457030 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048de93 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000481e27 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040daba : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000479085 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041db5e : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000479057 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000460fa3 : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000402c0f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000422b34 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x000000000046fd28 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000442271 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000418e21 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a0a07 ; ret
0x0000000000442202 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047f1a3 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23d205 ; ret
0x000000000045de90 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000405f2c : add dword ptr [rax - 0x77], ecx ; ret
0x000000000044fef7 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000413df6 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000047f1a2 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23d205 ; ret
0x000000000040ee96 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045b649 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046eb46 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000402c59 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000004504e6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000046f197 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e3bb : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x0000000000469ad9 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045e5d5 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x00000000004499b5 : add dword ptr [rax - 1], edi ; jmp 0x449986
0x0000000000405960 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000004100d4 : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000004196da : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000467e83 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000454ea8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000477e84 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041e79d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000047597d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004491c9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048e75a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000456116 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048cca5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000446cee : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000471839 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000041ede0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000468158 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b4ac : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455d72 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042acd7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e435 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000423efe : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043fc4f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ad05 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044e5c1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a1e3a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a0fea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a0e12 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0e0a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a15a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000048ce07 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048cd5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048db79 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48db8a ; sbb eax, eax ; ret
0x000000000040f335 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x40f302
0x000000000045cd5d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x45cd2a
0x0000000000460bbd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000475cc2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000047e58d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048d410 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000484416 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046ec9d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000416f33 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048673e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047fc21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004683c0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000412e28 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048cbf6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044ddf2 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409e1d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000049208d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000477eba : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444945 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000444952 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000044495f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000444917 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000444924 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000444931 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045a016 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000000000424478 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000042363c : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000004235a3 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000040fd4c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405d90 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044c421 : add dword ptr [rax], esp ; jmp rdx
0x0000000000400b0c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000448b69 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000045e412 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000435482 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000046bf45 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000488f79 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040d4ae : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000045c0a2 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044ab83 : add dword ptr [rcx + 9], ecx ; ret
0x000000000040e0fa : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x00000000004422a1 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046e93e : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004596e8 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044c215 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000467011 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x00000000004787cb : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x000000000040fd4b : add dword ptr [rcx], eax ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000447a82 : add dword ptr [rdi + 0x15], esi ; jb 0x447a90 ; mov byte ptr [rdi], cl ; ret
0x00000000004b3dbd : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b3d55 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b3d89 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b3d66 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b3d9a : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3dce : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b0415 : add dword ptr [rdi], 3 ; ret 0xa01
0x00000000004565f0 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000041e35b : add dword ptr [rdi], ecx ; ret 0x8948
0x00000000004481d1 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000453f61 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000047988e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x0000000000446a7c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043830d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048526b : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000044d179 : add dword ptr [rdx], 0 ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d16f
0x00000000004b2f4c : add dword ptr [rdx], 0x4a ; ret
0x00000000004b59dc : add dword ptr [rdx], 0x55 ; ret
0x00000000004aee60 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b5998 : add dword ptr [rdx], 0x76 ; ret
0x0000000000418498 : add dword ptr [rip + 0x2a3875], 1 ; ret
0x00000000004ac9ab : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000442282 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000489f0d : add eax, 0x1489066 ; ret 0xb70f
0x000000000045a9d0 : add eax, 0x18c48348 ; ret
0x0000000000424599 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000423639 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x00000000004493aa : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042b5ca : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424150 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x00000000004244d9 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000424399 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x0000000000424239 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x0000000000424540 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000424400 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000048f4e1 : add eax, 0x22ce9e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048f3d1 : add eax, 0x22cfae ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004242a0 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x000000000042451f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x00000000004243df : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x000000000042427f : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x00000000004235c0 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x0000000000487640 : add eax, 0x235212 ; jne 0x487676 ; ret
0x000000000042430b : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x0000000000485411 : add eax, 0x2374aa ; ret
0x0000000000484899 : add eax, 0x2377ca ; ret
0x000000000048487e : add eax, 0x2377e5 ; add rsp, 8 ; ret
0x00000000004242ee : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x000000000042433f : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047f30c : add eax, 0x23d097 ; mov qword ptr [rsi], rax ; ret
0x000000000047f29b : add eax, 0x23d110 ; ret
0x000000000047f262 : add eax, 0x23d149 ; add rsp, 8 ; ret
0x000000000047f1a6 : add eax, 0x23d205 ; ret
0x000000000046c6a7 : add eax, 0x24ab74 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c654 : add eax, 0x24abc7 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c127 : add eax, 0x24abf4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c4c6 : add eax, 0x24ad55 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c481 : add eax, 0x24ad9a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c43c : add eax, 0x24addf ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c3ed : add eax, 0x24ae2e ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460b18 : add eax, 0x255b03 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460ec7 : add eax, 0x255c54 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e79 : add eax, 0x255ca2 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460dca : add eax, 0x255d51 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460d6e : add eax, 0x255dad ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460ace : add eax, 0x25604d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460a80 : add eax, 0x25609b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460627 : add eax, 0x2561f4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000457732 : add eax, 0x264741 ; ret
0x000000000044d132 : add eax, 0x26d1c9 ; ret
0x000000000044f232 : add eax, 0x26d6f1 ; ret
0x000000000045268f : add eax, 0x29480000 ; ret 0x349
0x00000000004244b9 : add eax, 0x297932 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424379 : add eax, 0x297a72 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424219 : add eax, 0x297bd2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f577 : add eax, 0x29a2e4 ; ret
0x000000000041f581 : add eax, 0x29c7e6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041949d : add eax, 0x2a03be ; ret
0x0000000000418f98 : add eax, 0x2a0853 ; ret
0x0000000000418faf : add eax, 0x2a0858 ; ret
0x0000000000418f70 : add eax, 0x2a0873 ; ret
0x0000000000418f50 : add eax, 0x2a088b ; ret
0x0000000000418e46 : add eax, 0x2a09fd ; ret
0x0000000000418e36 : add eax, 0x2a0a05 ; ret
0x0000000000418de6 : add eax, 0x2a0a0d ; ret
0x0000000000418dd6 : add eax, 0x2a0a25 ; ret
0x0000000000418402 : add eax, 0x2a0d19 ; ret
0x0000000000419451 : add eax, 0x2a2916 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000418fc5 : add eax, 0x2a2dca ; ret
0x00000000004184fd : add eax, 0x2a3812 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400ee2 : add eax, 0x2bb9f9 ; call 0x44d147
0x00000000004b1fb4 : add eax, 0x3400e4e ; ret
0x0000000000484e4e : add eax, 0x38c48348 ; ret
0x000000000041ccee : add eax, 0x39480000 ; ret 0xf275
0x000000000042b5ea : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000443ab8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x00000000004422e8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000443fb6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004945d9 : add eax, 0x4a0fffa ; cli ; jmp qword ptr [rax]
0x0000000000443b39 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000442329 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000494711 : add eax, 0x554fffa ; cli ; call rsp
0x0000000000484ff0 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a29dd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000047181a : add eax, 0x5c415d5b ; ret
0x000000000042b60a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424569 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x0000000000424179 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x00000000004241dd : add eax, 0x79ee ; je 0x4241b2 ; ret
0x000000000042a917 : add eax, 0x83480000 ; ret 0x4910
0x000000000043e241 : add eax, 0x83480000 ; ret 0xe910
0x000000000042a945 : add eax, 0x83480000 ; ret 0xeb10
0x000000000045ed95 : add eax, 0x83ffffef ; ret
0x0000000000443abb : add eax, 0x8428d48 ; ret
0x000000000040db88 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000458bb3 : add eax, 0x89480000 ; ret 0x2948
0x0000000000491730 : add eax, 0x89490000 ; ret 0x8349
0x0000000000480f38 : add eax, 0x940fc085 ; ret 0x3d
0x00000000004abb85 : add eax, 0x9b780000 ; cmc ; call rax
0x0000000000472729 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x0000000000473b39 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042d00a : add eax, 0xc0310000 ; ret
0x0000000000443b3d : add eax, 0xc428d48 ; ret
0x000000000044461d : add eax, 0xc478d48 ; ret
0x0000000000455172 : add eax, 0xe9000000 ; ret
0x00000000004726f9 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x000000000048d0da : add eax, 0xf7148948 ; ret
0x0000000000435473 : add eax, 0xf7f0ff3 ; ret
0x000000000048f3ea : add eax, 0xffff50e9 ; push rbx ; ret
0x000000000044e5a5 : add eax, 1 ; push rax ; call rbx
0x0000000000474761 : add eax, 1 ; ret
0x0000000000474758 : add eax, 2 ; ret
0x0000000000474771 : add eax, 3 ; ret
0x000000000045a8e9 : add eax, dword ptr [0] ; ret
0x000000000047b588 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000489721 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489d7c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000041c188 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041aad6 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000400ecb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041ac5a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041f95a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041fb20 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042aaf7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e3e1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ab25 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044f184 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a43c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x00000000004747b3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004481cc : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x00000000004898f0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000461a8d : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044bb45 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000047c4c6 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041aa57 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046e824 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000046ef6b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000046efd9 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000447eb0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047d18c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b3d69 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x000000000047593a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000004ad182 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000486bb3 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b3d9d : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3dd1 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b1cca : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047c206 : add eax, dword ptr [rsi] ; call rax
0x000000000048ad16 : add eax, eax ; jmp rax
0x00000000004021a4 : add eax, ebp ; jmp rax
0x0000000000463a77 : add eax, ebp ; ret
0x000000000047c527 : add eax, ebx ; call rax
0x000000000044d23c : add eax, ebx ; jmp rax
0x0000000000440568 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046e82b : add eax, ecx ; jmp rax
0x000000000042af19 : add eax, ecx ; ret
0x00000000004408cd : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b446 : add eax, ecx ; vzeroupper ; ret
0x000000000042af16 : add eax, edi ; add rax, rcx ; ret
0x000000000042b443 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000046ee5b : add eax, edi ; jmp rax
0x000000000046f12f : add eax, edi ; mov rdx, r8 ; jmp 0x46f103
0x000000000042b144 : add eax, edi ; ret
0x00000000004851a0 : add eax, edi ; sub rax, r8 ; ret
0x0000000000440985 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000044692a : add eax, edi ; sub rax, rsi ; ret
0x000000000042b5ba : add eax, edi ; vzeroupper ; ret
0x0000000000401f3a : add eax, edx ; jmp rax
0x0000000000440876 : add eax, edx ; sub rax, rdi ; ret
0x000000000047445b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x0000000000447e5c : add eax, esi ; jmp rax
0x000000000041815d : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048bf8d : add eax, esp ; jmp rax
0x0000000000462da8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041949f : add ebp, dword ptr [rdx] ; add bl, dh ; ret
0x000000000047c202 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048a33a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000488570 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000460b19 : add ebx, dword ptr [rbx + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000416871 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b3d8e : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044de0f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44de78 ; pop r12 ; ret
0x0000000000482661 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042bd2b : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000435633 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000447a67 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x447a5c ; ret
0x00000000004422d5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000045706d : add ecx, dword ptr [rax + 0x39] ; ret
0x000000000040e05e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000450eca : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44d1a8
0x00000000004422d9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e657 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x000000000044fa83 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000048ba4f : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040ea51 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000480c1a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000483130 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x00000000004353a2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b3d5a : add ecx, dword ptr [rbx + 3] ; ret
0x0000000000443f54 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000004422d6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000448b6f : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448bcd : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004abe99 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000465bd9 : add ecx, eax ; mov eax, r9d ; ret
0x000000000042d63b : add ecx, ebx ; jmp r9
0x000000000042bfd2 : add ecx, ebx ; jmp rcx
0x0000000000447e84 : add ecx, esi ; jmp rcx
0x000000000048df9e : add edi, dword ptr [rax + 4] ; jne 0x48dfc9 ; ret
0x000000000045a0c4 : add edi, ebx ; jmp rdi
0x000000000042d638 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000494665 : add edi, edx ; call rdx
0x00000000004947a5 : add edi, edx ; jmp qword ptr [rax + 0x10fffa02]
0x00000000004947e1 : add edi, edx ; jmp qword ptr [rax]
0x000000000040d53c : add edi, edx ; jmp rdi
0x00000000004945e9 : add edi, edx ; push qword ptr [rax + 2] ; cli ; jmp rsi
0x0000000000487064 : add edx, eax ; jmp 0x487072
0x0000000000483392 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000040d253 : add edx, edi ; jmp rdx
0x0000000000468b78 : add edx, esp ; call qword ptr [r10 + rax*8]
0x0000000000458476 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000459bc5 : add esi, eax ; jmp rsi
0x0000000000435553 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000446c85 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044935c : add esi, ebx ; ret
0x000000000041ea80 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000447f8e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042d635 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004163a1 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000410591 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044998f : add esp, 0x10 ; pop rbx ; ret
0x0000000000411c95 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044682d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000482538 : add esp, 0x110 ; pop rbx ; ret
0x000000000040dbce : add esp, 0x118 ; ret
0x000000000045ac1a : add esp, 0x148 ; ret
0x0000000000419eb9 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f16b : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041f786 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044cf5a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411625 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045a9d2 : add esp, 0x18 ; ret
0x0000000000416ead : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416a8d : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000416ee6 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004825b9 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004167ff : add esp, 0x20 ; pop rbx ; ret
0x00000000004489b2 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044932a : add esp, 0x28 ; ret
0x000000000044f318 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048478f : add esp, 0x30 ; pop rbx ; ret
0x000000000048ab06 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040da84 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415eae : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004757f1 : add esp, 0x38 ; ret
0x000000000048839c : add esp, 0x40 ; pop rbx ; ret
0x0000000000481acc : add esp, 0x48 ; jmp qword ptr [rax]
0x0000000000449002 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000488483 : add esp, 0x50 ; pop rbx ; ret
0x0000000000481a5a : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000044955a : add esp, 0x58 ; ret
0x000000000044944c : add esp, 0x68 ; ret
0x0000000000473c54 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004497df : add esp, 0x78 ; ret
0x000000000046853e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000004752d3 : add esp, 0x80 ; pop rbx ; ret
0x0000000000415778 : add esp, 0x80 ; ret
0x000000000044b92d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d82 : add esp, 0x88 ; pop rbx ; ret
0x00000000004014ff : add esp, 0x98 ; ret
0x00000000004753f3 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000457886 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000040faf7 : add esp, 0xd0 ; pop rbx ; ret
0x000000000040fc86 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f754 : add esp, 0xd8 ; ret
0x000000000041199f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fb2b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041001e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044af70 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a1ac : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416459 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004882d9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000413464 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401b93 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000423609 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000435632 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355c2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435552 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000042ab24 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d63a : add r9, r11 ; jmp r9
0x000000000045704e : add r9b, byte ptr [rax + 0x39] ; ret
0x000000000045706c : add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000465bd8 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000474760 : add rax, 1 ; ret
0x0000000000474757 : add rax, 2 ; ret
0x0000000000474770 : add rax, 3 ; ret
0x000000000045a8e8 : add rax, qword ptr [0] ; ret
0x000000000047c205 : add rax, qword ptr [r14] ; call rax
0x000000000047d18b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000486bb2 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045a8e7 : add rax, qword ptr fs:[0] ; ret
0x000000000047c526 : add rax, r11 ; call rax
0x000000000048bf8c : add rax, r12 ; jmp rax
0x00000000004021a3 : add rax, r13 ; jmp rax
0x000000000048c88d : add rax, r14 ; jmp rax
0x000000000048af3b : add rax, r15 ; jmp rax
0x000000000048ad15 : add rax, r8 ; jmp rax
0x000000000048c4c5 : add rax, r9 ; jmp rax
0x000000000044d2b3 : add rax, rbp ; jmp rax
0x000000000044d23b : add rax, rbx ; jmp rax
0x0000000000440567 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046e82a : add rax, rcx ; jmp rax
0x000000000042af18 : add rax, rcx ; ret
0x00000000004408cc : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b445 : add rax, rcx ; vzeroupper ; ret
0x000000000042af15 : add rax, rdi ; add rax, rcx ; ret
0x000000000042b442 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046ee5a : add rax, rdi ; jmp rax
0x000000000042b143 : add rax, rdi ; ret
0x000000000048519f : add rax, rdi ; sub rax, r8 ; ret
0x0000000000440984 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446929 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042b5b9 : add rax, rdi ; vzeroupper ; ret
0x0000000000401f39 : add rax, rdx ; jmp rax
0x0000000000440875 : add rax, rdx ; sub rax, rdi ; ret
0x0000000000447e5b : add rax, rsi ; jmp rax
0x000000000047c201 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000042bfd1 : add rcx, r11 ; jmp rcx
0x0000000000447e83 : add rcx, rsi ; jmp rcx
0x000000000040d53b : add rdi, r10 ; jmp rdi
0x000000000045a0c3 : add rdi, r11 ; jmp rdi
0x000000000042d637 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000468b77 : add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000483391 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000487063 : add rdx, rax ; jmp 0x487073
0x000000000040d252 : add rdx, rdi ; jmp rdx
0x0000000000459bc4 : add rsi, r8 ; jmp rsi
0x00000000004163a0 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000410590 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044998e : add rsp, 0x10 ; pop rbx ; ret
0x0000000000482537 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040dbcd : add rsp, 0x118 ; ret
0x000000000045ac19 : add rsp, 0x148 ; ret
0x0000000000419eb8 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f16a : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041f785 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000411624 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045a9d1 : add rsp, 0x18 ; ret
0x0000000000416eac : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416a8c : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000416ee5 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004825b8 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004167fe : add rsp, 0x20 ; pop rbx ; ret
0x0000000000449329 : add rsp, 0x28 ; ret
0x000000000044f317 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048478e : add rsp, 0x30 ; pop rbx ; ret
0x000000000048ab05 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000415ead : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004757f0 : add rsp, 0x38 ; ret
0x000000000048839b : add rsp, 0x40 ; pop rbx ; ret
0x0000000000481acb : add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488482 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000481a59 : add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000449559 : add rsp, 0x58 ; ret
0x000000000044944b : add rsp, 0x68 ; ret
0x0000000000473c53 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004497de : add rsp, 0x78 ; ret
0x00000000004752d2 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000415777 : add rsp, 0x80 ; ret
0x000000000044b92c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d81 : add rsp, 0x88 ; pop rbx ; ret
0x00000000004014fe : add rsp, 0x98 ; ret
0x00000000004753f2 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000040faf6 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000040fc85 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f753 : add rsp, 0xd8 ; ret
0x000000000041199e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fb2a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041001d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044af6f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a1ab : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416458 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004882d8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401b92 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000423608 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000424477 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000048526a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000494218 : and ah, bl ; stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004af400 : and ah, dh ; clc ; call qword ptr [rax]
0x00000000004adb01 : and al, 0 ; add byte ptr [rsp + rsi*4 - 0xa], bl ; call qword ptr [rsi]
0x000000000046b501 : and al, 0 ; jmp rax
0x000000000046c12a : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d178 : and al, 0x10 ; add rsp, 0x28 ; ret
0x000000000048ed30 : and al, 0x10 ; call r14
0x000000000044a598 : and al, 0x10 ; call rax
0x00000000004824fb : and al, 0x10 ; call rdx
0x000000000041c73c : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000471f52 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048eb18 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000401135 : and al, 0x18 ; call rax
0x000000000044e528 : and al, 0x18 ; mov r9, r13 ; call rbx
0x0000000000471e6d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047416f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x00000000004824f6 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450c07 : and al, 0x20 ; call r15
0x0000000000452e3e : and al, 0x20 ; call rax
0x0000000000473e30 : and al, 0x20 ; call rbx
0x0000000000450ad2 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a7964 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041f783 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000450c02 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000422633 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000004514e3 : and al, 0x30 ; call r14
0x00000000004516bb : and al, 0x30 ; call rbx
0x000000000047401e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000045293a : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004519a5 : and al, 0x38 ; call r12
0x0000000000451fdd : and al, 0x38 ; call r14
0x0000000000454fa1 : and al, 0x38 ; call r15
0x00000000004511eb : and al, 0x38 ; call rbx
0x0000000000473d08 : and al, 0x38 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000450ef7 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004514de : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004516b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046704c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000456ebe : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000455c7e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000481ac9 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481a57 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045341c : and al, 0x40 ; call r15
0x0000000000455bc8 : and al, 0x40 ; call rbx
0x0000000000452e39 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004519a0 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451fd8 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000454f9c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004511e6 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000486bb1 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x00000000004163c8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048abe8 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048a8ec : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000004130a4 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048dc1e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000453417 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455bc3 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048dbcf : and al, 0x4c ; lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000489b37 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489ae5 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x0000000000450ece : and al, 0x50 ; call 0x44d1a4
0x0000000000450ecd : and al, 0x50 ; call 0x44d1a5
0x0000000000404931 : and al, 0x60 ; jmp 0x4043ac
0x00000000004b1880 : and al, 0x62 ; add byte ptr [rax], al ; in al, dx ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000042004b : and al, 0x68 ; call rax
0x000000000046371e : and al, 0x83 ; ret
0x000000000040fe83 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000045757d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000418f33 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004047cc : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004513fe : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000491f7b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004916db : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000451e8b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000451880 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000457653 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048cd5b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000044998c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044990f : and al, 0xc ; jne 0x4498e0 ; neg eax ; jmp 0x4498e0
0x000000000044990e : and al, 0xc ; jne 0x4498e1 ; neg eax ; jmp 0x4498e1
0x00000000004163b2 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x412648
0x0000000000401130 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000479c00 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041698c : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000048ace8 : and al, 0xd8 ; ret
0x0000000000417fa3 : and al, 0xe9 ; ret 0xfffd
0x000000000045229e : and al, 0xf6 ; ret
0x0000000000416abd : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000041cd56 : and al, 8 ; call 0x418ff4
0x000000000040deff : and al, 8 ; call rax
0x000000000041c741 : and al, 8 ; call rcx
0x000000000048e81c : and al, 8 ; jmp 0x48e836
0x000000000044a593 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000410fc0 : and al, 8 ; mov rdi, r15 ; call rax
0x00000000004941e0 : and al, ah ; stc ; call qword ptr [rax]
0x0000000000494250 : and al, bl ; stc ; jmp rax
0x000000000048f3d4 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000490033 : and al, byte ptr [rax] ; jne 0x49001d ; pop rbx ; ret
0x000000000048f3c6 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f3d7 ; ret
0x000000000048f4d6 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f4e7 ; ret
0x0000000000440ada : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000491920 : and al, ch ; or ah, dh ; idiv edi ; call 0x40dc08
0x00000000004740fc : and al, ch ; ret
0x0000000000469291 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000452e3f : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000004942d0 : and bh, dl ; stc ; call rax
0x0000000000411289 : and byte ptr [r8 + 1], r9b ; ret
0x00000000004111ee : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000044047a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042b5cc : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000041128a : and byte ptr [rax + 1], cl ; ret
0x0000000000400ed1 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000046614e : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000494000 : and byte ptr [rax - 0x45df0007], bh ; stc ; jmp qword ptr [rax]
0x0000000000450ad3 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000477168 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045a2c4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45a2d8 ; call rax
0x000000000044f816 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048d256 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000467b84 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x0000000000412bc2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000048d229 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000447f6a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000494d54 : and byte ptr [rax], bl ; cli ; jmp qword ptr [rax + 0x20fffa19]
0x00000000004945c0 : and byte ptr [rax], cl ; cli ; jmp qword ptr [rax + 0x20fffa07]
0x0000000000494d00 : and byte ptr [rax], dl ; cli ; jmp qword ptr [rax + 0x20fffa11]
0x000000000049223c : and byte ptr [rbp - 0x77], cl ; ret
0x00000000004825bb : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000467de3 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x0000000000494d5c : and byte ptr [rbx], bl ; cli ; jmp qword ptr [rax + 0x20fffa1c]
0x0000000000494d08 : and byte ptr [rbx], dl ; cli ; jmp qword ptr [rax + 0x20fffa14]
0x000000000045da80 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000416eaf : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x00000000004111ef : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000494d18 : and byte ptr [rcx], bl ; cli ; jmp qword ptr [rax + 0x20fffa1a]
0x000000000047f444 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000000004a4c88 : and byte ptr [rdi - 3], dh ; jmp qword ptr [rbx]
0x00000000004945c8 : and byte ptr [rdi], al ; cli ; jmp qword ptr [rax + 0x20fffa06]
0x0000000000494d28 : and byte ptr [rdi], bl ; cli ; jmp qword ptr [rax - 0x1f0005e0]
0x0000000000446ed1 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000494d3c : and byte ptr [rdi], cl ; cli ; jmp qword ptr [rax + 0x20fffa10]
0x000000000040fcab : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000444920 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000494d20 : and byte ptr [rdx + rdi*8], bl ; jmp qword ptr [rax + 0x20fffa1d]
0x0000000000494d34 : and byte ptr [rdx + rdi*8], cl ; jmp qword ptr [rax + 0x20fffa0d]
0x0000000000494004 : and byte ptr [rdx - 0x43df0007], bh ; stc ; jmp qword ptr [rax]
0x0000000000493e94 : and byte ptr [rdx - 7], ch ; call qword ptr [rax]
0x00000000004ad185 : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000494a70 : and byte ptr [rdx], dh ; cli ; call qword ptr [rax + 0x20fffa38]
0x0000000000494d44 : and byte ptr [rdx], dl ; cli ; jmp qword ptr [rax + 0x20fffa13]
0x0000000000494d4c : and byte ptr [rip + 0x16a0fffa], dl ; cli ; jmp qword ptr [rax]
0x00000000004945d8 : and byte ptr [rip + 0x4a0fffa], al ; cli ; jmp qword ptr [rax]
0x0000000000494cf8 : and byte ptr [rip + 0xea0fffa], cl ; cli ; jmp qword ptr [rax]
0x000000000042c06a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b1ccd : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004945d0 : and byte ptr [rsi], al ; cli ; jmp qword ptr [rax + 0x20fffa05]
0x0000000000494d64 : and byte ptr [rsi], bl ; cli ; jmp qword ptr [rax + 0x20fffa1f]
0x0000000000494d10 : and byte ptr [rsi], dl ; cli ; jmp qword ptr [rax + 0x20fffa17]
0x0000000000474752 : and ch, 0xf ; je 0x474779 ; add rax, 2 ; ret
0x0000000000447f28 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000042447a : and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000494b38 : and ch, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x12fffa2e]
0x000000000047473d : and cl, 0xf ; je 0x474765 ; ret
0x000000000044c511 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047f244 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000423bf3 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000042b8ad : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000473b3a : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000044bd89 : and dh, al ; sub byte ptr [rcx], al ; ret
0x0000000000469290 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000494d2d : and dl, bh ; jmp rax
0x0000000000468e08 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000468e09 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004a9482 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000004176b7 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041770f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041853e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x0000000000424152 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a6539 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9481 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045a8eb : and eax, 0 ; ret
0x00000000004841bc : and eax, 0x28 ; jne 0x484206 ; leave ; ret
0x00000000004004c9 : and eax, 0x2b8bfa ; nop ; ret
0x000000000040e968 : and eax, 0x30 ; call rax
0x000000000040e8a2 : and eax, 0x30 ; call rdx
0x000000000040e98e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000447ead : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000447ef8 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000046062a : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000447fa3 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x0000000000447f47 : and eax, 0x7ff80000 ; ret
0x000000000044bbc7 : and eax, 0xc ; cmp eax, 4 ; je 0x44bbd8 ; ret
0x000000000048265c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004ad975 : and eax, dword ptr [rax] ; add byte ptr [rax], ch ; mov dl, 0xf6 ; call qword ptr [rsi]
0x00000000004876f8 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047f265 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000485268 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000487643 : and eax, dword ptr [rax] ; jne 0x487673 ; ret
0x0000000000484cba : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484895 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x2377ca], rax ; ret
0x000000000047f30f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047f1a9 : and eax, dword ptr [rax] ; ret
0x000000000047ba12 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a4c40 : and eax, dword ptr [rdi + 0x7458fffd] ; std ; call qword ptr [rax]
0x00000000004a4c64 : and eax, dword ptr [rdi + 0x7650fffd] ; std ; jmp qword ptr [rbx]
0x00000000004a4c6c : and eax, dword ptr [rdi - 0x78dc0003] ; std ; jmp qword ptr [rbx]
0x000000000045268e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x00000000004176b8 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417710 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044bb62 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44bb75 ; ret
0x000000000042d5e5 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042cd18 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044b2ba : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x000000000044f429 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call rsp
0x00000000004b3059 : and edi, esp ; jmp qword ptr [rcx]
0x000000000044bd88 : and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000474297 : bnd je 0x4742a6 ; test edx, edx ; jne 0x474298 ; ret
0x000000000042b21a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042b140 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042b631 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042b150 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000042b160 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000042b130 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000042b08f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004400f3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000440716 : bsf eax, edx ; ret
0x0000000000474347 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000440872 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000440210 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000440762 : bsf rax, rdx ; ret
0x0000000000474346 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000473177 : bsr eax, eax ; add rax, rdi ; ret
0x00000000004733fb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000473309 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000473205 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000473176 : bsr rax, rax ; add rax, rdi ; ret
0x00000000004733fa : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000473308 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000473204 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000047db5b : call 0x110a5eab
0x00000000004b01e8 : call 0x124afba7
0x00000000004b1858 : call 0x144b130e
0x0000000000469966 : call 0x21469964
0x0000000000469adc : call 0x21469ada
0x0000000000469d6b : call 0x21469d69
0x000000000046a230 : call 0x2146a22e
0x000000000046a3ee : call 0x2146a3ec
0x000000000046a9bf : call 0x2146a9bd
0x000000000046abf8 : call 0x2146abf6
0x00000000004b0244 : call 0x384b029b
0x000000000044e226 : call 0x400440
0x0000000000478988 : call 0x40048f
0x00000000004686f2 : call 0x4004af
0x0000000000491926 : call 0x40dc02
0x000000000041a5c9 : call 0x40f998
0x000000000041549a : call 0x4116e2
0x00000000004163b8 : call 0x412642
0x000000000041cd58 : call 0x418ff2
0x00000000004217d5 : call 0x41da12
0x0000000000479539 : call 0x41fe58
0x0000000000483998 : call 0x43fc87
0x00000000004007e8 : call 0x447e16
0x00000000004006b1 : call 0x4482d6
0x0000000000403091 : call 0x44a918
0x000000000040f882 : call 0x44bab2
0x000000000046f84c : call 0x44baf2
0x000000000041f82a : call 0x44bb22
0x000000000040f986 : call 0x44bc12
0x0000000000400ee7 : call 0x44d142
0x0000000000450ed0 : call 0x44d1a2
0x0000000000450613 : call 0x44fc79
0x0000000000461152 : call 0x45d3f2
0x0000000000489742 : call 0x488517
0x000000000045cdd6 : call 0x4908572a
0x0000000000482b14 : call 0x490abd2b
0x00000000004501e7 : call 0x4d078b3b
0x00000000004827ec : call 0x4d0aba03
0x0000000000434bba : call 0x4fc25bb8
0x0000000000434bb9 : call 0x4fc25bb9
0x00000000004376da : call 0x4fc286d8
0x00000000004376d9 : call 0x4fc286d9
0x000000000047b4f1 : call 0x86c0185
0x000000000046c4ed : call 0xa3f4829
0x0000000000447f0a : call 0xffffffff8407081e
0x00000000004a6fa3 : call 0xffffffffaf0d0e19
0x0000000000464929 : call 0xffffffffc27f9133
0x000000000041db10 : call 0xffffffffc2cb2329
0x000000000041ec50 : call 0xffffffffc2cb3469
0x000000000041fa0a : call 0xffffffffc2cb4223
0x000000000042150d : call 0xffffffffc2cb5d26
0x0000000000421a12 : call 0xffffffffc2cb622b
0x0000000000421f4e : call 0xffffffffc2cb6767
0x000000000047e14a : call 0xffffffffc2d12d54
0x000000000041d990 : call 0xffffffffc37b219a
0x000000000041ed59 : call 0xffffffffc37b3563
0x000000000046a7fe : call 0xffffffffc3caa806
0x0000000000440bc7 : call 0xffffffffc4149518
0x0000000000440ae7 : call 0xffffffffc43c9438
0x00000000004b5088 : call 0xffffffffc44b4de8
0x00000000004abf44 : call 0xffffffffd84abf58
0x000000000044af75 : call 0xffffffffe1440cd8
0x00000000004b4728 : call 0xffffffffe34b4435
0x0000000000468b7a : call qword ptr [r10 + rax*8]
0x0000000000489990 : call qword ptr [r14]
0x00000000004018d0 : call qword ptr [r15 + rbx*8]
0x0000000000493def : call qword ptr [rax + 0x10fff932]
0x0000000000493df7 : call qword ptr [rax + 0x10fff935]
0x0000000000493dff : call qword ptr [rax + 0x10fff938]
0x0000000000493e07 : call qword ptr [rax + 0x10fff93b]
0x0000000000493e0f : call qword ptr [rax + 0x10fff93e]
0x0000000000493e17 : call qword ptr [rax + 0x10fff941]
0x0000000000493e1f : call qword ptr [rax + 0x10fff944]
0x00000000004942cb : call qword ptr [rax + 0x20fff9e4]
0x000000000049424b : call qword ptr [rax + 0x20fff9e5]
0x00000000004943a3 : call qword ptr [rax + 0x20fffa0d]
0x000000000049457b : call qword ptr [rax + 0x20fffa11]
0x000000000049489b : call qword ptr [rax + 0x20fffa34]
0x0000000000494a73 : call qword ptr [rax + 0x20fffa38]
0x000000000040e1ee : call qword ptr [rax + 0x458b41]
0x00000000004a3933 : call qword ptr [rax - 0x1f000352]
0x0000000000494e93 : call qword ptr [rax - 0x1f000559]
0x000000000049433f : call qword ptr [rax - 0x1f00063a]
0x000000000049415f : call qword ptr [rax - 0x1f000658]
0x0000000000494173 : call qword ptr [rax - 0x1f000666]
0x000000000049432b : call qword ptr [rax - 0x2f00062c]
0x0000000000493fb3 : call qword ptr [rax]
0x000000000040101e : call qword ptr [rbx + 0x10]
0x000000000040ea60 : call qword ptr [rbx]
0x00000000004ab59f : call qword ptr [rcx + rdx]
0x0000000000489b40 : call qword ptr [rcx]
0x00000000004018d1 : call qword ptr [rdi + rbx*8]
0x000000000041a2ed : call qword ptr [rdi]
0x0000000000494b5b : call qword ptr [rdx + 0x12fffa2a]
0x0000000000494b53 : call qword ptr [rdx + 0x12fffa2b]
0x0000000000494b4b : call qword ptr [rdx + 0x12fffa2c]
0x0000000000494b43 : call qword ptr [rdx + 0x12fffa2d]
0x0000000000494b3b : call qword ptr [rdx + 0x12fffa2e]
0x000000000049444f : call qword ptr [rdx + 0x22fffa0f]
0x0000000000494947 : call qword ptr [rdx + 0x22fffa36]
0x0000000000468b7b : call qword ptr [rdx + rax*8]
0x0000000000494967 : call qword ptr [rdx]
0x0000000000493f43 : call qword ptr [rsi + 0x16fff990]
0x0000000000493f4b : call qword ptr [rsi + 0x16fff991]
0x0000000000493f53 : call qword ptr [rsi + 0x26fff992]
0x00000000004948e3 : call qword ptr [rsi + 0x26fffa33]
0x0000000000489991 : call qword ptr [rsi]
0x000000000047c5e7 : call r10
0x000000000040092c : call r11
0x000000000044a490 : call r12
0x000000000044e830 : call r14
0x000000000044a9d2 : call r15
0x00000000004942fb : call rax
0x000000000040092d : call rbx
0x000000000041c743 : call rcx
0x000000000044a9d3 : call rdi
0x000000000040e8a7 : call rdx
0x000000000044e831 : call rsi
0x000000000044a491 : call rsp
0x000000000048c4c4 : cdq ; add rax, r9 ; jmp rax
0x00000000004a8ce0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000461153 : cdq ; ret 0xffff
0x0000000000477e64 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000469a71 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041cd9a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041c9f7 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047e5b3 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040d4ad : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000048856f : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000044fa82 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042af17 : clc ; add rax, rcx ; ret
0x000000000042b444 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004af38a : clc ; call qword ptr [rax]
0x0000000000493cc2 : clc ; call rax
0x0000000000494fa5 : clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x000000000045224c : clc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000494f9d : clc ; cli ; inc eax ; clc ; cli ; jmp rax
0x0000000000494f89 : clc ; cli ; jmp qword ptr [rax]
0x0000000000494fa1 : clc ; cli ; jmp rax
0x0000000000422b38 : clc ; cmovne rax, rcx ; ret
0x000000000042d589 : clc ; cmp rcx, rax ; jne 0x42d5bb ; xor eax, eax ; ret
0x000000000042d588 : clc ; cmp rcx, rax ; jne 0x42d5bc ; xor eax, eax ; ret
0x0000000000476846 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047f830 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423500 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000472760 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047fa54 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048c9ae : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401a6c : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046fad9 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000047898b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000461726 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045f6ce : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000045ea83 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000493cc6 : clc ; inc dword ptr [rax] ; hlt ; clc ; call rax
0x00000000004594f2 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000447f4a : clc ; jg 0x447f19 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000447fa6 : clc ; jg 0x447fa6 ; int1 ; mov eax, eax ; ret
0x0000000000453d97 : clc ; jg 0x453d26 ; ret 0xdb76
0x0000000000453d97 : clc ; jg 0x453d2a ; ret 0xdb76
0x0000000000493cba : clc ; jmp qword ptr [rax]
0x00000000004af39e : clc ; jmp qword ptr [rsi]
0x000000000046062f : clc ; jmp rax
0x00000000004b3054 : clc ; jns 0x4b305e ; add al, bl ; and edi, esp ; jmp qword ptr [rcx]
0x000000000048d453 : clc ; leave ; ret
0x00000000004a7942 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004126c4 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f087 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f9f7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434947 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fbf7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004348b7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fdf7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434827 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f0a3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000447a8e : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000447c0d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000004382dc : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000446d1a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048d5d1 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046f130 : clc ; mov rdx, r8 ; jmp 0x46f102
0x00000000004126dc : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a906 : clc ; pop rbp ; pop r12 ; ret
0x0000000000471817 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004753c3 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000490e68 : clc ; push rbx ; ret
0x00000000004b0954 : clc ; push rdx ; add byte ptr [rax], al ; pop rax ; sti ; std ; jmp qword ptr [rdx]
0x00000000004126f5 : clc ; ret
0x0000000000482d2a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047445f : clc ; shr rax, 2 ; ret
0x000000000048199d : clc ; std ; jbe 0x4819ad ; ret
0x00000000004ac0c8 : clc ; sub al, 0xf6 ; call qword ptr [rax]
0x00000000004851a1 : clc ; sub rax, r8 ; ret
0x0000000000440986 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000044692b : clc ; sub rax, rsi ; ret
0x000000000042b5bb : clc ; vzeroupper ; ret
0x00000000004ab1d8 : cld ; adc esi, edi ; jmp rsp
0x0000000000447eaf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004a3932 : cld ; call qword ptr [rax - 0x1f000352]
0x00000000004b3e66 : cld ; call rdx
0x00000000004a393e : cld ; inc dword ptr [rax - 0x1f000352] ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000047bb6e : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000447f8c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000447efa : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a390a : cld ; inc eax ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x00000000004a392a : cld ; jmp qword ptr [rax - 0x1f000352]
0x00000000004b2c42 : cld ; jmp qword ptr [rax]
0x00000000004b2c5a : cld ; jmp qword ptr [rbx]
0x00000000004b305a : cld ; jmp qword ptr [rcx]
0x00000000004b3f32 : cld ; jmp qword ptr [rsi]
0x00000000004a3902 : cld ; jmp rax
0x00000000004b2bfa : cld ; jmp rdx
0x00000000004a3b1e : cld ; jmp rsp
0x00000000004a3b16 : cld ; ljmp ptr [rax + rsi*4 - 0x4f6b0004] ; cld ; jmp rsp
0x000000000042f812 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fa15 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fc15 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fe15 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000447a96 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000447c18 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004382ee : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000446d28 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000446d22 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f446 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ad6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f626 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a56 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f806 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004349d6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f266 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b56 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004a391a : cld ; push qword ptr [rax - 0x1f000352] ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000042f0f1 : cld ; ret
0x00000000004ab0a9 : cld ; std ; call rax
0x00000000004b2a49 : cld ; sti ; jmp qword ptr [rbx]
0x00000000004a6df6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004475b2 : cld ; vzeroupper ; ret
0x0000000000415391 : cli ; add ch, al ; ret
0x0000000000415498 : cli ; add ch, al ; ret 0xffff
0x0000000000468fc5 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000411342 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000447a81 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x447a91 ; mov byte ptr [rdi], cl ; ret
0x0000000000446a7b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043830c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448b6e : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448bcc : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004943a2 : cli ; call qword ptr [rax + 0x20fffa0d]
0x000000000049457a : cli ; call qword ptr [rax + 0x20fffa11]
0x000000000049489a : cli ; call qword ptr [rax + 0x20fffa34]
0x0000000000494a72 : cli ; call qword ptr [rax + 0x20fffa38]
0x0000000000494e92 : cli ; call qword ptr [rax - 0x1f000559]
0x0000000000494382 : cli ; call qword ptr [rax]
0x00000000004b185a : cli ; call qword ptr [rbx]
0x00000000004b155a : cli ; call qword ptr [rcx]
0x00000000004b0d72 : cli ; call qword ptr [rdi]
0x0000000000494b5a : cli ; call qword ptr [rdx + 0x12fffa2a]
0x0000000000494b52 : cli ; call qword ptr [rdx + 0x12fffa2b]
0x0000000000494b4a : cli ; call qword ptr [rdx + 0x12fffa2c]
0x0000000000494b42 : cli ; call qword ptr [rdx + 0x12fffa2d]
0x0000000000494b3a : cli ; call qword ptr [rdx + 0x12fffa2e]
0x000000000049444e : cli ; call qword ptr [rdx + 0x22fffa0f]
0x0000000000494946 : cli ; call qword ptr [rdx + 0x22fffa36]
0x0000000000494966 : cli ; call qword ptr [rdx]
0x00000000004948e2 : cli ; call qword ptr [rsi + 0x26fffa33]
0x00000000004943ca : cli ; call qword ptr [rsi]
0x0000000000494ed2 : cli ; call rax
0x00000000004b0cde : cli ; call rcx
0x000000000049445e : cli ; call rdx
0x00000000004943ba : cli ; call rsi
0x0000000000494526 : cli ; call rsp
0x000000000044c035 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045d1de : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047f3d0 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045c195 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000471a67 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000494586 : cli ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x00000000004948a6 : cli ; inc dword ptr [rax + 0x33] ; cli ; call rax
0x0000000000494a7e : cli ; inc dword ptr [rax + 0x37] ; cli ; call rax
0x0000000000494c2a : cli ; inc dword ptr [rax + rbp - 6] ; call rsp
0x0000000000494e9e : cli ; inc dword ptr [rax - 0x2f000555] ; lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x0000000000494e8e : cli ; inc dword ptr [rax - 0x5a] ; cli ; call qword ptr [rax - 0x1f000559]
0x0000000000494cee : cli ; inc dword ptr [rax - 0x5f0005f6] ; or edi, edx ; jmp qword ptr [rax]
0x0000000000494e3a : cli ; inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x0000000000494576 : cli ; inc dword ptr [rax] ; adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x00000000004945e6 : cli ; inc dword ptr [rax] ; add edi, edx ; push qword ptr [rax + 2] ; cli ; jmp rsi
0x0000000000494f86 : cli ; inc dword ptr [rax] ; clc ; cli ; jmp qword ptr [rax]
0x0000000000494da6 : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494f36 : cli ; inc dword ptr [rax] ; idiv dl ; call qword ptr [rax]
0x0000000000494f62 : cli ; inc dword ptr [rax] ; idiv edx ; jmp qword ptr [rax]
0x0000000000494ede : cli ; inc dword ptr [rax] ; int1 ; cli ; call qword ptr [rax]
0x0000000000494fa6 : cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000494896 : cli ; inc dword ptr [rax] ; xor eax, 0x3490fffa ; cli ; jmp qword ptr [rax]
0x0000000000494522 : cli ; inc dword ptr [rbp + rcx - 6] ; call rsp
0x00000000004594ef : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000045224d : cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000455535 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000494952 : cli ; inc dword ptr [rdx + 0x35] ; cli ; call rdx
0x000000000049445a : cli ; inc dword ptr [rdx + 0xe] ; cli ; call rdx
0x000000000049466a : cli ; inc dword ptr [rdx + 2] ; cli ; call rdx
0x000000000049444a : cli ; inc dword ptr [rdx] ; adc dl, bh ; call qword ptr [rdx + 0x22fffa0f]
0x00000000004943b6 : cli ; inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x00000000004948de : cli ; inc dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rsi + 0x26fffa33]
0x0000000000494a1a : cli ; inc dword ptr [rsp + rsi - 6] ; call rsp
0x0000000000494f9e : cli ; inc eax ; clc ; cli ; jmp rax
0x0000000000494f5a : cli ; inc eax ; idiv dl ; jmp rax
0x0000000000494f7e : cli ; inc eax ; idiv edx ; jmp rax
0x00000000004948ce : cli ; inc esi ; xor eax, 0x3556fffa ; cli ; jmp rsi
0x00000000004382c7 : cli ; jg 0x4382da ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000446a46 : cli ; jg 0x446a58 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447079 : cli ; jg 0x44708c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004474e1 : cli ; jg 0x4474f4 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447c02 : cli ; jg 0x447c12 ; vzeroupper ; ret
0x0000000000447dd8 : cli ; jg 0x447de8 ; vzeroupper ; ret
0x00000000004947a6 : cli ; jmp qword ptr [rax + 0x10fffa02]
0x00000000004945da : cli ; jmp qword ptr [rax + 0x20fffa04]
0x00000000004945d2 : cli ; jmp qword ptr [rax + 0x20fffa05]
0x00000000004945ca : cli ; jmp qword ptr [rax + 0x20fffa06]
0x00000000004945c2 : cli ; jmp qword ptr [rax + 0x20fffa07]
0x00000000004945ba : cli ; jmp qword ptr [rax + 0x20fffa08]
0x0000000000494cf2 : cli ; jmp qword ptr [rax + 0x20fffa0b]
0x0000000000494d36 : cli ; jmp qword ptr [rax + 0x20fffa0d]
0x0000000000494cfa : cli ; jmp qword ptr [rax + 0x20fffa0e]
0x0000000000494d3e : cli ; jmp qword ptr [rax + 0x20fffa10]
0x0000000000494d02 : cli ; jmp qword ptr [rax + 0x20fffa11]
0x0000000000494d46 : cli ; jmp qword ptr [rax + 0x20fffa13]
0x0000000000494d0a : cli ; jmp qword ptr [rax + 0x20fffa14]
0x0000000000494d4e : cli ; jmp qword ptr [rax + 0x20fffa16]
0x0000000000494d12 : cli ; jmp qword ptr [rax + 0x20fffa17]
0x0000000000494d56 : cli ; jmp qword ptr [rax + 0x20fffa19]
0x0000000000494d1a : cli ; jmp qword ptr [rax + 0x20fffa1a]
0x0000000000494d5e : cli ; jmp qword ptr [rax + 0x20fffa1c]
0x0000000000494d22 : cli ; jmp qword ptr [rax + 0x20fffa1d]
0x0000000000494d66 : cli ; jmp qword ptr [rax + 0x20fffa1f]
0x0000000000494e36 : cli ; jmp qword ptr [rax + 0x40fffa8a]
0x0000000000494d2a : cli ; jmp qword ptr [rax - 0x1f0005e0]
0x00000000004943a6 : cli ; jmp qword ptr [rax]
0x0000000000494b32 : cli ; jmp qword ptr [rdx + 0x22fffa2f]
0x0000000000494452 : cli ; jmp qword ptr [rdx]
0x00000000004948e6 : cli ; jmp qword ptr [rsi]
0x0000000000494e3e : cli ; jmp rax
0x000000000040d254 : cli ; jmp rdx
0x00000000004943de : cli ; jmp rsi
0x000000000049450a : cli ; jmp rsp
0x000000000049476e : cli ; ljmp ptr [rdx + 0x50fffa01] ; or edx, edi ; call rax
0x000000000042fc18 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004004ca : cli ; mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000040d536 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042b8c8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042a376 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a9261 : cli ; push 0x6e ; ja 0x4a91ee ; ret 0x48f
0x0000000000494aaa : cli ; push qword ptr [rax + 0x32] ; cli ; call qword ptr [rax]
0x0000000000494582 : cli ; push qword ptr [rax + 0x40fffa10] ; adc dl, bh ; call rax
0x00000000004948a2 : cli ; push qword ptr [rax + 0x40fffa33] ; xor edi, edx ; call rax
0x00000000004945ea : cli ; push qword ptr [rax + 2] ; cli ; jmp rsi
0x00000000004947a2 : cli ; push qword ptr [rax] ; add edi, edx ; jmp qword ptr [rax + 0x10fffa02]
0x00000000004945b6 : cli ; push qword ptr [rax] ; or edx, edi ; jmp qword ptr [rax + 0x20fffa08]
0x000000000049451e : cli ; push qword ptr [rbp + rcx + 0xd44fffa] ; cli ; call rsp
0x00000000004943b2 : cli ; push qword ptr [rsi + 0x46fffa12] ; adc bh, dl ; call rsi
0x0000000000494a16 : cli ; push qword ptr [rsp + rsi + 0x3444fffa] ; cli ; call rsp
0x0000000000494f2a : cli ; push rax ; cli ; jmp rax
0x0000000000494f32 : cli ; push rax ; cmc ; cli ; inc dword ptr [rax] ; idiv dl ; call qword ptr [rax]
0x0000000000494f0a : cli ; push rax ; int1 ; cli ; call qword ptr [rax]
0x0000000000494a8a : cli ; push rax ; xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x00000000004479b9 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a7d05 : cli ; ret 0xac65
0x000000000044baeb : cli ; setae al ; ret
0x00000000004407b9 : cli ; test rdx, rdx ; je 0x4407d9 ; bsf rax, rdx ; ret
0x00000000004736e8 : cli ; test rdx, rdx ; je 0x473719 ; bsf rax, rdx ; ret
0x00000000004a694a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004abaea : cmc ; call qword ptr [rdx]
0x00000000004abb8a : cmc ; call rax
0x00000000004abafe : cmc ; call rsp
0x0000000000494f35 : cmc ; cli ; inc dword ptr [rax] ; idiv dl ; call qword ptr [rax]
0x00000000004abca2 : cmc ; jmp qword ptr [rax]
0x00000000004a9689 : cmc ; mov ch, 0xab ; ret
0x0000000000434a5a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f49e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000046fb97 : cmc ; mov rbp, rax ; jmp 0x46fb64
0x0000000000445e03 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a6537 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000445e07 : cmc ; sub eax, edx ; ret
0x00000000004a8cc5 : cmc ; xlatb ; ret 0x4e27
0x0000000000418db9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000418db8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000447ed4 : cmove eax, ecx ; pop rbx ; ret
0x0000000000471dc1 : cmove eax, ecx ; ret
0x0000000000423503 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000447e9c : cmove eax, edx ; pop rbx ; ret
0x000000000042363f : cmove eax, edx ; ret
0x000000000041480f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e6b8 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000471dc0 : cmove r8, rcx ; ret
0x0000000000447ed3 : cmove rax, rcx ; pop rbx ; ret
0x0000000000423502 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000447e9b : cmove rax, rdx ; pop rbx ; ret
0x000000000042363e : cmove rax, rdx ; ret
0x000000000047e6b7 : cmove rcx, rax ; mov rax, rcx ; ret
0x00000000004161fb : cmovg eax, ecx ; test rdx, rdx ; jne 0x4161f9 ; ret
0x00000000004708db : cmovg eax, ecx ; test rdx, rdx ; jne 0x4708d9 ; ret
0x0000000000422b3a : cmovne eax, ecx ; ret
0x0000000000447f2c : cmovne eax, edx ; pop rbx ; ret
0x000000000042353f : cmovne eax, edx ; ret
0x0000000000440344 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000422b39 : cmovne rax, rcx ; ret
0x0000000000447f2b : cmovne rax, rdx ; pop rbx ; ret
0x000000000042353e : cmovne rax, rdx ; ret
0x0000000000440343 : cmovne rax, rdx ; vzeroupper ; ret
0x00000000004508ac : cmovs eax, edx ; ret
0x000000000048dac8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000471b28 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x471b29 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000447e7e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000447f10 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000446918 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000488300 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004556d2 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044f5c2 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004163c7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004163b6 : cmp al, 0x24 ; call 0x412644
0x000000000048dc1d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048d0ec : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048d07d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004af398 : cmp al, 0x3d ; add byte ptr [rax], al ; push rsp ; xchg eax, ebp ; clc ; jmp qword ptr [rsi]
0x00000000004a7940 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000045a0c1 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040d539 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x0000000000494ddd : cmp al, 0xfa ; jmp rax
0x0000000000495559 : cmp al, 0xfb ; call rsi
0x0000000000495689 : cmp al, 0xfb ; jmp rax
0x0000000000495555 : cmp al, 0xfb ; push rsp ; cmp al, 0xfb ; call rsi
0x000000000044b39d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004462c6 : cmp al, byte ptr [rsi - 1] ; jne 0x4462ec ; xor eax, eax ; ret
0x000000000042b136 : cmp al, dh ; ret
0x000000000042b135 : cmp al, r14b ; ret
0x000000000048ae66 : cmp bh, 0x10 ; jne 0x48ae8f ; xor eax, eax ; ret
0x000000000048e006 : cmp bh, 0x10 ; jne 0x48e025 ; xor eax, eax ; ret
0x000000000048ee66 : cmp bh, 0x10 ; jne 0x48ee85 ; xor eax, eax ; ret
0x000000000048f8d6 : cmp bh, 0x10 ; jne 0x48f8ff ; xor eax, eax ; ret
0x000000000048dfec : cmp bh, 0x30 ; jne 0x48e021 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048ee4c : cmp bh, 0x30 ; jne 0x48ee81 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000493e05 : cmp bh, cl ; call qword ptr [rax + 0x10fff93b]
0x0000000000410722 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004120ef : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000476c53 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000004103ee : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000412b99 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040168b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x000000000042b177 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000004702a5 : cmp byte ptr [rax + 1], cl ; ret
0x000000000046fd30 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000045ad27 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000450ef8 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045aea4 : cmp byte ptr [rax - 0x75], cl ; jl 0x45aed5 ; and byte ptr [rax + 1], cl ; ret
0x0000000000410723 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000046fad6 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000452804 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000412a20 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000494878 : cmp byte ptr [rax], 0xfa ; call qword ptr [rax]
0x000000000042b166 : cmp byte ptr [rax], ah ; ret
0x0000000000416833 : cmp byte ptr [rax], al ; je 0x416845 ; ret
0x000000000048cfef : cmp byte ptr [rax], al ; je 0x48d018 ; add rsp, 0x18 ; ret
0x000000000043fee0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042b156 : cmp byte ptr [rax], dl ; ret
0x000000000042b155 : cmp byte ptr [rax], r10b ; ret
0x000000000042b165 : cmp byte ptr [rax], r12b ; ret
0x000000000043fedf : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000049408c : cmp byte ptr [rbp - 0x4fef0007], 0xf9 ; call rax
0x00000000004b3d99 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b3dcd : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b3d65 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048ab08 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040da86 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000415eb0 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000494088 : cmp byte ptr [rbx - 0x427f0007], 0xf9 ; call qword ptr [rax]
0x0000000000471850 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048d0eb : cmp byte ptr [rcx + rsi], 8 ; jne 0x48d0fe ; mov qword ptr [rax], rdx ; ret
0x000000000047ffa6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004ab0a2 : cmp byte ptr [rdi], 0 ; add byte ptr [rax + 0x40], al ; js 0x4ab0af ; std ; call rax
0x00000000004167f8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042ca5d : cmp byte ptr [rdi], dl ; ret
0x000000000042d570 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d559 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d542 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042bffe : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048d07c : cmp byte ptr [rdx + rsi], 8 ; jne 0x48d0a5 ; mov rax, qword ptr [rax] ; ret
0x0000000000494108 : cmp byte ptr [rdx - 0x437f0007], 0xf9 ; call qword ptr [rax]
0x000000000041849b : cmp byte ptr [rdx], ch ; add byte ptr [rcx], al ; ret
0x0000000000493e01 : cmp cl, bh ; call qword ptr [rax]
0x0000000000488be2 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x00000000004047f7 : cmp cl, ch ; ret 0xfffb
0x0000000000440341 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000447dba : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000048ae65 : cmp dil, 0x10 ; jne 0x48ae90 ; xor eax, eax ; ret
0x000000000048e005 : cmp dil, 0x10 ; jne 0x48e026 ; xor eax, eax ; ret
0x000000000048ee65 : cmp dil, 0x10 ; jne 0x48ee86 ; xor eax, eax ; ret
0x000000000048f8d5 : cmp dil, 0x10 ; jne 0x48f900 ; xor eax, eax ; ret
0x0000000000447a80 : cmp dl, 1 ; ja 0x447aa3 ; jb 0x447a92 ; mov byte ptr [rdi], cl ; ret
0x000000000043830b : cmp dl, 1 ; jb 0x43831d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446a7a : cmp dl, 1 ; jb 0x446a88 ; mov byte ptr [rdi], cl ; ret
0x0000000000422ba5 : cmp dl, al ; jne 0x422b98 ; sub rax, 0x10 ; ret
0x0000000000494879 : cmp dl, bh ; call qword ptr [rax]
0x0000000000494a75 : cmp dl, bh ; jmp qword ptr [rax]
0x0000000000494939 : cmp dl, bh ; jmp rdx
0x0000000000422ba4 : cmp dl, r8b ; jne 0x422b99 ; sub rax, 0x10 ; ret
0x00000000004717f8 : cmp dword ptr [rax + 0x30], 0 ; je 0x471807 ; ret
0x000000000040ea31 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000434598 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000488e8d : cmp dword ptr [rbx], esp ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000416831 : cmp dword ptr [rdi + 0x38], 0 ; je 0x416847 ; ret
0x0000000000424341 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000495684 : cmp dword ptr [rip + 0x3cd6fffb], edi ; sti ; jmp rax
0x00000000004141a3 : cmp dword ptr [rsi + 0x2a], ebp ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000047f82f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000471816 : cmp eax, -1 ; je 0x471829 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048199c : cmp eax, -3 ; jbe 0x4819ae ; ret
0x00000000004876f5 : cmp eax, 0x23187d ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000460b69 : cmp eax, 0x255bb2 ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000412642 : cmp eax, 0x2a6960 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040382a : cmp eax, 0x2b5730 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000495685 : cmp eax, 0x3cd6fffb ; sti ; jmp rax
0x0000000000495609 : cmp eax, 0x3d4ffffb ; sti ; jmp qword ptr [rdx]
0x0000000000493e0d : cmp eax, 0x3e90fff9 ; stc ; call qword ptr [rax]
0x000000000044a4b2 : cmp eax, 0x7d8b48 ; call r12
0x000000000044c20f : cmp eax, 0x83482f74 ; ret
0x000000000044c036 : cmp eax, 0x83497174 ; ret
0x0000000000473464 : cmp eax, 0x89000001 ; ret 0x8948
0x00000000004af399 : cmp eax, 0x95540000 ; clc ; jmp qword ptr [rsi]
0x00000000004af385 : cmp eax, 0x95580000 ; clc ; call qword ptr [rax]
0x00000000004af3ad : cmp eax, 0xb7700000 ; clc ; call qword ptr [rax]
0x00000000004af3d5 : cmp eax, 0xd8980000 ; clc ; call qword ptr [rax]
0x00000000004af3fd : cmp eax, 0xf4200000 ; clc ; call qword ptr [rax]
0x0000000000449356 : cmp eax, 0xfffff000 ; ja 0x449368 ; ret
0x00000000004493a4 : cmp eax, 0xfffff000 ; ja 0x4493b8 ; ret
0x00000000004495af : cmp eax, 0xfffff000 ; ja 0x449618 ; ret
0x0000000000449645 : cmp eax, 0xfffff000 ; ja 0x449658 ; ret
0x0000000000449682 : cmp eax, 0xfffff000 ; ja 0x4496e8 ; ret
0x0000000000449718 : cmp eax, 0xfffff000 ; ja 0x449730 ; ret
0x0000000000449748 : cmp eax, 0xfffff000 ; ja 0x449760 ; ret
0x0000000000449952 : cmp eax, 0xfffff000 ; ja 0x4499a0 ; ret
0x00000000004499c8 : cmp eax, 0xfffff000 ; ja 0x4499e0 ; ret
0x000000000044a121 : cmp eax, 0xfffff000 ; ja 0x44a138 ; ret
0x000000000045acae : cmp eax, 0xfffff000 ; ja 0x45acc8 ; ret
0x00000000004754b6 : cmp eax, 0xfffff000 ; ja 0x4754c8 ; ret
0x000000000047550a : cmp eax, 0xfffff000 ; ja 0x475520 ; ret
0x00000000004492c8 : cmp eax, 0xfffff001 ; jae 0x4492d7 ; ret
0x000000000044a358 : cmp eax, 0xfffff001 ; jae 0x44a367 ; ret
0x000000000044a388 : cmp eax, 0xfffff001 ; jae 0x44a397 ; ret
0x000000000044a3b8 : cmp eax, 0xfffff001 ; jae 0x44a3c7 ; ret
0x000000000044ba5b : cmp eax, 0xfffff001 ; jae 0x44ba6a ; ret
0x000000000044ba88 : cmp eax, 0xfffff001 ; jae 0x44ba97 ; ret
0x0000000000475438 : cmp eax, 0xfffff001 ; jae 0x475447 ; ret
0x00000000004884a8 : cmp eax, 0xfffff001 ; jae 0x4884b7 ; ret
0x000000000044843b : cmp eax, 2 ; je 0x44844f ; xor eax, eax ; ret
0x000000000044bbca : cmp eax, 4 ; je 0x44bbd5 ; ret
0x000000000046f12b : cmp eax, ecx ; jg 0x46f148 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f107
0x00000000004468cf : cmp eax, ecx ; jle 0x44690f ; movsxd rax, ecx ; ret
0x00000000004462e3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000041853b : cmp eax, edx ; jae 0x418567 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487c24 : cmp eax, esi ; je 0x487c35 ; ret
0x0000000000462c4f : cmp eax, esp ; je 0x462a86 ; jmp 0x462c24
0x000000000046f12a : cmp eax, r9d ; jg 0x46f149 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f108
0x000000000045624c : cmp ebp, ebx ; jb 0x4562be ; mov rdx, rax ; jmp 0x456215
0x000000000044bb66 : cmp ebx, 0xa ; je 0x44bb71 ; ret
0x000000000044d17e : cmp ebx, eax ; setne dl ; jmp 0x44d16a
0x0000000000473b85 : cmp ecx, 0xc00 ; je 0x473b99 ; ret
0x000000000044bd91 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44bd86 ; ret
0x000000000048705e : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x48706f ; add rdx, rax ; jmp 0x487078
0x000000000044e682 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047f878 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f828 ; xor eax, eax ; ret
0x0000000000471dbe : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042d58b : cmp ecx, eax ; jne 0x42d5b9 ; xor eax, eax ; ret
0x000000000047e608 : cmp ecx, eax ; jne 0x47e5b2 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004841c2 : cmp ecx, ecx ; ret
0x0000000000471b2a : cmp ecx, esi ; jne 0x471b27 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047e5f6 : cmp ecx, esi ; jne 0x47e5d5 ; ret
0x0000000000465bc0 : cmp edi, eax ; ja 0x465ba7 ; mov eax, r9d ; ret
0x0000000000493e09 : cmp edi, ecx ; call qword ptr [rax]
0x000000000047582e : cmp edi, edx ; ja 0x47585d ; ret
0x0000000000446c82 : cmp edi, edx ; jb 0x446c8f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000465bbf : cmp edi, r8d ; ja 0x465ba8 ; mov eax, r9d ; ret
0x000000000041f3ea : cmp edx, eax ; jne 0x41f3b5 ; ret
0x0000000000447a6b : cmp edx, ecx ; jne 0x447a58 ; ret
0x0000000000447bd2 : cmp edx, ecx ; jne 0x447bbe ; vzeroupper ; ret
0x0000000000447d95 : cmp edx, ecx ; jne 0x447d79 ; vzeroupper ; ret
0x000000000044baea : cmp edx, edi ; setae al ; ret
0x0000000000474296 : cmp edx, esi ; je 0x4742a7 ; test edx, edx ; jne 0x474299 ; ret
0x0000000000418579 : cmp esi, -1 ; setne al ; neg eax ; ret
0x0000000000458474 : cmp esi, 3 ; je 0x458486 ; ret
0x0000000000447065 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a8cc4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000041779a : cmp esi, ecx ; jne 0x417797 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004717f7 : cmp qword ptr [rax + 0x30], 0 ; je 0x471808 ; ret
0x0000000000416830 : cmp qword ptr [rdi + 0x38], 0 ; je 0x416848 ; ret
0x000000000044bb65 : cmp r11d, 0xa ; je 0x44bb72 ; ret
0x000000000045624b : cmp r13, r11 ; jb 0x4562bf ; mov rdx, rax ; jmp 0x456216
0x0000000000449355 : cmp rax, -0x1000 ; ja 0x449369 ; ret
0x00000000004493a3 : cmp rax, -0x1000 ; ja 0x4493b9 ; ret
0x00000000004495ae : cmp rax, -0x1000 ; ja 0x449619 ; ret
0x0000000000449644 : cmp rax, -0x1000 ; ja 0x449659 ; ret
0x0000000000449681 : cmp rax, -0x1000 ; ja 0x4496e9 ; ret
0x0000000000449717 : cmp rax, -0x1000 ; ja 0x449731 ; ret
0x0000000000449747 : cmp rax, -0x1000 ; ja 0x449761 ; ret
0x0000000000449951 : cmp rax, -0x1000 ; ja 0x4499a1 ; ret
0x00000000004499c7 : cmp rax, -0x1000 ; ja 0x4499e1 ; ret
0x000000000044a120 : cmp rax, -0x1000 ; ja 0x44a139 ; ret
0x000000000045acad : cmp rax, -0x1000 ; ja 0x45acc9 ; ret
0x00000000004754b5 : cmp rax, -0x1000 ; ja 0x4754c9 ; ret
0x0000000000475509 : cmp rax, -0x1000 ; ja 0x475521 ; ret
0x00000000004492c7 : cmp rax, -0xfff ; jae 0x4492d8 ; ret
0x000000000044a357 : cmp rax, -0xfff ; jae 0x44a368 ; ret
0x000000000044a387 : cmp rax, -0xfff ; jae 0x44a398 ; ret
0x000000000044a3b7 : cmp rax, -0xfff ; jae 0x44a3c8 ; ret
0x000000000044ba5a : cmp rax, -0xfff ; jae 0x44ba6b ; ret
0x000000000044ba87 : cmp rax, -0xfff ; jae 0x44ba98 ; ret
0x0000000000475437 : cmp rax, -0xfff ; jae 0x475448 ; ret
0x00000000004884a7 : cmp rax, -0xfff ; jae 0x4884b8 ; ret
0x000000000047f82e : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000048199b : cmp rax, -3 ; jbe 0x4819af ; ret
0x000000000041853a : cmp rax, rdx ; jae 0x418568 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487c23 : cmp rax, rsi ; je 0x487c36 ; ret
0x000000000044bd90 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44bd87 ; ret
0x000000000047f877 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x47f829 ; xor eax, eax ; ret
0x0000000000471dbd : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047e607 : cmp rcx, r8 ; jne 0x47e5b3 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042d58a : cmp rcx, rax ; jne 0x42d5ba ; xor eax, eax ; ret
0x0000000000471b29 : cmp rcx, rsi ; jne 0x471b28 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047e5f5 : cmp rcx, rsi ; jne 0x47e5d6 ; ret
0x000000000047582d : cmp rdi, rdx ; ja 0x47585e ; ret
0x0000000000446c81 : cmp rdi, rdx ; jb 0x446c90 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041f3e9 : cmp rdx, r8 ; jne 0x41f3b6 ; ret
0x0000000000447a6a : cmp rdx, rcx ; jne 0x447a59 ; ret
0x0000000000447a69 : cmp rdx, rcx ; jne 0x447a5a ; ret
0x0000000000447bd1 : cmp rdx, rcx ; jne 0x447bbf ; vzeroupper ; ret
0x0000000000447d94 : cmp rdx, rcx ; jne 0x447d7a ; vzeroupper ; ret
0x000000000044bae9 : cmp rdx, rdi ; setae al ; ret
0x0000000000417799 : cmp rsi, rcx ; jne 0x417798 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000042d009 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000494e91 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; call qword ptr [rax - 0x1f000559]
0x000000000040058c : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400595 ; ret
0x000000000043dcf6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004aa6f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rbx
0x000000000047c948 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000494e95 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; jmp rax
0x000000000049415d : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; call qword ptr [rax - 0x1f000658]
0x0000000000400b09 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000048aee0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000419e2c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048af75 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004513ff : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000491f7c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004916dc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004b2a48 : cwde ; cld ; sti ; jmp qword ptr [rbx]
0x0000000000495554 : cwde ; cmp al, 0xfb ; push rsp ; cmp al, 0xfb ; call rsi
0x0000000000459414 : cwde ; fadd qword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004af3d8 : cwde ; fdivr st(0) ; call qword ptr [rax]
0x00000000004aff18 : cwde ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000045ca9c : cwde ; ret
0x00000000004ac008 : cwde ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004b4df4 : cwde ; xchg eax, edi ; add byte ptr [rax], al ; test al, 0x36 ; std ; jmp qword ptr [rcx]
0x0000000000441fe1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000441fe2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004475ad : dec byte ptr [rax + 0x7f] ; jl 0x4475d2 ; cld ; vzeroupper ; ret
0x000000000045d9d9 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x0000000000480c7f : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x1de8
0x0000000000472610 : dec byte ptr [rax - 0x77] ; ret
0x0000000000480c1d : dec byte ptr [rax - 0x7d] ; ret
0x000000000044a602 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e3d6 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000040df87 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000481999 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x4819b1 ; ret
0x00000000004565f3 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x0000000000410fed : dec dword ptr [rax + 0x29] ; ret
0x0000000000442122 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000482961 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482aa1 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041e475 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000047624b : dec dword ptr [rax + 0x39] ; ret
0x0000000000412e2d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000489149 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000048465e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x00000000004a4c7f : dec dword ptr [rax + 0x60fffd77] ; ja 0x4a4c8c ; jmp qword ptr [rax]
0x000000000046eb42 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x00000000004733f9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000047f831 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423501 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473ba9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045ad2b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000472761 : dec dword ptr [rax + 1] ; ret
0x0000000000403003 : dec dword ptr [rax - 0x39] ; ret
0x000000000044924f : dec dword ptr [rax - 0x39] ; ret 0
0x00000000004491f4 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045da40 : dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000449167 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x00000000004686f6 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004494e5 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004490bc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000456504 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047fa55 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041e8c8 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048c182 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044ee0c : dec dword ptr [rax - 0x75] ; jne 0x44eda6 ; call rsi
0x0000000000468f0b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048c9af : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000481bdc : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000041f574 : dec dword ptr [rax - 0x77] ; add eax, 0x29a2e4 ; ret
0x000000000048a337 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f3d1 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000401a6d : dec dword ptr [rax - 0x77] ; ret
0x000000000047581e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000047cc07 : dec dword ptr [rax - 0x77] ; ret 0x28e8
0x000000000041ed6f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000042411b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x000000000047577d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041eaec : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000423477 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045ab52 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046da96 : dec dword ptr [rax - 0x77] ; ret 0x89e8
0x000000000046d7a0 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x0000000000448fe6 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004785ec : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000423b96 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044a315 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x0000000000449141 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000045651d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x000000000044912d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000423fa8 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046b819 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000475d5c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000046fada : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040580f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000469703 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048199a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x4819b0 ; ret
0x000000000048f8f7 : dec dword ptr [rax - 0x7d] ; in al, dx ; or al, ch ; jmp rdx
0x000000000040475f : dec dword ptr [rax - 0x7d] ; ret
0x0000000000454321 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452a0b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000405d5b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000004565f4 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048df77 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x00000000004590f8 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044b3a0 : dec dword ptr [rax - 0x7f] ; ret
0x000000000043459c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000476f5d : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048e974 : dec dword ptr [rax - 9] ; ret
0x0000000000496393 : dec dword ptr [rax] ; je 0x496396 ; jmp rax
0x0000000000461944 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000467b8d : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000045c196 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423dd3 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400de4 : dec dword ptr [rbx + 0x2bb01115] ; add bh, dh ; ret 0
0x0000000000422aed : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000471a68 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000470ffb : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000460183 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046189f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047c2a9 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000046b025 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046aba7 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000040219d : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000047c525 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x0000000000457efa : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000044ee09 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000458051 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000045832f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045d836 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x00000000004893a7 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000040e24f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004600e7 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047c5f0 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x00000000004047a1 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047cf90 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046ab74 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041bfa6 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000045feef : dec dword ptr [rcx - 0x7d] ; ret
0x000000000049560b : dec dword ptr [rdi + 0x3d] ; sti ; jmp qword ptr [rdx]
0x00000000004603eb : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x00000000004508ab : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000452f0f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000446170 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045f6cf : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047d6ea : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042107c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000041857b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000049436f : dec dword ptr [rsi + 0xc] ; cli ; call rax
0x00000000004594ed : dec eax ; cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000049502b : dec eax ; sti ; jmp rax
0x0000000000442121 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000004735e2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047e655 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x0000000000458471 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x458489 ; ret
0x0000000000465bd6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000046fb96 : div ebp ; mov rbp, rax ; jmp 0x46fb65
0x0000000000447fa8 : div ecx ; mov eax, eax ; ret
0x0000000000447f8f : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000046fb95 : div r13 ; mov rbp, rax ; jmp 0x46fb66
0x0000000000465bd5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042b667 : enter -0x23b, -0x29 ; ret 0xc085
0x00000000004b4258 : enter -0x320, -1 ; ret
0x000000000047e5b0 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004462e4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000046a574 : enter -0x6a2, -1 ; jmp 0x46a542
0x0000000000400501 : enter -0x72b4, 5 ; ret 0x927
0x00000000004836eb : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000441fde : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044211e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000042b447 : enter -0x73b, 0x77 ; ret
0x000000000047e6ba : enter -0x76b8, -0x38 ; ret
0x000000000042be14 : enter -2, -1 ; ret
0x00000000004594ee : enter -6, -0x7d ; clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046f12c : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x46f106
0x0000000000440569 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046ba5c : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000004844b1 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041f519 : enter 0x29, 0 ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004408ce : enter 0x2948, -0x30 ; vzeroupper ; ret
0x00000000004259cd : enter 0x31c3, -0x40 ; ret
0x00000000004468d0 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004a947c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b4724 : enter 0x90, 0 ; call 0xffffffffe34b4439
0x000000000042d0b6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043ff31 : enter 0xf66, -0x15 ; ret
0x000000000048d093 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000040fc88 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f756 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000465ee8 : fadd dword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x0000000000459415 : fadd qword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000465bc3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000042cc01 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048fea4 : fbstp dword ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8ab8 : fcmovb st(0), st(3) ; ret
0x00000000004409eb : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045e8b6 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000048d099 : fcomi st(3) ; ret
0x0000000000410479 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000414456 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a1b1 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004b1234 : fcomp dword ptr [rbx] ; add byte ptr [rax], cl ; std ; jmp qword ptr [rdi]
0x00000000004a9839 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a7aa0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000488398 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048847f : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000490cb0 : fdiv qword ptr [rdx + 0x39480022] ; ret
0x00000000004941d9 : fdiv st(1), st(0) ; inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x0000000000494219 : fdiv st(1), st(0) ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004941f9 : fdiv st(1), st(0) ; jmp qword ptr [rax]
0x000000000048ace9 : fdiv st(3) ; ret
0x00000000004941dd : fdivp st(1) ; jmp qword ptr [rax]
0x000000000049421d : fdivp st(1) ; jmp rax
0x00000000004b1a4d : fdivp st(2) ; call qword ptr [rsi]
0x00000000004af3d9 : fdivr st(0) ; call qword ptr [rax]
0x0000000000494231 : fdivr st(1) ; call qword ptr [rax]
0x0000000000494211 : fdivr st(1) ; inc dword ptr [rax - 0x26] ; stc ; jmp qword ptr [rax]
0x0000000000494251 : fdivr st(1) ; jmp rax
0x00000000004a6df5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000048f8f5 : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; in al, dx ; or al, ch ; jmp rdx
0x00000000004462e8 : fdivr st(7) ; ret
0x000000000040efe8 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000004a9686 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000418d52 : fidiv dword ptr [rsi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000487ff5 : fidivr dword ptr [rax + 1] ; ret
0x000000000046c43d : fild qword ptr [rbp - 0x74b7ffdc] ; add al, 0xf8 ; jmp rax
0x0000000000424431 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004649b2 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x0000000000424432 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000419a1c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x00000000004550b9 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000480c77 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x000000000046554d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000042a196 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046becd : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000450a4f : fimul word ptr [rax + 1] ; ret
0x00000000004842fe : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x484358
0x00000000004880fe : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x488158
0x00000000004217d1 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41da16
0x000000000041645e : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000470cd0 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000458687 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004832f1 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046639c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047f446 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000477ebe : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048c4c0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000048330b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000454d97 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047d564 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000420c6b : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000405d7e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x00000000004579ea : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000480c82 : fisttp word ptr [rax - 0x77] ; ret 0x1de8
0x00000000004018d3 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000048338f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000043f02d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042cfd1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ccd1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000483604 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a7ae1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000473492 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b079 : fldenv dword ptr [rsi + 0xf] ; je 0x42b0d6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b357 : fldenv dword ptr [rsi + 0xf] ; je 0x42b3b4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d051 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042af71 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004683bc : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004843a4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041ab1f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000411ee8 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e061 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004898f4 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000476f60 : fmul dword ptr [rcx + 0x21] ; ret
0x0000000000468da0 : fmul dword ptr [rdi] ; ret
0x0000000000486b82 : fmul qword ptr [rax - 0x77] ; ret
0x0000000000424789 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438caf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000045f4af : fmul qword ptr [rdi] ; lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000457be8 : fmul qword ptr [rdi] ; ret 0xc389
0x00000000004242ef : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000045624d : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x456214
0x000000000040dad9 : fpatan ; ret
0x000000000042cdd1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a77c7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a7b40 : fstp st(0) ; ret 0xde5d
0x00000000004b3058 : fsub dword ptr [rbx] ; cld ; jmp qword ptr [rcx]
0x00000000004492d8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000449368 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042d0d1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440e54 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004466fb : fsub qword ptr [rsi + 0xf] ; jmp 0x4466c7
0x000000000042ced1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044004c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000041c065 : fsubr dword ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000449914 : fsubr st(3) ; ret 0xf66
0x00000000004a9818 : fucom st(5) ; loop 0x4a9871 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047a0f1 : fucomi st(3) ; ret 0x1f0f
0x000000000048b391 : fucompi st(1) ; ret
0x00000000004b05d1 : fyl2xp1 ; call qword ptr [rax]
0x0000000000494295 : fyl2xp1 ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x000000000044a9d1 : hlt ; call r15
0x00000000004af401 : hlt ; clc ; call qword ptr [rax]
0x0000000000493cc9 : hlt ; clc ; call rax
0x0000000000495558 : hlt ; cmp al, 0xfb ; call rsi
0x00000000004a7bc8 : hlt ; jmp 0x4a7b9d
0x00000000004b0752 : hlt ; jmp qword ptr [rbx]
0x00000000004b3ad2 : hlt ; jmp qword ptr [rcx]
0x00000000004349da : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f68e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000445df3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a5a : hlt ; nop dword ptr [rax + rax] ; ret
0x000000000044def4 : hlt ; ret 0x26
0x00000000004a7d03 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000046c128 : hlt ; stosd dword ptr [rdi], eax ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004ac0dc : hlt ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004adf50 : hlt ; sub byte ptr [rax], al ; add ah, cl ; sal dh, cl ; call qword ptr [rax]
0x0000000000445df7 : hlt ; sub eax, edx ; ret
0x000000000045d83c : idiv bh ; call rax
0x000000000045ea84 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045e596 : idiv bh ; jmp qword ptr [rax]
0x00000000004508a6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004b1731 : idiv ch ; call rdx
0x0000000000494f39 : idiv dl ; call qword ptr [rax]
0x0000000000494f61 : idiv dl ; inc dword ptr [rax] ; idiv edx ; jmp qword ptr [rax]
0x0000000000494f59 : idiv dl ; inc eax ; idiv dl ; jmp rax
0x0000000000494f3d : idiv dl ; jmp qword ptr [rax]
0x0000000000494f5d : idiv dl ; jmp rax
0x0000000000491924 : idiv edi ; call 0x40dc04
0x000000000045db56 : idiv edi ; call qword ptr [rax]
0x000000000045da3e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000046a541 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000046979d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004926c6 : idiv edi ; sub byte ptr [rdi - 0x50a20009], 0xf7 ; jmp rcx
0x0000000000494f85 : idiv edx ; inc dword ptr [rax] ; clc ; cli ; jmp qword ptr [rax]
0x0000000000494f7d : idiv edx ; inc eax ; idiv edx ; jmp rax
0x0000000000494f65 : idiv edx ; jmp qword ptr [rax]
0x0000000000494f81 : idiv edx ; jmp rax
0x0000000000478987 : imul al ; sti ; jp 0x47898c ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000444951 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000467e82 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x0000000000412644 : imul ebp, dword ptr [rdx], 0x2740000 ; ret
0x00000000004ad187 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000493e91 : imul edi, ecx, 0xf96a20ff ; call qword ptr [rax]
0x0000000000404934 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000494df9 : imul edi, edx, -1 ; loopne 0x494e71 ; cli ; jmp rax
0x000000000047953b : imul edi, edx, 0xd8d48ff ; ret
0x0000000000494df5 : imul edi, edx, 0xfa6be0ff ; jmp rax
0x0000000000417fee : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004741b3 : imul esp, dword ptr [rax], 0x39480024 ; ret
0x0000000000443dcc : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004b4e2c : in al, 0x36 ; std ; jmp rsp
0x00000000004af740 : in al, 0x40 ; add byte ptr [rax], al ; or al, 0x82 ; stc ; call qword ptr [rdx]
0x0000000000440adc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044c033 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x000000000041f578 : in al, 0xa2 ; sub dword ptr [rax], eax ; ret
0x000000000045e130 : in al, 0xf ; lahf ; ret
0x00000000004349ba : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000447a6e : in al, 0xf3 ; ret
0x00000000004941e9 : in al, 0xf9 ; call qword ptr [rax]
0x00000000004942cd : in al, 0xf9 ; jmp qword ptr [rax]
0x000000000041a2e7 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call qword ptr [rdi]
0x000000000041f825 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; int1 ; ret 2
0x000000000046f847 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000044f7c0 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000412a23 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000421324 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2a7
0x000000000045e5d4 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045e411 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000414811 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f68a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434dba : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000048f8fa : in al, dx ; or al, ch ; jmp rdx
0x000000000041eb0f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042a584 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048dc79 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048a6f4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004b1884 : in al, dx ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x0000000000477dfd : in al, dx ; sub byte ptr [rbp + rcx*4 + 0x15], cl ; pop rsp ; ret 2
0x00000000004a925e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a91f1 ; ret 0x48f
0x00000000004a925d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a91f2 ; ret 0x48f
0x00000000004a7963 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000484662 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a6bf9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048487f : in eax, 0x77 ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000048c1ba : in eax, 0x83 ; call qword ptr [rcx]
0x000000000046339d : in eax, 0xdf ; loopne 0x46332e ; ret
0x00000000004a9819 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000400b37 : in eax, 0xe8 ; ret
0x0000000000474753 : in eax, 0xf ; je 0x474778 ; add rax, 2 ; ret
0x0000000000447f29 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000434a3a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000049424d : in eax, 0xf9 ; jmp qword ptr [rax]
0x000000000049426d : in eax, 0xf9 ; jmp rax
0x00000000004a8ce1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000402b2d : in eax, 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000042447b : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000466948 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000469ad8 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000044a48a : in eax, dx ; jne 0x44a4a7 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044aff5 : in eax, dx ; jne 0x44b01f ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b028 : in eax, dx ; jne 0x44b078 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b054 : in eax, dx ; jne 0x44b0d8 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000048feef : in eax, dx ; jne 0x48fed1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490142 : in eax, dx ; jne 0x49012f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490cfc : in eax, dx ; jne 0x490ce7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446612 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000042f49a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e3a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000416202 : in eax, dx ; ret
0x0000000000469701 : in eax, dx ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446762 : in eax, dx ; sub rax, 1 ; ret
0x0000000000446a78 : inc bl ; cmp dl, 1 ; jb 0x446a8a ; mov byte ptr [rdi], cl ; ret
0x00000000004167f2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044a61c : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x0000000000458475 : inc byte ptr [rbx] ; je 0x458485 ; ret
0x000000000047f0f8 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494587 : inc dword ptr [rax + 0x10] ; cli ; call rax
0x000000000049408b : inc dword ptr [rax + 0x10fff9bd] ; mov al, 0xf9 ; call rax
0x00000000004948a7 : inc dword ptr [rax + 0x33] ; cli ; call rax
0x0000000000494a7f : inc dword ptr [rax + 0x37] ; cli ; call rax
0x0000000000494c2b : inc dword ptr [rax + rbp - 6] ; call rsp
0x00000000004a393f : inc dword ptr [rax - 0x1f000352] ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000049427f : inc dword ptr [rax - 0x21] ; stc ; call qword ptr [rax]
0x00000000004941db : inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x00000000004941f7 : inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000494297 : inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000494213 : inc dword ptr [rax - 0x26] ; stc ; jmp qword ptr [rax]
0x0000000000494327 : inc dword ptr [rax - 0x2d] ; stc ; call qword ptr [rax - 0x2f00062c]
0x0000000000494e9f : inc dword ptr [rax - 0x2f000555] ; lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x000000000049434b : inc dword ptr [rax - 0x2f000636] ; retf ; stc ; jmp qword ptr [rax]
0x000000000049417f : inc dword ptr [rax - 0x2f000662] ; lahf ; stc ; jmp qword ptr [rax]
0x000000000049433b : inc dword ptr [rax - 0x3b] ; stc ; call qword ptr [rax - 0x1f00063a]
0x00000000004940ab : inc dword ptr [rax - 0x43] ; stc ; call rax
0x00000000004940a7 : inc dword ptr [rax - 0x45] ; stc ; inc dword ptr [rax - 0x43] ; stc ; call rax
0x0000000000493ffb : inc dword ptr [rax - 0x4a] ; stc ; jmp qword ptr [rax]
0x000000000049406f : inc dword ptr [rax - 0x50] ; stc ; inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x000000000049415b : inc dword ptr [rax - 0x59] ; stc ; call qword ptr [rax - 0x1f000658]
0x0000000000494e8f : inc dword ptr [rax - 0x5a] ; cli ; call qword ptr [rax - 0x1f000559]
0x0000000000494cef : inc dword ptr [rax - 0x5f0005f6] ; or edi, edx ; jmp qword ptr [rax]
0x0000000000493fe7 : inc dword ptr [rax - 0x6b] ; stc ; jmp rax
0x0000000000493deb : inc dword ptr [rax - 0x6f0006e1] ; xor bh, cl ; call qword ptr [rax]
0x0000000000494e3b : inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x000000000046a22d : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000045eac5 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x0000000000494577 : inc dword ptr [rax] ; adc bh, dl ; call qword ptr [rax + 0x20fffa11]
0x000000000045ea86 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000447ecf : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042d5e7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004945e7 : inc dword ptr [rax] ; add edi, edx ; push qword ptr [rax + 2] ; cli ; jmp rsi
0x0000000000494f87 : inc dword ptr [rax] ; clc ; cli ; jmp qword ptr [rax]
0x0000000000494da7 : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x000000000049421b : inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x0000000000493cc7 : inc dword ptr [rax] ; hlt ; clc ; call rax
0x0000000000494f37 : inc dword ptr [rax] ; idiv dl ; call qword ptr [rax]
0x0000000000494f63 : inc dword ptr [rax] ; idiv edx ; jmp qword ptr [rax]
0x0000000000493e9b : inc dword ptr [rax] ; insb byte ptr [rdi], dx ; stc ; push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x0000000000494edf : inc dword ptr [rax] ; int1 ; cli ; call qword ptr [rax]
0x0000000000494073 : inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x0000000000493e57 : inc dword ptr [rax] ; pop rcx ; stc ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x0000000000494fa7 : inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000493dcb : inc dword ptr [rax] ; sub cl, bh ; jmp qword ptr [rax]
0x0000000000494897 : inc dword ptr [rax] ; xor eax, 0x3490fffa ; cli ; jmp qword ptr [rax]
0x0000000000454d94 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047bb6f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000494523 : inc dword ptr [rbp + rcx - 6] ; call rsp
0x00000000004824ec : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000402730 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400927 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000040d4ab : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048e1e9 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x00000000004594f0 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000048c3e3 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045ea44 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x0000000000447f8d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000447efb : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047f0f9 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045fe12 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x0000000000480e32 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x0000000000493f17 : inc dword ptr [rcx - 0x6d] ; stc ; call rcx
0x000000000045224e : inc dword ptr [rcx - 0x77] ; ret
0x0000000000455536 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004594f3 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046979f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004ab59b : inc dword ptr [rcx] ; adc esi, edi ; call qword ptr [rcx + rdx]
0x0000000000494953 : inc dword ptr [rdx + 0x35] ; cli ; call rdx
0x000000000049445b : inc dword ptr [rdx + 0xe] ; cli ; call rdx
0x000000000049466b : inc dword ptr [rdx + 2] ; cli ; call rdx
0x0000000000493edb : inc dword ptr [rdx - 0x71] ; stc ; jmp rax
0x0000000000493ed7 : inc dword ptr [rdx - 0x72] ; stc ; inc dword ptr [rdx - 0x71] ; stc ; jmp rax
0x000000000049444b : inc dword ptr [rdx] ; adc dl, bh ; call qword ptr [rdx + 0x22fffa0f]
0x000000000043f80d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004943b7 : inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x0000000000493f5f : inc dword ptr [rsi - 0x6c] ; stc ; call rsi
0x0000000000493f33 : inc dword ptr [rsi - 0x73] ; stc ; call qword ptr [rsi]
0x000000000048dfc2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x00000000004948df : inc dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rsi + 0x26fffa33]
0x0000000000494a1b : inc dword ptr [rsp + rsi - 6] ; call rsp
0x0000000000494f9f : inc eax ; clc ; cli ; jmp rax
0x0000000000494f5b : inc eax ; idiv dl ; jmp rax
0x0000000000494f7f : inc eax ; idiv edx ; jmp rax
0x000000000049435b : inc eax ; iretd ; stc ; call qword ptr [rax]
0x00000000004940eb : inc eax ; mov esp, 0xaf50fff9 ; stc ; call qword ptr [rax]
0x0000000000493e67 : inc eax ; pop rsi ; stc ; call rax
0x000000000049413b : inc eax ; pushfq ; stc ; call qword ptr [rax]
0x00000000004a390b : inc eax ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x0000000000493de3 : inc eax ; stc ; jmp rax
0x0000000000495027 : inc eax ; sti ; dec eax ; sti ; jmp rax
0x000000000049416f : inc eax ; xchg eax, edi ; stc ; call qword ptr [rax - 0x1f000666]
0x0000000000493e2b : inc eax ; xor ecx, edi ; jmp qword ptr [rax + 0x10fff94a]
0x00000000004ab587 : inc ebp ; adc dh, bh ; call rax
0x000000000042bf3c : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000471dcc : inc ebx ; nop ; xor eax, eax ; ret
0x00000000004462e9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004948cf : inc esi ; xor eax, 0x3556fffa ; cli ; jmp rsi
0x000000000042456b : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004af6c8 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; xor al, 0x79 ; stc ; call rsp
0x000000000042ad04 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e81b : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x48e837
0x00000000004a981e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004aca74 : insb byte ptr [rdi], dx ; movsxd rsi, esi ; jmp rdx
0x000000000045d1d5 : insb byte ptr [rdi], dx ; ret 0x4c40
0x0000000000493ea1 : insb byte ptr [rdi], dx ; stc ; jmp rax
0x0000000000493e9d : insb byte ptr [rdi], dx ; stc ; push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x0000000000424280 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000452f06 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000409ebf : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000042417b : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000494dfd : insd dword ptr [rdi], dx ; cli ; jmp rax
0x000000000048ff72 : insd dword ptr [rdi], dx ; js 0x48ffef ; ret 0x8b48
0x00000000004a981f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000042059a : insd dword ptr [rdi], dx ; ret 0x29
0x00000000004a7bcd : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000493ea5 : insd dword ptr [rdi], dx ; stc ; call rax
0x00000000004a8adf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000450a65 : int 0x19
0x0000000000467e7a : int 0x80
0x0000000000474176 : int1 ; call rbx
0x0000000000494ee1 : int1 ; cli ; call qword ptr [rax]
0x0000000000494f05 : int1 ; cli ; call rax
0x0000000000494ee5 : int1 ; cli ; jmp qword ptr [rax]
0x0000000000494f09 : int1 ; cli ; push rax ; int1 ; cli ; call qword ptr [rax]
0x0000000000456112 : int1 ; je 0x4562c1 ; mov rdx, rax ; jmp 0x4560d9
0x0000000000456517 : int1 ; je 0x4562c1 ; mov rdx, rax ; jmp 0x4564de
0x000000000045658e : int1 ; je 0x4562c1 ; mov rdx, rax ; jmp 0x456555
0x00000000004469fb : int1 ; jl 0x446a4c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446a1c : int1 ; jl 0x446a6d ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446a2f : int1 ; jl 0x446a80 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446b04 : int1 ; jl 0x446b55 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446b5c : int1 ; jl 0x446bad ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446bf9 : int1 ; jl 0x446c4a ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000447e85 : int1 ; jmp rcx
0x0000000000471b2b : int1 ; jne 0x471b26 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047e5f7 : int1 ; jne 0x47e5d4 ; ret
0x0000000000447fa9 : int1 ; mov eax, eax ; ret
0x000000000043482b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fc5f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000445dc3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000447f90 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004a91f6 : int1 ; ret 0x5803
0x000000000041f82b : int1 ; ret 2
0x0000000000445dc7 : int1 ; sub eax, edx ; ret
0x0000000000400926 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x000000000049435d : iretd ; stc ; call qword ptr [rax]
0x0000000000405d8d : ja 0x405d6e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418cbc : ja 0x418cc1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000438733 : ja 0x438737 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000443f17 : ja 0x443f1d ; ret
0x0000000000443f33 : ja 0x443f3d ; mov dword ptr [rdi], ecx ; ret
0x0000000000443f74 : ja 0x443f83 ; mov qword ptr [rdi], rcx ; ret
0x0000000000443ff9 : ja 0x44400d ; ret
0x000000000044404f : ja 0x444067 ; ret
0x00000000004440d1 : ja 0x4440ed ; ret
0x0000000000444537 : ja 0x444541 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444553 : ja 0x444561 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004445a4 : ja 0x4445b7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444689 : ja 0x4446a1 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000004446ff : ja 0x44471b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000444781 : ja 0x4447a1 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000446d04 : ja 0x446d35 ; jb 0x446d16 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447064 : ja 0x4470aa ; jb 0x447076 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004474b4 : ja 0x447512 ; jb 0x4474c6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447a83 : ja 0x447aa0 ; jb 0x447a8f ; mov byte ptr [rdi], cl ; ret
0x0000000000447bf1 : ja 0x447c28 ; jb 0x447c00 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000447db9 : ja 0x447dfe ; jb 0x447dc8 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044935b : ja 0x449363 ; ret
0x00000000004493a9 : ja 0x4493b3 ; ret
0x00000000004495b4 : ja 0x449613 ; ret
0x000000000044964a : ja 0x449653 ; ret
0x0000000000449687 : ja 0x4496e3 ; ret
0x000000000044971d : ja 0x44972b ; ret
0x000000000044974d : ja 0x44975b ; ret
0x0000000000449957 : ja 0x44999b ; ret
0x00000000004499cd : ja 0x4499db ; ret
0x000000000044a126 : ja 0x44a133 ; ret
0x000000000044c510 : ja 0x44c53d ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d235 : ja 0x44d289 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045acb3 : ja 0x45acc3 ; ret
0x0000000000465bc2 : ja 0x465ba5 ; mov eax, r9d ; ret
0x0000000000474c39 : ja 0x474c07 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004754bb : ja 0x4754c3 ; ret
0x000000000047550f : ja 0x47551b ; ret
0x0000000000475830 : ja 0x47585b ; ret
0x0000000000482d8e : ja 0x482de0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048db7d : ja 0x48db86 ; sbb eax, eax ; ret
0x0000000000494e11 : ja 0x494e0f ; jmp rax
0x00000000004a4c85 : ja 0x4a4c86 ; jmp qword ptr [rax]
0x00000000004a4c89 : ja 0x4a4c8a ; jmp qword ptr [rbx]
0x00000000004a9264 : ja 0x4a91eb ; ret 0x48f
0x000000000041853d : jae 0x418565 ; movzx eax, byte ptr [rax] ; ret
0x0000000000418f71 : jae 0x418f7f ; sub al, byte ptr [rax] ; ret
0x00000000004492cd : jae 0x4492d2 ; ret
0x000000000044a35d : jae 0x44a362 ; ret
0x000000000044a38d : jae 0x44a392 ; ret
0x000000000044a3bd : jae 0x44a3c2 ; ret
0x000000000044ba60 : jae 0x44ba65 ; ret
0x000000000044ba8d : jae 0x44ba92 ; ret
0x000000000044bd94 : jae 0x44bd83 ; ret
0x000000000045aa5e : jae 0x45aaa5 ; xor eax, eax ; pop rbx ; ret
0x000000000047543d : jae 0x475442 ; ret
0x000000000047f87b : jae 0x47f825 ; xor eax, eax ; ret
0x0000000000487ff4 : jae 0x487fd7 ; mov eax, 1 ; ret
0x00000000004884ad : jae 0x4884b2 ; ret
0x000000000048eb06 : jae 0x48eb19 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x0000000000494e09 : jae 0x494e07 ; jmp rax
0x0000000000496391 : jae 0x496394 ; dec dword ptr [rax] ; je 0x496398 ; jmp rax
0x00000000004a7822 : jae 0x4a7804 ; jo 0x4a78a0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a86be : jae 0x4a8699 ; push rsi ; pop rdx ; je 0x4a868e ; ret 0xacfc
0x00000000004acee2 : jae 0x4acef0 ; ret
0x000000000041d9c7 : jb 0x41d9b1 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000042437a : jb 0x4243fe ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042dc6a : jb 0x42dc7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ddba : jb 0x42ddca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042df0a : jb 0x42df1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e05a : jb 0x42e06a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e1aa : jb 0x42e1ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e2fa : jb 0x42e30a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e44a : jb 0x42e45a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e59a : jb 0x42e5aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e6ea : jb 0x42e6fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e83a : jb 0x42e84a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e98a : jb 0x42e99a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eada : jb 0x42eaea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ec2a : jb 0x42ec3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed7a : jb 0x42ed8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eeca : jb 0x42eeda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043063a : jb 0x43064a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043078a : jb 0x43079a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004308da : jb 0x4308ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a2a : jb 0x430a3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b7a : jb 0x430b8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430cca : jb 0x430cda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e1a : jb 0x430e2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f6a : jb 0x430f7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310ba : jb 0x4310ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043120a : jb 0x43121a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043135a : jb 0x43136a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004314aa : jb 0x4314ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004315fa : jb 0x43160a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043174a : jb 0x43175a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043189a : jb 0x4318aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043830e : jb 0x43831a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446a65 : jb 0x446a74 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000446a70 : jb 0x446a83 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000446a7d : jb 0x446a85 ; mov byte ptr [rdi], cl ; ret
0x0000000000446c84 : jb 0x446c8d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000446d06 : jb 0x446d14 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446d05 : jb 0x446d15 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447066 : jb 0x447074 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004474b6 : jb 0x4474c4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447a85 : jb 0x447a8d ; mov byte ptr [rdi], cl ; ret
0x0000000000447bf3 : jb 0x447bfe ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000447dbb : jb 0x447dc6 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000045624e : jb 0x4562bc ; mov rdx, rax ; jmp 0x456213
0x00000000004b11f5 : jb 0x4b11f3 ; call qword ptr [rdx]
0x00000000004b11f4 : jb 0x4b11f4 ; call qword ptr [rdx]
0x00000000004b1275 : jb 0x4b1273 ; jmp rax
0x000000000040f331 : jbe 0x40f2f1 ; mov r11d, 1 ; jmp 0x40f306
0x000000000041058f : jbe 0x4105e2 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418d53 : jbe 0x418d58 ; dec dword ptr [rax - 0x77] ; ret
0x000000000042b176 : jbe 0x42b1b5 ; add rax, rdi ; ret
0x000000000042b186 : jbe 0x42b1b7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042b196 : jbe 0x42b1b7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042b1a6 : jbe 0x42b1b7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042b5b7 : jbe 0x42b628 ; add rax, rdi ; vzeroupper ; ret
0x0000000000448e1e : jbe 0x448e20 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000455c82 : jbe 0x455c7c ; ret
0x000000000045cd59 : jbe 0x45cd19 ; mov r11d, 1 ; jmp 0x45cd2e
0x000000000048199f : jbe 0x4819ab ; ret
0x0000000000493f68 : jbe 0x493f02 ; stc ; call qword ptr [rsi]
0x00000000004a4c69 : jbe 0x4a4c6a ; jmp qword ptr [rbx]
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400a89 : je 0x400aa0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000400acb : je 0x400ae0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x000000000040595e : je 0x40596e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000004120ed : je 0x412118 ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000412648 : je 0x41264f ; ret
0x00000000004163b1 : je 0x4163e0 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x412649
0x0000000000416835 : je 0x416843 ; ret
0x0000000000422632 : je 0x42265e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000422b23 : je 0x422b36 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x00000000004241e2 : je 0x4241ad ; ret
0x0000000000429f63 : je 0x429f2d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042ae4a : je 0x42ae52 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042b07c : je 0x42b0d3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b35a : je 0x42b3b1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042bd25 : je 0x42bd37 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042d347 : je 0x42d351 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043cd83 : je 0x43cd4d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043e913 : je 0x43e8dd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004400f1 : je 0x440109 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000440714 : je 0x44071e ; bsf eax, edx ; ret
0x0000000000440714 : je 0x44071f ; bsf eax, edx ; ret
0x00000000004407bd : je 0x4407d5 ; bsf rax, rdx ; ret
0x00000000004407bd : je 0x4407d6 ; bsf rax, rdx ; ret
0x000000000044075c : je 0x4407e9 ; bsf rax, rdx ; ret
0x0000000000446d93 : je 0x446db4 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000044843e : je 0x44844c ; xor eax, eax ; ret
0x0000000000448439 : je 0x448459 ; cmp eax, 2 ; je 0x448451 ; xor eax, eax ; ret
0x000000000044848d : je 0x448473 ; ret
0x0000000000449c87 : je 0x449cb2 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044a1ea : je 0x44a1f1 ; ret
0x000000000044bb69 : je 0x44bb6e ; ret
0x000000000044bbcd : je 0x44bbd2 ; ret
0x000000000044c41c : je 0x44c42f ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000044d148 : je 0x44d153 ; ret
0x000000000044d164 : je 0x44d179 ; mov dword ptr [rip + 0x26b94c], edx ; pop rbx ; ret
0x00000000004511e5 : je 0x451213 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000045199f : je 0x4519ce ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451c8f : je 0x451cbe ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451fd7 : je 0x452006 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452216 : je 0x452245 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045287e : je 0x4528ac ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453416 : je 0x453445 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004544a2 : je 0x4544d1 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000454f9b : je 0x454fca ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000455343 : je 0x455372 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455787 : je 0x4557b6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455bc2 : je 0x455bf0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000456184 : je 0x4561b3 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456113 : je 0x4562c0 ; mov rdx, rax ; jmp 0x4560d8
0x0000000000456518 : je 0x4562c0 ; mov rdx, rax ; jmp 0x4564dd
0x000000000045658f : je 0x4562c0 ; mov rdx, rax ; jmp 0x456554
0x00000000004564b3 : je 0x4564e2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004569c7 : je 0x4569f6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000456e02 : je 0x456e30 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000458477 : je 0x458483 ; ret
0x0000000000458472 : je 0x458488 ; cmp esi, 3 ; je 0x458488 ; ret
0x0000000000458dca : je 0x458dd0 ; call rsi
0x0000000000458ec6 : je 0x458ecc ; call rax
0x000000000045a2cb : je 0x45a2d1 ; call rax
0x000000000045a88e : je 0x45a89b ; ret
0x0000000000462c51 : je 0x462a84 ; jmp 0x462c22
0x0000000000468a0c : je 0x468a37 ; and byte ptr [rax + 1], cl ; ret
0x000000000046c6a8 : je 0x46c65d ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004709a6 : je 0x4709f6 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004709a5 : je 0x4709f7 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004717fc : je 0x471803 ; ret
0x0000000000471819 : je 0x471826 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471853 : je 0x4718b5 ; pop rbp ; pop r12 ; ret
0x00000000004718df : je 0x471941 ; pop rbp ; pop r12 ; ret
0x0000000000471a6a : je 0x471a94 ; or al, 0xeb ; ret 0x5590
0x00000000004736ec : je 0x473715 ; bsf rax, rdx ; ret
0x00000000004736ec : je 0x473716 ; bsf rax, rdx ; ret
0x000000000047367c : je 0x473729 ; bsf rax, rdx ; ret
0x0000000000473b8b : je 0x473b93 ; ret
0x00000000004740fa : je 0x474125 ; and al, ch ; ret
0x000000000047416e : je 0x47419d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000474298 : je 0x4742a5 ; test edx, edx ; jne 0x474297 ; ret
0x0000000000474739 : je 0x474759 ; mov cl, dl ; and cl, 0xf ; je 0x474769 ; ret
0x0000000000474740 : je 0x474762 ; ret
0x0000000000474755 : je 0x474776 ; add rax, 2 ; ret
0x0000000000475c12 : je 0x475d11 ; xor eax, eax ; leave ; ret
0x000000000047e656 : je 0x47e663 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000480e2d : je 0x480d7f ; sub eax, r8d ; ret
0x0000000000484f62 : je 0x484f76 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485468 : je 0x485493 ; or byte ptr [rax + 1], cl ; ret
0x000000000048705d : je 0x4870a2 ; shl rdx, 5 ; add rdx, rax ; jmp 0x487079
0x0000000000487c26 : je 0x487c33 ; ret
0x000000000048aa6d : je 0x48aa98 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048d008 : je 0x48cff2 ; add rsp, 0x18 ; ret
0x000000000048cff1 : je 0x48d016 ; add rsp, 0x18 ; ret
0x000000000048d098 : je 0x48d078 ; ret
0x000000000048d0d9 : je 0x48d0e6 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048f3ca : je 0x48f3d3 ; ret
0x000000000048f403 : je 0x48f414 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f419 ; ret
0x000000000048f4da : je 0x48f4e3 ; ret
0x0000000000490c73 : je 0x490c7e ; call rax
0x0000000000496395 : je 0x496394 ; jmp rax
0x00000000004a4c45 : je 0x4a4c46 ; call qword ptr [rax]
0x00000000004a4c5d : je 0x4a4c5e ; jmp qword ptr [rbx]
0x00000000004a4c59 : je 0x4a4c5e ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004a4cc5 : je 0x4a4cc6 ; jmp qword ptr [rbx]
0x00000000004a7988 : je 0x4a7953 ; xor al, 0xd8 ; ret
0x00000000004a7bc7 : je 0x4a7bc4 ; jmp 0x4a7b9e
0x00000000004a86c2 : je 0x4a868a ; ret 0xacfc
0x0000000000416832 : jg 0x416872 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000042f849 : jg 0x42f89c ; ret
0x000000000042f8cf : jg 0x42f91a ; ret
0x000000000042fa49 : jg 0x42fa9c ; ret 0x894c
0x000000000042facf : jg 0x42fb1a ; ret 0x894c
0x0000000000432219 : jg 0x43226c ; ret
0x000000000043229f : jg 0x4322ea ; ret
0x0000000000432419 : jg 0x43246c ; ret 0x894c
0x000000000043249f : jg 0x4324ea ; ret 0x894c
0x0000000000434808 : jg 0x434859 ; loope 0x434807 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043487f : jg 0x4348ca ; ret 0xff2
0x0000000000434898 : jg 0x4348e9 ; loop 0x434897 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043490f : jg 0x43495a ; ret
0x0000000000434928 : jg 0x434979 ; jrcxz 0x434927 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004349b8 : jg 0x434a09 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a38 : jg 0x434a89 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ab8 : jg 0x434b09 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b38 : jg 0x434b89 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bb8 : jg 0x434c09 ; call 0x4fc25bba
0x0000000000434c38 : jg 0x434c89 ; jmp 0x4fc25c3a
0x0000000000434db8 : jg 0x434e09 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e38 : jg 0x434e89 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ec8 : jg 0x434f19 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f48 : jg 0x434f99 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fbc : jg 0x434fc7 ; ret
0x0000000000435016 : jg 0x435029 ; ret
0x0000000000435011 : jg 0x435061 ; psllq mm1, qword ptr [rdi] ; jg 0x43502e ; ret
0x0000000000435086 : jg 0x435099 ; ret
0x00000000004350f6 : jg 0x435109 ; ret
0x00000000004350f1 : jg 0x435141 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435166 : jg 0x435179 ; ret
0x0000000000435161 : jg 0x4351b1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004351d6 : jg 0x4351e9 ; ret
0x00000000004351d1 : jg 0x435221 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435246 : jg 0x435259 ; ret
0x0000000000435241 : jg 0x435291 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004352b6 : jg 0x4352c9 ; ret
0x00000000004352b1 : jg 0x435301 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435326 : jg 0x435339 ; ret
0x0000000000435321 : jg 0x435371 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435396 : jg 0x4353a9 ; ret
0x0000000000435406 : jg 0x435419 ; ret
0x0000000000435476 : jg 0x435489 ; ret
0x0000000000435471 : jg 0x4354c1 ; add eax, 0xf7f0ff3 ; ret
0x00000000004354e6 : jg 0x4354f9 ; ret
0x00000000004354e1 : jg 0x435531 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435556 : jg 0x435569 ; ret
0x0000000000435551 : jg 0x4355a1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355c6 : jg 0x4355d9 ; ret
0x00000000004355c1 : jg 0x435611 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435636 : jg 0x435649 ; ret
0x0000000000435631 : jg 0x435681 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437328 : jg 0x437379 ; loope 0x437327 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043739f : jg 0x4373ea ; ret 0xff2
0x00000000004373b8 : jg 0x437409 ; loop 0x4373b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043742f : jg 0x43747a ; ret
0x0000000000437448 : jg 0x437499 ; jrcxz 0x437447 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004374d8 : jg 0x437529 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437558 : jg 0x4375a9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004375d8 : jg 0x437629 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437658 : jg 0x4376a9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004376d8 : jg 0x437729 ; call 0x4fc286da
0x0000000000437758 : jg 0x4377a9 ; jmp 0x4fc2875a
0x00000000004378d8 : jg 0x437929 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437958 : jg 0x4379a9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004379e8 : jg 0x437a39 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437a68 : jg 0x437ab9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437adc : jg 0x437ae7 ; ret
0x0000000000437b36 : jg 0x437b49 ; ret
0x0000000000437b31 : jg 0x437b81 ; psllq mm1, qword ptr [rdi] ; jg 0x437b4e ; ret
0x0000000000437ba6 : jg 0x437bb9 ; ret
0x0000000000437c16 : jg 0x437c29 ; ret
0x0000000000437c11 : jg 0x437c61 ; or eax, 0xf7f0ff3 ; ret
0x0000000000437c86 : jg 0x437c99 ; ret
0x0000000000437c81 : jg 0x437cd1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437cf6 : jg 0x437d09 ; ret
0x0000000000437cf1 : jg 0x437d41 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437d66 : jg 0x437d79 ; ret
0x0000000000437d61 : jg 0x437db1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437dd6 : jg 0x437de9 ; ret
0x0000000000437dd1 : jg 0x437e21 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437e46 : jg 0x437e59 ; ret
0x0000000000437e41 : jg 0x437e91 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437eb6 : jg 0x437ec9 ; ret
0x0000000000437f26 : jg 0x437f39 ; ret
0x0000000000437f96 : jg 0x437fa9 ; ret
0x0000000000437f91 : jg 0x437fe1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000438006 : jg 0x438019 ; ret
0x0000000000438001 : jg 0x438051 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438076 : jg 0x438089 ; ret
0x0000000000438071 : jg 0x4380c1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004380e6 : jg 0x4380f9 ; ret
0x00000000004380e1 : jg 0x438131 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438156 : jg 0x438169 ; ret
0x0000000000438151 : jg 0x4381a1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004382b4 : jg 0x4382c5 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004382c8 : jg 0x4382d9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043873a : jg 0x438736 ; ret
0x0000000000443fe6 : jg 0x443ff1 ; ret
0x0000000000443ff6 : jg 0x444004 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044400a : jg 0x444019 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444029 : jg 0x444037 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444039 : jg 0x444047 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444049 : jg 0x44405a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044406a : jg 0x444079 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044408a : jg 0x444099 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004440aa : jg 0x4440b9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004440ca : jg 0x4440dc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044410d : jg 0x44411f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044412d : jg 0x44413f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000044414b : jg 0x44415b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044416b : jg 0x44417b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044418b : jg 0x44419b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004441ab : jg 0x4441bb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444676 : jg 0x444685 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444686 : jg 0x444698 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000004446b9 : jg 0x4446cb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000004446d9 : jg 0x4446eb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000004447ff : jg 0x44485f ; or eax, 0x1c478d48 ; ret
0x0000000000446a47 : jg 0x446a57 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000446a3d : jg 0x446a5d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000446ed4 : jg 0x446f0c ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446fa2 : jg 0x446fda ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044707a : jg 0x44708b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044720b : jg 0x447235 ; vzeroupper ; ret
0x00000000004472b2 : jg 0x4472bc ; vzeroupper ; ret
0x000000000044733e : jg 0x447368 ; vzeroupper ; ret
0x00000000004473ce : jg 0x4473d8 ; vzeroupper ; ret
0x00000000004474e2 : jg 0x4474f3 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004476c6 : jg 0x4476f0 ; vzeroupper ; ret
0x00000000004476c5 : jg 0x4476f1 ; vzeroupper ; ret
0x000000000044778c : jg 0x447796 ; vzeroupper ; ret
0x000000000044778b : jg 0x447797 ; vzeroupper ; ret
0x000000000044785f : jg 0x447889 ; vzeroupper ; ret
0x000000000044785e : jg 0x44788a ; vzeroupper ; ret
0x0000000000447932 : jg 0x44793c ; vzeroupper ; ret
0x0000000000447931 : jg 0x44793d ; vzeroupper ; ret
0x000000000044799c : jg 0x4479a7 ; ret
0x00000000004479ec : jg 0x4479f7 ; ret
0x0000000000447af4 : jg 0x447b02 ; vzeroupper ; ret
0x0000000000447b44 : jg 0x447b52 ; vzeroupper ; ret
0x0000000000447c03 : jg 0x447c11 ; vzeroupper ; ret
0x0000000000447c81 : jg 0x447c8f ; vzeroupper ; ret
0x0000000000447c80 : jg 0x447c90 ; vzeroupper ; ret
0x0000000000447ce1 : jg 0x447cef ; vzeroupper ; ret
0x0000000000447ce0 : jg 0x447cf0 ; vzeroupper ; ret
0x0000000000447dcb : jg 0x447dd9 ; vzeroupper ; ret
0x0000000000447dd9 : jg 0x447de7 ; vzeroupper ; ret
0x0000000000447e30 : jg 0x447e6d ; ret 0x2b77
0x0000000000447f4b : jg 0x447f18 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000447fa7 : jg 0x447fa5 ; int1 ; mov eax, eax ; ret
0x0000000000453d98 : jg 0x453d25 ; ret 0xdb76
0x0000000000453d98 : jg 0x453d29 ; ret 0xdb76
0x000000000045ed92 : jg 0x45edab ; test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000469382 : jg 0x46939b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046a7fa : jg 0x46a813 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046a8f7 : jg 0x46a910 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000046f12d : jg 0x46f146 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f105
0x000000000047f2e7 : jg 0x47f2f9 ; test rdi, rdi ; jne 0x47f2c8 ; ret
0x000000000048a8b8 : jg 0x48a8c2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000040defa : jge 0x40df03 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a4b5 : jge 0x44a4ba ; call r12
0x000000000044a4dd : jge 0x44a4e2 ; call r12
0x000000000044a9cd : jge 0x44a97d ; mov r12d, r14d ; call r15
0x000000000044b02d : jge 0x44b032 ; call r12
0x000000000044b059 : jge 0x44b05e ; call r12
0x000000000044b08d : jge 0x44b092 ; call r12
0x000000000044b0bd : jge 0x44b0c2 ; call r12
0x000000000044b0e5 : jge 0x44b0ea ; call r12
0x000000000044b115 : jge 0x44b11a ; call r12
0x00000000004686f4 : jge 0x4686f4 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004876f6 : jge 0x487718 ; and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000048d452 : jge 0x48d44f ; leave ; ret
0x000000000048d5d0 : jge 0x48d5d3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d71c : jge 0x48d719 ; leave ; ret
0x000000000048d768 : jge 0x48d76b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d8f7 : jge 0x48d8fa ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048da57 : jge 0x48da54 ; leave ; ret
0x000000000048daa8 : jge 0x48daab ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000040112f : jl 0x40115d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000404a36 : jl 0x404a61 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d428 : jl 0x40d453 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000416d02 : jl 0x416d1e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041e74b : jl 0x41e745 ; ret 0x7508
0x0000000000438234 : jl 0x438283 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438270 : jl 0x4382bf ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000043846e : jl 0x4384bd ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004385d5 : jl 0x438624 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000438737 : jl 0x438786 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000004469fc : jl 0x446a4b ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446a1d : jl 0x446a6c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446a30 : jl 0x446a7f ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446b05 : jl 0x446b54 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446b5d : jl 0x446bac ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446bfa : jl 0x446c49 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000004475b0 : jl 0x4475cf ; cld ; vzeroupper ; ret
0x000000000044a592 : jl 0x44a5c0 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000450ad1 : jl 0x450aff ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000450ef6 : jl 0x450f24 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000452e38 : jl 0x452e66 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045341b : jl 0x453445 ; call r15
0x0000000000453e6a : jl 0x453e98 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045578c : jl 0x4557b6 ; call r15
0x0000000000455bc7 : jl 0x455bf0 ; call rbx
0x0000000000455c7d : jl 0x455caa ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004563ad : jl 0x4563d7 ; or al, 0xe9 ; ret
0x00000000004569cc : jl 0x4569f6 ; call r15
0x0000000000456e07 : jl 0x456e30 ; call rbx
0x0000000000456ebd : jl 0x456eea ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045aea7 : jl 0x45aed2 ; and byte ptr [rax + 1], cl ; ret
0x000000000045b31e : jl 0x45b349 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045b666 : jl 0x45b691 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000046704b : jl 0x467078 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000468735 : jl 0x468760 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047b4e5 : jl 0x47b510 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x00000000004824f5 : jl 0x482523 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004aa6f4 : jl 0x4aa69f ; std ; jmp rbx
0x00000000004ac0d8 : jl 0x4ac0eb ; add byte ptr [rax], al ; hlt ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004b1274 : jl 0x4b12eb ; cli ; jmp rax
0x000000000044075e : jle 0x440767 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044075e : jle 0x440768 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004468d1 : jle 0x44690d ; movsxd rax, ecx ; ret
0x00000000004584c2 : jle 0x4584d5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000404933 : jmp 0x4043aa
0x000000000040f339 : jmp 0x40f2fe
0x0000000000414492 : jmp 0x414458
0x000000000043ff34 : jmp 0x43fefa
0x0000000000440088 : jmp 0x44004d
0x000000000044014c : jmp 0x440112
0x0000000000440298 : jmp 0x44025d
0x00000000004465be : jmp 0x446584
0x000000000044668f : jmp 0x446655
0x00000000004466fe : jmp 0x4466c4
0x0000000000449163 : jmp 0x448ff1
0x000000000044911d : jmp 0x448ff3
0x00000000004494e1 : jmp 0x44943e
0x0000000000449871 : jmp 0x4497d1
0x0000000000449915 : jmp 0x4498da
0x00000000004499bb : jmp 0x449980
0x000000000044d2f7 : jmp 0x44d323
0x000000000044f428 : jmp 0x44f452
0x000000000045c6f5 : jmp 0x45c71d
0x000000000045cd61 : jmp 0x45cd26
0x000000000045cdfe : jmp 0x45cdc2
0x000000000045f8ae : jmp 0x45db04
0x000000000045f143 : jmp 0x45f148
0x0000000000462c57 : jmp 0x462c1c
0x000000000046a578 : jmp 0x46a53e
0x000000000046eea4 : jmp 0x46ee69
0x000000000046eea3 : jmp 0x46ee6a
0x000000000046fb9b : jmp 0x46fb60
0x00000000004723f3 : jmp 0x4723b9
0x0000000000475651 : jmp 0x4755a3
0x0000000000478852 : jmp 0x4786ad
0x000000000047a0f2 : jmp 0x47a0b7
0x0000000000484302 : jmp 0x484354
0x0000000000485a7a : jmp 0x485a40
0x0000000000488102 : jmp 0x488154
0x000000000048e81e : jmp 0x48e834
0x00000000004a6e8a : jmp 0x4a6ec9
0x00000000004a7bc9 : jmp 0x4a7b9c
0x00000000004a8bc0 : jmp 0x4a8b54
0x00000000004a8bbf : jmp 0x4a8b55
0x0000000000434c3a : jmp 0x4fc25c38
0x0000000000434c39 : jmp 0x4fc25c39
0x000000000043775a : jmp 0x4fc28758
0x0000000000437759 : jmp 0x4fc28759
0x000000000044d498 : jmp 0xffffffffc2cdd4c7
0x0000000000482d91 : jmp 0xffffffffc357b6e6
0x000000000047b8d9 : jmp 0xffffffffeb097b69
0x00000000004753d3 : jmp 0xfffffffff6791663
0x0000000000493e2f : jmp qword ptr [rax + 0x10fff94a]
0x00000000004947a7 : jmp qword ptr [rax + 0x10fffa02]
0x00000000004945db : jmp qword ptr [rax + 0x20fffa04]
0x00000000004945d3 : jmp qword ptr [rax + 0x20fffa05]
0x00000000004945cb : jmp qword ptr [rax + 0x20fffa06]
0x00000000004945c3 : jmp qword ptr [rax + 0x20fffa07]
0x00000000004945bb : jmp qword ptr [rax + 0x20fffa08]
0x0000000000494cf3 : jmp qword ptr [rax + 0x20fffa0b]
0x0000000000494d37 : jmp qword ptr [rax + 0x20fffa0d]
0x0000000000494cfb : jmp qword ptr [rax + 0x20fffa0e]
0x0000000000494d3f : jmp qword ptr [rax + 0x20fffa10]
0x0000000000494d03 : jmp qword ptr [rax + 0x20fffa11]
0x0000000000494d47 : jmp qword ptr [rax + 0x20fffa13]
0x0000000000494d0b : jmp qword ptr [rax + 0x20fffa14]
0x0000000000494d4f : jmp qword ptr [rax + 0x20fffa16]
0x0000000000494d13 : jmp qword ptr [rax + 0x20fffa17]
0x0000000000494d57 : jmp qword ptr [rax + 0x20fffa19]
0x0000000000494d1b : jmp qword ptr [rax + 0x20fffa1a]
0x0000000000494d5f : jmp qword ptr [rax + 0x20fffa1c]
0x0000000000494d23 : jmp qword ptr [rax + 0x20fffa1d]
0x0000000000494d67 : jmp qword ptr [rax + 0x20fffa1f]
0x0000000000494e37 : jmp qword ptr [rax + 0x40fffa8a]
0x0000000000495607 : jmp qword ptr [rax + 0x4ffffb3d]
0x00000000004a392b : jmp qword ptr [rax - 0x1f000352]
0x0000000000494d2b : jmp qword ptr [rax - 0x1f0005e0]
0x0000000000493dbf : jmp qword ptr [rax - 0x3f0006dc]
0x000000000040e301 : jmp qword ptr [rax]
0x000000000041a408 : jmp qword ptr [rbx]
0x000000000041a608 : jmp qword ptr [rcx]
0x00000000004a9484 : jmp qword ptr [rdi]
0x0000000000494b33 : jmp qword ptr [rdx + 0x22fffa2f]
0x0000000000469455 : jmp qword ptr [rdx + rax*8]
0x0000000000494453 : jmp qword ptr [rdx]
0x00000000004480e9 : jmp qword ptr [rsi + 0xf]
0x000000000044c888 : jmp qword ptr [rsi]
0x0000000000424639 : jmp r10
0x000000000047ffa0 : jmp r11
0x000000000042d63d : jmp r9
0x0000000000494e3f : jmp rax
0x000000000047ffa1 : jmp rbx
0x00000000004221a2 : jmp rcx
0x000000000040d53e : jmp rdi
0x000000000040d255 : jmp rdx
0x0000000000459bc7 : jmp rsi
0x000000000049450b : jmp rsp
0x000000000040058d : jne 0x400594 ; ret
0x0000000000405dac : jne 0x405dc0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040dad8 : jne 0x40dab6 ; ret
0x000000000040dbcb : jne 0x40dbf5 ; add rsp, 0x118 ; ret
0x000000000040f751 : jne 0x40f764 ; add rsp, 0xd8 ; ret
0x000000000040f802 : jne 0x40f815 ; add rsp, 0xd8 ; ret
0x0000000000414565 : jne 0x414573 ; ret
0x0000000000416188 : jne 0x4161dc ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000416201 : jne 0x4161f3 ; ret
0x000000000041711e : jne 0x417113 ; ret
0x0000000000417751 : jne 0x417717 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041779c : jne 0x417795 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004180b6 : jne 0x4180ab ; ret
0x0000000000419d10 : jne 0x419d1f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041f3ec : jne 0x41f3b3 ; ret
0x000000000042289a : jne 0x422821 ; ret
0x0000000000422ba7 : jne 0x422b96 ; sub rax, 0x10 ; ret
0x0000000000425c8c : jne 0x425c76 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042b127 : jne 0x42b184 ; xor eax, eax ; ret
0x000000000042b0f7 : jne 0x42b1a8 ; xor eax, eax ; ret
0x000000000042b5a3 : jne 0x42b5c7 ; xor eax, eax ; vzeroupper ; ret
0x000000000042bcda : jne 0x42bce5 ; vzeroupper ; ret
0x000000000042bdd4 : jne 0x42bce6 ; ret
0x000000000042bf1f : jne 0x42bce9 ; vzeroupper ; ret
0x000000000042d58d : jne 0x42d5b7 ; xor eax, eax ; ret
0x000000000042cb81 : jne 0x42d5bb ; xor eax, eax ; ret
0x000000000042cba9 : jne 0x42d5c7 ; xor eax, eax ; ret
0x0000000000444965 : jne 0x4448f6 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444937 : jne 0x4448f6 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444936 : jne 0x4448f7 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004460c4 : jne 0x4462d8 ; xor eax, eax ; ret
0x00000000004462c9 : jne 0x4462e9 ; xor eax, eax ; ret
0x0000000000446171 : jne 0x4462ed ; xor eax, eax ; ret
0x00000000004462e1 : jne 0x4462ee ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004463f1 : jne 0x4463e2 ; ret
0x00000000004464a1 : jne 0x446492 ; ret
0x0000000000446611 : jne 0x446606 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000446761 : jne 0x446756 ; sub rax, 1 ; ret
0x0000000000447a6d : jne 0x447a56 ; ret
0x0000000000447bd4 : jne 0x447bbc ; vzeroupper ; ret
0x0000000000447d97 : jne 0x447d77 ; vzeroupper ; ret
0x000000000044856f : jne 0x44859b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449327 : jne 0x44933f ; add rsp, 0x28 ; ret
0x0000000000449557 : jne 0x4495a1 ; add rsp, 0x58 ; ret
0x0000000000449911 : jne 0x4498de ; neg eax ; jmp 0x4498de
0x00000000004498e7 : jne 0x449939 ; add rsp, 0x68 ; ret
0x000000000044a256 : jne 0x44a26d ; add rsp, 0x28 ; ret
0x000000000044a48b : jne 0x44a4a6 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044a4b1 : jne 0x44a4f7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a4d9 : jne 0x44a517 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044aff6 : jne 0x44b01e ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b029 : jne 0x44b077 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b055 : jne 0x44b0d7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b0e1 : jne 0x44b148 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b111 : jne 0x44b179 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bb12 : jne 0x44bb09 ; pop rdx ; pop r10 ; ret
0x000000000044ee0f : jne 0x44eda3 ; call rsi
0x000000000044f426 : jne 0x44f43a ; jmp 0x44f454
0x000000000045a9cf : jne 0x45a9dc ; add rsp, 0x18 ; ret
0x000000000045ac17 : jne 0x45ac6c ; add rsp, 0x148 ; ret
0x000000000045c6f3 : jne 0x45c705 ; jmp 0x45c71f
0x0000000000468632 : jne 0x468645 ; add rsp, 0xd8 ; ret
0x00000000004708e1 : jne 0x4708d3 ; ret
0x0000000000471b2c : jne 0x471b25 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004735e3 : jne 0x4735ee ; xor rax, rax ; ret
0x00000000004739e3 : jne 0x473a18 ; mov rax, r8 ; vzeroupper ; ret
0x000000000047429c : jne 0x474293 ; ret
0x00000000004742a3 : jne 0x4742ae ; xor rax, rax ; ret
0x000000000047453b : jne 0x4744f6 ; mov rax, rdx ; ret
0x00000000004756bc : jne 0x475709 ; add rsp, 0x58 ; ret
0x000000000047573f : jne 0x475752 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004757ee : jne 0x475811 ; add rsp, 0x38 ; ret
0x000000000047e60a : jne 0x47e5b0 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e5f8 : jne 0x47e5d3 ; ret
0x000000000047f297 : jne 0x47f2b1 ; mov rax, qword ptr [rip + 0x23d110] ; ret
0x000000000047f2ec : jne 0x47f2c3 ; ret
0x0000000000480da9 : jne 0x480d81 ; movsx eax, cl ; neg eax ; ret
0x0000000000481b9a : jne 0x481ba9 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481c95 : jne 0x481cc9 ; add rsp, 0x38 ; ret
0x0000000000481d55 : jne 0x481d84 ; add rsp, 0x68 ; ret
0x0000000000481eb6 : jne 0x481ef4 ; add rsp, 0x78 ; ret
0x0000000000482185 : jne 0x4821b4 ; add rsp, 0x68 ; ret
0x00000000004841c1 : jne 0x484201 ; leave ; ret
0x0000000000484661 : jne 0x48464d ; mov rax, rsi ; ret
0x00000000004846e5 : jne 0x4846c5 ; mov rax, rsi ; ret
0x0000000000484e4d : jne 0x484e5a ; add rsp, 0x38 ; ret
0x0000000000484f30 : jne 0x484f4a ; add rsp, 0x38 ; ret
0x0000000000487646 : jne 0x487670 ; ret
0x0000000000487645 : jne 0x487671 ; ret
0x00000000004876fb : jne 0x487702 ; pop rbx ; ret
0x000000000048828b : jne 0x4882a2 ; add rsp, 0x38 ; ret
0x0000000000488399 : jne 0x4883b3 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000488480 : jne 0x48849b ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048ae69 : jne 0x48ae8c ; xor eax, eax ; ret
0x000000000048ae51 : jne 0x48ae91 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048d080 : jne 0x48d0a1 ; mov rax, qword ptr [rax] ; ret
0x000000000048d0ef : jne 0x48d0fa ; mov qword ptr [rax], rdx ; ret
0x000000000048d44e : jne 0x48d447 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d718 : jne 0x48d711 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048da53 : jne 0x48da4c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dfa4 : jne 0x48dfc3 ; ret
0x000000000048dfc4 : jne 0x48dfdc ; mov eax, 8 ; ret
0x000000000048dfef : jne 0x48e01e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048e009 : jne 0x48e022 ; xor eax, eax ; ret
0x000000000048ee4f : jne 0x48ee7e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048ee69 : jne 0x48ee82 ; xor eax, eax ; ret
0x000000000048f409 : jne 0x48f413 ; ret
0x000000000048f424 : jne 0x48f433 ; ret
0x000000000048f654 : jne 0x48f663 ; ret
0x000000000048f8d9 : jne 0x48f8fc ; xor eax, eax ; ret
0x000000000048fea5 : jne 0x48fe98 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048fef0 : jne 0x48fed0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490035 : jne 0x49001b ; pop rbx ; ret
0x0000000000490143 : jne 0x49012e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490cfd : jne 0x490ce6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490e81 : jne 0x490e98 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000494e0d : jne 0x494e0b ; jmp rax
0x00000000004b2c3d : jne 0x4b2c45 ; add al, al ; or edi, esp ; jmp qword ptr [rax]
0x000000000042ce3e : jno 0x42ce4d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000438230 : jno 0x438239 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000043846a : jno 0x438473 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004385d1 : jno 0x4385e2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000438736 : jno 0x4387ba ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000482c84 : jno 0x482cd6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000494e05 : jno 0x494e03 ; jmp rax
0x0000000000424541 : jnp 0x424574 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000424541 : jnp 0x424575 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a76a5 : jnp 0x4a7662 ; ret
0x00000000004241df : jns 0x4241e7 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000438237 : jns 0x43823a ; ret
0x0000000000438471 : jns 0x438474 ; ret
0x00000000004385d8 : jns 0x4385e3 ; ret
0x000000000044b056 : jns 0x44b0a6 ; mov edi, dword ptr [rbp] ; call r12
0x0000000000478a60 : jns 0x478a5f ; dec dword ptr [rax - 0x77] ; ret
0x000000000048ad3e : jns 0x48ad4b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048cfee : jns 0x48d031 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048dd5e : jns 0x48dd6b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048f95e : jns 0x48f96b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000494e15 : jns 0x494e13 ; jmp rax
0x00000000004a67ae : jns 0x4a6744 ; ret 0xf869
0x00000000004a67ad : jns 0x4a6745 ; ret 0xf869
0x00000000004a8bbe : jns 0x4a8c15 ; jmp 0x4a8b56
0x00000000004af6cd : jns 0x4af6ca ; call rsp
0x00000000004b3055 : jns 0x4b305d ; add al, bl ; and edi, esp ; jmp qword ptr [rcx]
0x0000000000413f2e : jo 0x413f60 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000414384 : jo 0x4143d5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004143b4 : jo 0x414405 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000449ffd : jo 0x44a001 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044bda2 : jo 0x44bdc6 ; ret
0x0000000000452d10 : jo 0x452d1a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000047095a : jo 0x470972 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000473c56 : jo 0x473cb8 ; pop rbp ; pop r12 ; ret
0x0000000000473e6d : jo 0x473ecf ; pop rbp ; pop r12 ; ret
0x0000000000482074 : jo 0x4820da ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000493e5c : jo 0x493ebb ; stc ; jmp rax
0x0000000000494050 : jo 0x494009 ; stc ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494138 : jo 0x4940dc ; stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x0000000000494358 : jo 0x49432f ; stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x00000000004945ec : jo 0x4945f3 ; cli ; jmp rsi
0x0000000000494aac : jo 0x494ae3 ; cli ; call qword ptr [rax]
0x00000000004a7824 : jo 0x4a789e ; mov ebp, 0xfb67d10d ; ret
0x00000000004ae81c : jo 0x4ae823 ; ret 0xa01
0x00000000004af3b0 : jo 0x4af36c ; clc ; call qword ptr [rax]
0x00000000004af820 : jo 0x4af7a9 ; stc ; call qword ptr [rbx]
0x00000000004b05cc : jo 0x4b0624 ; add byte ptr [rax], al ; push rax ; fyl2xp1 ; call qword ptr [rax]
0x00000000004b3acc : jo 0x4b3a59 ; add byte ptr [rax], al ; jp 0x4b3aa3 ; hlt ; jmp qword ptr [rcx]
0x00000000004b43e0 : jo 0x4b43cf ; cld ; jmp qword ptr [rcx]
0x0000000000413578 : jp 0x4135aa ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000413577 : jp 0x4135ab ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000456ec2 : jp 0x456ebc ; ret
0x000000000047898a : jp 0x478989 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000494a6c : jp 0x494aa3 ; cli ; jmp qword ptr [rax]
0x00000000004b3ad0 : jp 0x4b3a9f ; hlt ; jmp qword ptr [rcx]
0x000000000043492a : jrcxz 0x434925 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434929 : jrcxz 0x434926 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043744a : jrcxz 0x437445 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437449 : jrcxz 0x437446 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044bb63 : jrcxz 0x44bb28 ; cmp r11d, 0xa ; je 0x44bb74 ; ret
0x0000000000467f7f : jrcxz 0x467f85 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000467f7e : jrcxz 0x467f86 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000490144 : jrcxz 0x4901a6 ; pop rbp ; pop r12 ; ret
0x0000000000494249 : jrcxz 0x49424a ; call qword ptr [rax + 0x20fff9e5]
0x0000000000494289 : jrcxz 0x494286 ; call qword ptr [rax]
0x00000000004a6605 : jrcxz 0x4a665f ; ret
0x00000000004aa708 : jrcxz 0x4aa6b3 ; std ; jmp rbx
0x000000000040e995 : js 0x40e9b9 ; call rdx
0x00000000004717f9 : js 0x471831 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000047bb72 : js 0x47bb85 ; pop rbx ; ret
0x000000000048d2a6 : js 0x48d2b3 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048d2b3 : js 0x48d2bf ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048ff73 : js 0x48ffee ; ret 0x8b48
0x00000000004a4c49 : js 0x4a4c4a ; jmp qword ptr [rbx]
0x00000000004ab0a8 : js 0x4ab0a9 ; std ; call rax
0x00000000004ab0a7 : js 0x4ab0aa ; std ; call rax
0x00000000004ab0a6 : js 0x4ab0ab ; std ; call rax
0x00000000004abb88 : js 0x4abb28 ; cmc ; call rax
0x00000000004af3d4 : js 0x4af41a ; add byte ptr [rax], al ; cwde ; fdivr st(0) ; call qword ptr [rax]
0x00000000004af518 : js 0x4af563 ; stc ; jmp qword ptr [rbx]
0x000000000046af83 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004b561d : lahf ; add byte ptr [rax], al ; push rax ; test ebp, edi ; call qword ptr [rbx]
0x0000000000456115 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000041eddf : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000448e1d : lahf ; jbe 0x448e21 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a8ce3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047e60b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000043f56d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045e82f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000044a76b : lahf ; ret
0x0000000000418a5f : lahf ; ret 0x3949
0x0000000000418b12 : lahf ; ret 0x48e9
0x000000000044a621 : lahf ; ret 0x8545
0x00000000004a653d : lahf ; ret 0x871e
0x0000000000447e29 : lahf ; ret 0xea81
0x000000000048c661 : lahf ; ret 0xf45
0x000000000046f84d : lahf ; ret 0xfffd
0x0000000000494185 : lahf ; stc ; jmp qword ptr [rax]
0x000000000043fbfd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a4c43 : lcall ptr [rax + 0x74] ; std ; call qword ptr [rax]
0x00000000004a4c5b : lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004a4c57 : lcall ptr [rax + 0x74] ; std ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x0000000000495553 : lcall ptr [rax - 0xb0004c4] ; cmp al, 0xfb ; call rsi
0x000000000041a902 : lcall ptr [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000419160 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411cb5 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411a3b : lcall ptr [rbx + 0x5d] ; ret
0x000000000047fc36 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000049638f : lcall ptr [rcx + 0x73] ; sti ; dec dword ptr [rax] ; je 0x49639a ; jmp rax
0x0000000000495057 : lcall ptr [rsi + rbp] ; sti ; call qword ptr [rax]
0x000000000049505f : lcall ptr [rsi + rbp] ; sti ; call qword ptr [rdi]
0x00000000004aa6ff : lcall ptr [rsi - 0x594b0003] ; std ; jmp rbx
0x0000000000495053 : lcall ptr [rsi] ; sti ; lcall ptr [rsi + rbp] ; sti ; call qword ptr [rax]
0x0000000000434fb6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004177ab : lea eax, dword ptr [r8 - 1] ; ret
0x000000000048ad5c : lea eax, dword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b154 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000042b164 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000042b134 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000004177ac : lea eax, dword ptr [rax - 1] ; ret
0x00000000004b43dd : lea eax, dword ptr [rax] ; add byte ptr [rax - 0x16], dh ; cld ; jmp qword ptr [rcx]
0x000000000047330d : lea eax, dword ptr [rcx + rsi] ; ret
0x0000000000446614 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000044468c : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000004446a1 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000004446bf : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000004446df : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000444702 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000444721 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000444741 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000444761 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000444784 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000004447a9 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000004447c7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00000000004447e7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000444803 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000444823 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000444843 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000444863 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000004445dd : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000004445fd : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000044461f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000044463f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000044465f : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000444679 : lea eax, dword ptr [rdi + 0xf] ; ret
0x0000000000444527 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000044453a : lea eax, dword ptr [rdi + 2] ; ret
0x0000000000444545 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000444558 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000044456d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000044458b : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000444597 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000004445aa : lea eax, dword ptr [rdi + 8] ; ret
0x00000000004445bf : lea eax, dword ptr [rdi + 9] ; ret
0x000000000042b189 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000042b199 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000042b093 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000473555 : lea eax, dword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000004400f7 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000044696a : lea eax, dword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473209 : lea eax, dword ptr [rdi + rsi] ; ret
0x0000000000444513 : lea eax, dword ptr [rdi] ; ret
0x0000000000443afd : lea eax, dword ptr [rdx + 0xa] ; ret
0x0000000000443b1d : lea eax, dword ptr [rdx + 0xb] ; ret
0x0000000000443b3f : lea eax, dword ptr [rdx + 0xc] ; ret
0x0000000000443b5f : lea eax, dword ptr [rdx + 0xd] ; ret
0x0000000000443b7f : lea eax, dword ptr [rdx + 0xe] ; ret
0x0000000000443a0f : lea eax, dword ptr [rdx + 0xf] ; ret
0x0000000000443a37 : lea eax, dword ptr [rdx + 1] ; ret
0x0000000000443a4d : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000443a65 : lea eax, dword ptr [rdx + 3] ; ret
0x0000000000443a7b : lea eax, dword ptr [rdx + 4] ; ret
0x0000000000443a8d : lea eax, dword ptr [rdx + 5] ; ret
0x0000000000443aab : lea eax, dword ptr [rdx + 6] ; ret
0x00000000004439b7 : lea eax, dword ptr [rdx + 7] ; ret
0x0000000000443abd : lea eax, dword ptr [rdx + 8] ; ret
0x0000000000443add : lea eax, dword ptr [rdx + 9] ; ret
0x000000000041779e : lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000447f43 : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000422b26 : lea eax, dword ptr [rdx - 0x10] ; ret
0x0000000000443a25 : lea eax, dword ptr [rdx] ; ret
0x0000000000424598 : lea eax, dword ptr [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000423638 : lea eax, dword ptr [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x000000000042414f : lea eax, dword ptr [rip + 0x221ab] ; cmove rax, rdx ; ret
0x00000000004244d8 : lea eax, dword ptr [rip + 0x22732] ; cmovne rax, rdx ; ret
0x0000000000424398 : lea eax, dword ptr [rip + 0x22862] ; cmovne rax, rdx ; ret
0x0000000000424238 : lea eax, dword ptr [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x000000000042453f : lea eax, dword ptr [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x00000000004243ff : lea eax, dword ptr [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x000000000042429f : lea eax, dword ptr [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x000000000042451e : lea eax, dword ptr [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x00000000004243de : lea eax, dword ptr [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x000000000042427e : lea eax, dword ptr [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x00000000004235bf : lea eax, dword ptr [rip + 0x231db] ; cmovne rax, rdx ; ret
0x000000000042430a : lea eax, dword ptr [rip + 0x23660] ; cmovne rax, rdx ; ret
0x00000000004242ed : lea eax, dword ptr [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x000000000042433e : lea eax, dword ptr [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000044d131 : lea eax, dword ptr [rip + 0x26d1c9] ; ret
0x0000000000484fef : lea eax, dword ptr [rip + 0x5b] ; cmovne rax, rdx ; ret
0x0000000000424568 : lea eax, dword ptr [rip + 0x6c52] ; cmove rax, rdx ; ret
0x0000000000424178 : lea eax, dword ptr [rip + 0x6d12] ; cmove rax, rdx ; ret
0x00000000004241dc : lea eax, dword ptr [rip + 0x79ee] ; je 0x4241b3 ; ret
0x0000000000472728 : lea eax, dword ptr [rip + 0x9f2] ; cmove rax, rdx ; ret
0x0000000000473b38 : lea eax, dword ptr [rip + 0xa22] ; cmove rax, rdx ; ret
0x00000000004726f8 : lea eax, dword ptr [rip + 0xee2] ; cmove rax, rdx ; ret
0x000000000045f4b1 : lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e021 : lea ebx, dword ptr [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a6df1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000473d0b : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000473ea6 : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000472144 : lea ecx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042d6a0 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x0000000000443dae : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000468b74 : lea ecx, dword ptr [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000422b36 : lea ecx, dword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000484300 : lea ecx, dword ptr [rdx] ; jmp 0x484356
0x0000000000488100 : lea ecx, dword ptr [rdx] ; jmp 0x488156
0x0000000000475937 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471f50 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000471e6b : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473e2e : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000047401c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473d06 : lea ecx, dword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000044c41f : lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x00000000004180c1 : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000471cc7 : lea edx, dword ptr [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042d774 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000424636 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000042db68 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000424253 : lea edx, dword ptr [rip + 0x11407] ; cmovne rax, rdx ; ret
0x000000000042359f : lea edx, dword ptr [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x000000000042442f : lea edx, dword ptr [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x00000000004241c4 : lea edx, dword ptr [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000423538 : lea edx, dword ptr [rip + 0x21332] ; cmovne rax, rdx ; ret
0x000000000042356f : lea edx, dword ptr [rip + 0x272b] ; cmovne rax, rdx ; ret
0x000000000047426a : lea edx, dword ptr [rip + 0x30] ; cmovne rax, rdx ; ret
0x0000000000423679 : lea edx, dword ptr [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x00000000004244f3 : lea edx, dword ptr [rip + 0xe697] ; cmovne rax, rdx ; ret
0x00000000004243b3 : lea edx, dword ptr [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000048dbd1 : lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046b4fd : lea esi, dword ptr [rip + 0x24b91d] ; jmp rax
0x0000000000446c8f : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047e126 : lea esp, dword ptr [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x0000000000424635 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000048dbd0 : lea r14, qword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000042d69f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000472143 : lea r9, qword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x00000000004842ff : lea r9, qword ptr [rdx] ; jmp 0x484357
0x00000000004880ff : lea r9, qword ptr [rdx] ; jmp 0x488157
0x0000000000471f4f : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000471e6a : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473e2d : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000047401b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473d05 : lea r9, qword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000048ad5b : lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b153 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000042b163 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000042b133 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000047330c : lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000446613 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000044468b : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000004446a0 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000004446be : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000004446de : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000444701 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000444720 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000444740 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000444760 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000444783 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000004447a8 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000004447c6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000004447e6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000444802 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000444822 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000444842 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000444862 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000004445dc : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004445fc : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044461e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000044463e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000044465e : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000444678 : lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444526 : lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444539 : lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444544 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444557 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000044456c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000044458a : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000444596 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000004445a9 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000004445be : lea rax, qword ptr [rdi + 9] ; ret
0x000000000042b188 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042b198 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042b092 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000473554 : lea rax, qword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000004400f6 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000446969 : lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473208 : lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000444512 : lea rax, qword ptr [rdi] ; ret
0x0000000000443afc : lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000443b1c : lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000443b3e : lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000443b5e : lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000443b7e : lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000443a0e : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000443a36 : lea rax, qword ptr [rdx + 1] ; ret
0x0000000000443a4c : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000443a64 : lea rax, qword ptr [rdx + 3] ; ret
0x0000000000443a7a : lea rax, qword ptr [rdx + 4] ; ret
0x0000000000443a8c : lea rax, qword ptr [rdx + 5] ; ret
0x0000000000443aaa : lea rax, qword ptr [rdx + 6] ; ret
0x00000000004439b6 : lea rax, qword ptr [rdx + 7] ; ret
0x0000000000443abc : lea rax, qword ptr [rdx + 8] ; ret
0x0000000000443adc : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000422b25 : lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000443a24 : lea rax, qword ptr [rdx] ; ret
0x000000000044d130 : lea rax, qword ptr [rip + 0x26d1c9] ; ret
0x000000000040e020 : lea rbx, qword ptr [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000443dad : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000473d0a : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000473ea5 : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000422b35 : lea rcx, qword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000475936 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044c41e : lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000042d773 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042db67 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000046b4fc : lea rsi, qword ptr [rip + 0x24b91d] ; jmp rax
0x0000000000446c8e : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000045765a : leave ; call r15
0x00000000004463f0 : leave ; jne 0x4463e3 ; ret
0x00000000004464a0 : leave ; jne 0x446493 ; ret
0x0000000000446760 : leave ; jne 0x446757 ; sub rax, 1 ; ret
0x000000000047453a : leave ; jne 0x4744f7 ; mov rax, rdx ; ret
0x0000000000446968 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048ad10 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046ba19 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400bb8 : leave ; ret
0x0000000000473e2a : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000004a3b17 : ljmp ptr [rax + rsi*4 - 0x4f6b0004] ; cld ; jmp rsp
0x000000000049476f : ljmp ptr [rdx + 0x50fffa01] ; or edx, edi ; call rax
0x000000000042c38e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047f0f7 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b3e4c : lock xchg dword ptr [rax], eax ; add byte ptr [rax], al ; retf ; cld ; jmp qword ptr [rcx]
0x0000000000410110 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000445d70 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000494ea5 : lodsb al, byte ptr [rsi] ; cli ; jmp qword ptr [rax]
0x000000000042a1c4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a947d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b1ee4 : lodsb al, byte ptr [rsi] ; xchg eax, edx ; sti ; jmp qword ptr [rax]
0x000000000046c43e : lodsd eax, dword ptr [rsi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a3931 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax - 0x1f000352]
0x00000000004a3909 : lodsd eax, dword ptr [rsi] ; cld ; inc eax ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x00000000004a3929 : lodsd eax, dword ptr [rsi] ; cld ; jmp qword ptr [rax - 0x1f000352]
0x00000000004a3905 : lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x0000000000460d6f : lodsd eax, dword ptr [rsi] ; pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000482df2 : lodsd eax, dword ptr [rsi] ; ret
0x00000000004217ce : loop 0x421821 ; mov esi, ebx ; mov rdi, r13 ; call 0x41da19
0x0000000000425c8d : loop 0x425cc5 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043489a : loop 0x434895 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434899 : loop 0x434896 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004373ba : loop 0x4373b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004373b9 : loop 0x4373b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000447f0f : loop 0x447f29 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044bdb3 : loop 0x44be06 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000468b79 : loop 0x468bc0 ; call qword ptr [rdx + rax*8]
0x00000000004726fa : loop 0x472711 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004726fa : loop 0x472712 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000487061 : loop 0x48706c ; add rdx, rax ; jmp 0x487075
0x000000000048d009 : loop 0x48d058 ; add esp, 0x18 ; ret
0x00000000004941e5 : loop 0x4941e2 ; call qword ptr [rax]
0x00000000004942a9 : loop 0x4942a6 ; call rax
0x00000000004942c9 : loop 0x4942ca ; call qword ptr [rax + 0x20fff9e4]
0x00000000004a981a : loop 0x4a986f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000043480a : loope 0x434805 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434809 : loope 0x434806 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043732a : loope 0x437325 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437329 : loope 0x437326 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000444a9b : loope 0x444aa5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000044848e : loope 0x448485 ; ret
0x000000000044de0e : loope 0x44de1b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000047473e : loope 0x474753 ; je 0x474764 ; ret
0x000000000047c90b : loope 0x47c911 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000482c87 : loope 0x482cd9 ; mov dword ptr [rdi], ecx ; ret
0x0000000000482cb8 : loope 0x482d0b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000482d2d : loope 0x482d80 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000490036 : loope 0x490095 ; ret
0x0000000000490cfe : loope 0x490d60 ; pop rbp ; pop r12 ; ret
0x0000000000494285 : loope 0x494282 ; call qword ptr [rax]
0x000000000040f8e7 : loopne 0x40f94d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041b7af : loopne 0x41b7df ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041c71c : loopne 0x41c730 ; xchg eax, esp ; ret 0x3de9
0x000000000042209f : loopne 0x422105 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042dbc1 : loopne 0x42dbd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dbc0 : loopne 0x42dbd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dd11 : loopne 0x42dd28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dd10 : loopne 0x42dd29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042de61 : loopne 0x42de78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042de60 : loopne 0x42de79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dfb1 : loopne 0x42dfc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dfb0 : loopne 0x42dfc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e101 : loopne 0x42e118 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e100 : loopne 0x42e119 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e251 : loopne 0x42e268 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e250 : loopne 0x42e269 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e3a1 : loopne 0x42e3b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e3a0 : loopne 0x42e3b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e4ef : loopne 0x42e506 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e4ee : loopne 0x42e507 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e641 : loopne 0x42e658 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e640 : loopne 0x42e659 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e791 : loopne 0x42e7a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e790 : loopne 0x42e7a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e8e1 : loopne 0x42e8f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e8e0 : loopne 0x42e8f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ea31 : loopne 0x42ea48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ea30 : loopne 0x42ea49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb81 : loopne 0x42eb98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb80 : loopne 0x42eb99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ecd1 : loopne 0x42ece8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ecd0 : loopne 0x42ece9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ee21 : loopne 0x42ee38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ee20 : loopne 0x42ee39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430591 : loopne 0x4305a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430590 : loopne 0x4305a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004306e1 : loopne 0x4306f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004306e0 : loopne 0x4306f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430831 : loopne 0x430848 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430830 : loopne 0x430849 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430981 : loopne 0x430998 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430980 : loopne 0x430999 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ad1 : loopne 0x430ae8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ad0 : loopne 0x430ae9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430c21 : loopne 0x430c38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430c20 : loopne 0x430c39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d71 : loopne 0x430d88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430d70 : loopne 0x430d89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ebf : loopne 0x430ed6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ebe : loopne 0x430ed7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431011 : loopne 0x431028 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431010 : loopne 0x431029 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431161 : loopne 0x431178 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431160 : loopne 0x431179 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312b1 : loopne 0x4312c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004312b0 : loopne 0x4312c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431401 : loopne 0x431418 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431400 : loopne 0x431419 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431551 : loopne 0x431568 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431550 : loopne 0x431569 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004316a1 : loopne 0x4316b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004316a0 : loopne 0x4316b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004317f1 : loopne 0x431808 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004317f0 : loopne 0x431809 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000447e7d : loopne 0x447e97 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044bbc8 : loopne 0x44bbdd ; cmp eax, 4 ; je 0x44bbd7 ; ret
0x000000000044de12 : loopne 0x44de75 ; pop r12 ; ret
0x000000000045d1dc : loopne 0x45d216 ; cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000046339f : loopne 0x46332c ; ret
0x000000000046d50a : loopne 0x46d510 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046ea39 : loopne 0x46ea9d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046f215 : loopne 0x46f279 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048265d : loopne 0x482666 ; sub eax, 1 ; ret
0x0000000000493dc8 : loopne 0x493df7 ; stc ; inc dword ptr [rax] ; sub cl, bh ; jmp qword ptr [rax]
0x0000000000493ea4 : loopne 0x493f16 ; stc ; call rax
0x0000000000493fb8 : loopne 0x493f4a ; stc ; jmp rax
0x0000000000493fb8 : loopne 0x493f4e ; stc ; jmp rax
0x0000000000493fbc : loopne 0x493f4f ; stc ; jmp rax
0x0000000000494044 : loopne 0x494002 ; stc ; jmp rax
0x0000000000494044 : loopne 0x494006 ; stc ; jmp rax
0x0000000000494048 : loopne 0x494008 ; stc ; jmp rax
0x0000000000494130 : loopne 0x4940ca ; stc ; jmp qword ptr [rax]
0x00000000004941e1 : loopne 0x4941de ; call qword ptr [rax]
0x00000000004942a5 : loopne 0x4942a2 ; call rax
0x0000000000494aa8 : loopne 0x494ae3 ; cli ; push qword ptr [rax + 0x32] ; cli ; call qword ptr [rax]
0x0000000000494d30 : loopne 0x494d3f ; cli ; jmp qword ptr [rax]
0x0000000000494de0 : loopne 0x494e44 ; cli ; jmp rax
0x0000000000494de0 : loopne 0x494e48 ; cli ; jmp rax
0x0000000000494de4 : loopne 0x494e4a ; cli ; jmp rax
0x0000000000494de8 : loopne 0x494e50 ; cli ; jmp rax
0x0000000000494dec : loopne 0x494e56 ; cli ; jmp rax
0x0000000000494df0 : loopne 0x494e5c ; cli ; jmp rax
0x0000000000494df0 : loopne 0x494e60 ; cli ; jmp rax
0x0000000000494df4 : loopne 0x494e62 ; cli ; jmp rax
0x0000000000494df8 : loopne 0x494e68 ; cli ; jmp rax
0x0000000000494dfc : loopne 0x494e6e ; cli ; jmp rax
0x0000000000494e00 : loopne 0x494e74 ; cli ; jmp rax
0x0000000000494e04 : loopne 0x494e7a ; cli ; jmp rax
0x0000000000494e08 : loopne 0x494e80 ; cli ; jmp rax
0x0000000000494e0c : loopne 0x494e86 ; cli ; jmp rax
0x0000000000494e10 : loopne 0x494e8c ; cli ; jmp rax
0x0000000000494e14 : loopne 0x494e92 ; cli ; jmp rax
0x0000000000494f60 : loopne 0x494f5f ; cli ; inc dword ptr [rax] ; idiv edx ; jmp qword ptr [rax]
0x0000000000494f84 : loopne 0x494f84 ; cli ; inc dword ptr [rax] ; clc ; cli ; jmp qword ptr [rax]
0x0000000000494fa4 : loopne 0x494fa5 ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x00000000004a3904 : loopne 0x4a38b6 ; cld ; jmp rax
0x00000000004a3908 : loopne 0x4a38be ; cld ; inc eax ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x00000000004a3910 : loopne 0x4a38c2 ; cld ; jmp rax
0x00000000004a3914 : loopne 0x4a38c6 ; cld ; jmp rax
0x00000000004a3920 : loopne 0x4a38d2 ; cld ; jmp rax
0x00000000004a3924 : loopne 0x4a38d6 ; cld ; jmp rax
0x00000000004a3928 : loopne 0x4a38de ; cld ; jmp qword ptr [rax - 0x1f000352]
0x00000000004a3930 : loopne 0x4a38e6 ; cld ; call qword ptr [rax - 0x1f000352]
0x00000000004a3938 : loopne 0x4a38ea ; cld ; jmp rax
0x00000000004a3944 : loopne 0x4a38f6 ; cld ; jmp rax
0x00000000004a3948 : loopne 0x4a38fa ; cld ; jmp rax
0x00000000004a394c : loopne 0x4a38fe ; cld ; jmp rax
0x00000000004a3950 : loopne 0x4a3902 ; cld ; jmp rax
0x00000000004a3954 : loopne 0x4a3906 ; cld ; jmp rax
0x00000000004a3958 : loopne 0x4a390a ; cld ; jmp rax
0x00000000004a395c : loopne 0x4a390e ; cld ; jmp rax
0x00000000004a3960 : loopne 0x4a3912 ; cld ; jmp rax
0x00000000004a3964 : loopne 0x4a3916 ; cld ; jmp rax
0x00000000004a3968 : loopne 0x4a391a ; cld ; jmp rax
0x00000000004a396c : loopne 0x4a391e ; cld ; jmp rax
0x00000000004a3970 : loopne 0x4a3922 ; cld ; jmp rax
0x00000000004a3974 : loopne 0x4a3926 ; cld ; jmp rax
0x00000000004a3978 : loopne 0x4a392a ; cld ; jmp rax
0x00000000004a397c : loopne 0x4a392e ; cld ; jmp rax
0x00000000004a3980 : loopne 0x4a3932 ; cld ; jmp rax
0x00000000004a3984 : loopne 0x4a3936 ; cld ; jmp rax
0x00000000004a3988 : loopne 0x4a393a ; cld ; jmp rax
0x00000000004a398c : loopne 0x4a393e ; cld ; jmp rax
0x00000000004a3990 : loopne 0x4a3942 ; cld ; jmp rax
0x00000000004a3994 : loopne 0x4a3946 ; cld ; jmp rax
0x00000000004a3998 : loopne 0x4a394a ; cld ; jmp rax
0x00000000004a399c : loopne 0x4a394e ; cld ; jmp rax
0x00000000004a6df4 : loopne 0x4a6dd4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b2c3c : loopne 0x4b2cba ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xfc ; jmp qword ptr [rax]
0x00000000004a680a : mov ah, 0x13 ; ret
0x0000000000491f7a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004916da : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000494a18 : mov ah, 0x34 ; cli ; inc dword ptr [rsp + rsi - 6] ; call rsp
0x00000000004b0b10 : mov ah, 0x54 ; add byte ptr [rax], al ; sub al, 2 ; cli ; jmp qword ptr [rdx]
0x00000000004a6cb0 : mov ah, 0xa5 ; ret
0x00000000004aa704 : mov ah, 0xa6 ; std ; jmp rbx
0x00000000004b04ec : mov ah, 0xcc ; stc ; jmp qword ptr [rdx]
0x0000000000494520 : mov ah, 0xd ; cli ; inc dword ptr [rbp + rcx - 6] ; call rsp
0x00000000004adaf1 : mov ah, 0xf6 ; call qword ptr [rsi]
0x0000000000494039 : mov ah, 0xf9 ; call qword ptr [rax]
0x0000000000493ff9 : mov ah, 0xf9 ; inc dword ptr [rax - 0x4a] ; stc ; jmp qword ptr [rax]
0x0000000000494019 : mov ah, 0xf9 ; push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494059 : mov ah, 0xf9 ; push rax ; mov ch, 0xf9 ; call rax
0x00000000004a6604 : mov ah, bl ; push rsi ; ret
0x000000000048ae56 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000457654 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000494584 : mov al, 0x10 ; cli ; inc dword ptr [rax + 0x10] ; cli ; call rax
0x0000000000493da4 : mov al, 0x19 ; stc ; push rax ; sbb bh, cl ; call rax
0x0000000000494ce8 : mov al, 0x28 ; cli ; jmp qword ptr [rax]
0x0000000000494ae4 : mov al, 0x29 ; cli ; jmp qword ptr [rax]
0x0000000000400de8 : mov al, 0x2b ; add bh, dh ; ret 0
0x00000000004948a4 : mov al, 0x33 ; cli ; inc dword ptr [rax + 0x33] ; cli ; call rax
0x0000000000494a7c : mov al, 0x37 ; cli ; inc dword ptr [rax + 0x37] ; cli ; call rax
0x0000000000493e4c : mov al, 0x54 ; stc ; jmp qword ptr [rax]
0x00000000004a391c : mov al, 0xae ; cld ; jmp rax
0x00000000004404bf : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000048f4d4 : mov al, 0xce ; and al, byte ptr [rax] ; test eax, eax ; je 0x48f4e9 ; ret
0x00000000004a8ab6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000494f04 : mov al, 0xf1 ; cli ; call rax
0x0000000000494f24 : mov al, 0xf2 ; cli ; call rax
0x0000000000493cc0 : mov al, 0xf3 ; clc ; call rax
0x0000000000492775 : mov al, 0xf7 ; call qword ptr [rsi]
0x0000000000492769 : mov al, 0xf7 ; jmp qword ptr [rbx]
0x0000000000494091 : mov al, 0xf9 ; call rax
0x0000000000494071 : mov al, 0xf9 ; inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x0000000000494051 : mov al, 0xf9 ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x00000000004a3b1d : mov al, 0xfc ; jmp rsp
0x00000000004b2a60 : mov al, 0xfc ; sti ; jmp qword ptr [rbx]
0x00000000004947e0 : mov al, 3 ; cli ; jmp qword ptr [rax]
0x00000000004633ab : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x0000000000442296 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000004422b4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443a20 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000442270 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000442280 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004355d1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000045782f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000444938 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004a7ae4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000413109 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004243b5 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004af3b1 : mov bh, 0xf8 ; call qword ptr [rax]
0x00000000004b01e9 : mov bh, 0xf9 ; call qword ptr [rcx]
0x0000000000494041 : mov bh, 0xf9 ; jmp rax
0x000000000048f5d7 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487c7c : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a91f3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000494e39 : mov bh, dl ; inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x000000000044622e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047453c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045a0c2 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004a8bc3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004158a3 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004ada51 : mov bl, 0xf6 ; call qword ptr [rdx]
0x00000000004940d9 : mov bl, 0xf9 ; call qword ptr [rax]
0x000000000044e0ca : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x000000000044bd8a : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004abae4 : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x6b], cl ; cmc ; call qword ptr [rdx]
0x000000000044e0cb : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000044b92f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d84 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b3e61 : mov byte ptr [rax], al ; add byte ptr [rbx + rcx*8], bl ; cld ; call rdx
0x00000000004afee4 : mov byte ptr [rax], cl ; add byte ptr [rax - 0x5c], ch ; stc ; jmp qword ptr [rcx]
0x00000000004afbe4 : mov byte ptr [rbp], al ; add al, bl ; xchg eax, esi ; stc ; jmp qword ptr [rcx]
0x00000000004b01e4 : mov byte ptr [rbx], cl ; add al, ch ; mov bh, 0xf9 ; call qword ptr [rcx]
0x000000000046e927 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000459bc3 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048ad14 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000405d8f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045e743 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000444688 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000443ff8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004446fe : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000044404e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444780 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000004440d0 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444536 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000443f16 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000444552 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000443f32 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000443f73 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000042f1eb : mov byte ptr [rdi - 1], dl ; ret
0x00000000004126f0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000438312 : mov byte ptr [rdi], cl ; ret
0x0000000000447bf5 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000444510 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000443ef0 : mov byte ptr [rdi], dh ; ret
0x0000000000435643 : mov byte ptr [rdi], dl ; ret
0x0000000000443a49 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000442299 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000443a77 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000004422b7 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443a22 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000442272 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048b880 : mov byte ptr [rip + 0x230929], 8 ; ret
0x0000000000400b06 : mov byte ptr [rip + 0x2ba7d3], 1 ; pop rbp ; ret
0x000000000041d9c9 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000400b31 : mov byte ptr [rsi - 0x76b7ffb6], dh ; in eax, 0xe8 ; ret
0x000000000048465f : mov byte ptr [rsi], al ; jne 0x48464f ; mov rax, rsi ; ret
0x00000000004846e3 : mov byte ptr [rsi], al ; jne 0x4846c7 ; mov rax, rsi ; ret
0x00000000004a6602 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a7943 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000040f332 : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x40f305
0x000000000045cd5a : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x45cd2d
0x00000000004a8cdf : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a968a : mov ch, 0xab ; ret
0x00000000004712d7 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000049405d : mov ch, 0xf9 ; call rax
0x000000000042cf06 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044f42b : mov cl, 0x35 ; call rsp
0x00000000004686f3 : mov cl, 0x7d ; stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000493f14 : mov cl, 0x92 ; stc ; inc dword ptr [rcx - 0x6d] ; stc ; call rcx
0x0000000000492779 : mov cl, 0xf7 ; call qword ptr [rsi]
0x00000000004940f5 : mov cl, 0xf9 ; jmp rax
0x00000000004940d5 : mov cl, 0xf9 ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000045a7c7 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043aaf5 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000424634 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a8ab2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042bd54 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000438310 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047473b : mov cl, dl ; and cl, 0xf ; je 0x474767 ; ret
0x00000000004a8d6c : mov cs, edi ; ret 0x8b36
0x0000000000467e32 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000043f07e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000443f10 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048478a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048df3f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004164b2 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041299f : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418540 : mov dh, 0 ; ret
0x00000000004943b4 : mov dh, 0x12 ; cli ; inc dword ptr [rsi + 0x12] ; cli ; call rsi
0x0000000000435641 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042b8a4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dad4 : mov dh, 0x17 ; test dl, dl ; jne 0x40daba ; ret
0x000000000046e93c : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040d9f9 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x00000000004565f2 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000046925b : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000445e01 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000445df1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000445dc1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000445de1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000445dd1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045de39 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000400b32 : mov dh, 0x4a ; add byte ptr [rax - 0x77], cl ; in eax, 0xe8 ; ret
0x00000000004a7aa2 : mov dh, 0x4e ; ret 0x474c
0x0000000000445e05 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000445df5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000445dc5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000445dd5 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000004630c8 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x0000000000405f2a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040ee94 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478bcf : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000493f5c : mov dh, 0x93 ; stc ; inc dword ptr [rsi - 0x6c] ; stc ; call rsi
0x0000000000475742 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048bf86 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046e6b8 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004882dd : mov dh, 0xc0 ; neg eax ; ret
0x0000000000484baa : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e5a1 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000447ee1 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000004152b2 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8ce4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048ad0f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042b8ca : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048c4bf : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000446d09 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000004259e1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042bd64 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000049401d : mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000493ffd : mov dh, 0xf9 ; jmp qword ptr [rax]
0x000000000049403d : mov dh, 0xf9 ; push rax ; mov bh, 0xf9 ; jmp rax
0x000000000040d535 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000004164c1 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004129b1 : mov dh, 2 ; ret
0x000000000042bd61 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042b8a1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004259e4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000044848c : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000490cb1 : mov dl, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000494950 : mov dl, 0x35 ; cli ; inc dword ptr [rdx + 0x35] ; cli ; call rdx
0x000000000040ea3d : mov dl, 0x6b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004703e5 : mov dl, 0x6b ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004134f2 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000412e78 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x0000000000494458 : mov dl, 0xe ; cli ; inc dword ptr [rdx + 0xe] ; cli ; call rdx
0x00000000004ad979 : mov dl, 0xf6 ; call qword ptr [rsi]
0x0000000000494055 : mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494075 : mov dl, 0xf9 ; jmp rax
0x0000000000494035 : mov dl, 0xf9 ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x000000000042f270 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000046222d : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x0000000000438306 : mov dword ptr [r9 - 2], ecx ; ret
0x00000000004382f1 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044bd21 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470919 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470959 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471958 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044bd87 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044bda1 : mov dword ptr [rax + 0x20], esi ; ret
0x000000000047091d : mov dword ptr [rax + 0x40], ecx ; ret
0x00000000004719da : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004507df : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004507e2 : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004171d5 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044bd25 : mov dword ptr [rax + 8], edx ; ret
0x0000000000465cdd : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f222 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041d9fa : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x0000000000484d6d : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000484cbd : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000041a502 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000484d61 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048d0f2 : mov dword ptr [rax], edx ; ret
0x0000000000471ccb : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047c5e1 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x000000000046944f : mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x000000000047cf81 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x00000000004584b2 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004127c7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481bde : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412baf : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047f8ce : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485a73 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485a47
0x0000000000481b13 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488305 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x00000000004883d9 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045aa5d : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000041686d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416351 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000471b8a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417fed : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414382 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004709a4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000471851 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004584c7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000485533 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004167fc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048a339 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000416870 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004126c5 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047195b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000004100d1 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400d3e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x0000000000450b35 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x0000000000438307 : mov dword ptr [rcx - 2], ecx ; ret
0x00000000004382f2 : mov dword ptr [rcx - 4], ecx ; ret
0x00000000004382e1 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000004499b4 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x449987
0x00000000004492da : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000418f34 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000044469d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000004446db : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000044475d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000044404b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004440cd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044400d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444110 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444130 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004440f1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000004447c3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000444113 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000416233 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004447a5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000004447e3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000004440f5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000418f31 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047b585 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047b557 : mov dword ptr [rdi + 0x308], eax ; ret
0x0000000000416263 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d131 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000044471d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000044406d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000004446bb : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000044473d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000044402b : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435485 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004352c8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435568 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435415 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435258 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444587 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000004353a5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004351e8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443f57 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000444569 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000435178 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443f49 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044461b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435108 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443fbb : mov dword ptr [rdi + 5], edx ; ret
0x000000000044463b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435098 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443fcb : mov dword ptr [rdi + 6], edx ; ret
0x00000000004445d9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000044465b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000435028 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443f99 : mov dword ptr [rdi + 7], edx ; ret
0x00000000004845ae : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000416237 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000482dc4 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000004445f9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000004445bb : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000484264 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000443f8b : mov dword ptr [rdi + 8], edx ; ret
0x0000000000447a9b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000446d35 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000447a93 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000447c15 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000446d25 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000447a8b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000446d17 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d0dc : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042ef35 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ef73 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482d2f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042f2bc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ad8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f49c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a58 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f68c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004349d8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f85d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434949 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fa5d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004348b9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fc5d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434829 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f63d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042f455 : mov dword ptr [rdi - 2], edx ; ret
0x000000000042f639 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fa19 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f0ef : mov dword ptr [rdi - 4], edx ; ret
0x000000000042fa16 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fc16 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fe16 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ef39 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042ef77 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042f0ec : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f1e8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f134 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b58 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000482cb4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482dbe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046845a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000444555 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004445a7 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444534 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000443f14 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000444585 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000443f55 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004445d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000443f97 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000004445f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000443fa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000446a67 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000443fb8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000443fc8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000443fd8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000443f46 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000443f88 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000446a73 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043502c : mov dword ptr [rdi], ecx ; ret
0x0000000000447c0f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000444524 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444542 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444594 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435334 : mov dword ptr [rdi], edx ; ret
0x00000000004382ef : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000484436 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004382de : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000438303 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000446d1c : mov dword ptr [rdi], esi ; ret
0x0000000000412845 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000443aa7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000004422d7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000443a89 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000004422c9 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000443b3b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000443ab9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00000000004422e9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000443b5b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000443ad9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00000000004422f9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000443af9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000443b7b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000442309 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000443b19 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000443a0b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000044225b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000418160 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x0000000000443a34 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000443a62 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000004439b4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000044936a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000484438 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000484595 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000044961a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000442204 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484d4d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004180c8 : mov dword ptr [rdx], eax ; ret
0x000000000049002f : mov dword ptr [rip + 0x22bcbb], ebx ; jne 0x490021 ; pop rbx ; ret
0x0000000000484898 : mov dword ptr [rip + 0x2377ca], eax ; ret
0x000000000047f1a5 : mov dword ptr [rip + 0x23d205], eax ; ret
0x000000000045a888 : mov dword ptr [rip + 0x26022a], edx ; je 0x45a8a1 ; ret
0x000000000044d166 : mov dword ptr [rip + 0x26b94c], edx ; pop rbx ; ret
0x000000000041f576 : mov dword ptr [rip + 0x29a2e4], eax ; ret
0x000000000041949c : mov dword ptr [rip + 0x2a03be], eax ; ret
0x0000000000418f97 : mov dword ptr [rip + 0x2a0853], eax ; ret
0x0000000000418fae : mov dword ptr [rip + 0x2a0858], eax ; ret
0x0000000000418f6f : mov dword ptr [rip + 0x2a0873], eax ; ret
0x0000000000418f4f : mov dword ptr [rip + 0x2a088b], eax ; ret
0x0000000000418e45 : mov dword ptr [rip + 0x2a09fd], eax ; ret
0x0000000000418e35 : mov dword ptr [rip + 0x2a0a05], eax ; ret
0x0000000000418e23 : mov dword ptr [rip + 0x2a0a07], edx ; ret
0x0000000000418de5 : mov dword ptr [rip + 0x2a0a0d], eax ; ret
0x0000000000418dd5 : mov dword ptr [rip + 0x2a0a25], eax ; ret
0x0000000000418fc4 : mov dword ptr [rip + 0x2a2dca], eax ; ret
0x0000000000400ee1 : mov dword ptr [rip + 0x2bb9f9], eax ; call 0x44d148
0x0000000000446a76 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000446a69 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000478771 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048d11e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047f312 : mov dword ptr [rsi], eax ; ret
0x000000000047e659 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045cdfa : mov dword ptr [rsi], edi ; xor eax, eax ; jmp 0x45cdc6
0x000000000041c73a : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041c7f7 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000450ecc : mov dword ptr [rsp + 0x50], eax ; call 0x44d1a6
0x000000000041c73f : mov dword ptr [rsp + 8], eax ; call rcx
0x0000000000410fbe : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041cd54 : mov dword ptr [rsp + 8], edx ; call 0x418ff6
0x000000000041cd53 : mov dword ptr [rsp + 8], r10d ; call 0x418ff7
0x0000000000489ae3 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004130a2 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x00000000004163b5 : mov dword ptr [rsp], edi ; call 0x412645
0x0000000000465cdc : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f221 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000047584c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x00000000004499b3 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x449988
0x00000000004492d9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000449369 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000446d24 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f450 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000443f00 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400bb3 : mov eax, 0 ; leave ; ret
0x0000000000447f5b : mov eax, 0x10 ; pop rbx ; ret
0x0000000000423250 : mov eax, 0x16 ; ret
0x0000000000447f69 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000485210 : mov eax, 0x27 ; syscall ; ret
0x0000000000447f62 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000447f77 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a6bfb : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000457888 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000447f70 : mov eax, 0x60 ; pop rbx ; ret
0x0000000000475460 : mov eax, 0x66 ; syscall ; ret
0x0000000000475480 : mov eax, 0x68 ; syscall ; ret
0x0000000000475470 : mov eax, 0x6b ; syscall ; ret
0x0000000000475490 : mov eax, 0x6c ; syscall ; ret
0x00000000004af514 : mov eax, 0x7800003e ; stc ; jmp qword ptr [rbx]
0x0000000000447f4d : mov eax, 0x80 ; pop rbx ; ret
0x00000000004898ef : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000486b04 : mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004aff14 : mov eax, 0x98000048 ; movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x0000000000494001 : mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000474d00 : mov eax, 0xc9 ; syscall ; ret
0x000000000044bb32 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000045804c : mov eax, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x00000000004499b6 : mov eax, 0xffffffff ; jmp 0x449985
0x0000000000411cb1 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411a37 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000412bc3 : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004119fb : mov eax, 0xffffffff ; ret
0x0000000000475cc1 : mov eax, 1 ; leave ; ret
0x0000000000484415 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000416f32 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048673d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047fc20 : mov eax, 1 ; pop rbx ; ret
0x00000000004683bf : mov eax, 1 ; ret
0x0000000000474553 : mov eax, 2 ; ret
0x00000000004747b1 : mov eax, 3 ; ret
0x000000000048df9f : mov eax, 4 ; jne 0x48dfc8 ; ret
0x00000000004747c1 : mov eax, 4 ; ret
0x00000000004747d1 : mov eax, 5 ; ret
0x00000000004747e1 : mov eax, 6 ; ret
0x00000000004747f1 : mov eax, 7 ; ret
0x0000000000447f54 : mov eax, 8 ; pop rbx ; ret
0x000000000044e5f0 : mov eax, 8 ; ret
0x0000000000411551 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000471de4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417118 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x417119 ; ret
0x00000000004819d1 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000458ec0 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x458ed2 ; call rax
0x000000000046ba5a : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045a8cf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046062d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048ad59 : mov eax, dword ptr [rax] ; lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048ad41 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000047fc39 : mov eax, dword ptr [rax] ; ret
0x000000000047c520 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x000000000047c341 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041639d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484d69 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416a89 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000450ec9 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44d1a9
0x00000000004422d4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004422e6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004422f6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000442306 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000442316 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043ceea : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043e7c2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000443a60 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000004422a0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000004439b1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000442201 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000443a31 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000442281 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047cb26 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471c3e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x00000000004180d0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004180f8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000490c6d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x490c84 ; call rax
0x0000000000471de1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418421 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048d0b1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048d101 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048d141 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048d1a1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048d191 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048d151 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000460b6f : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000487c21 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487c38 ; ret
0x00000000004180c5 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000418fc1 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a2dca], eax ; ret
0x000000000048f405 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f417 ; ret
0x000000000048f420 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f437 ; ret
0x000000000048f650 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f667 ; ret
0x000000000047e60c : mov eax, dword ptr [rdx + 4] ; ret
0x0000000000448487 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448479 ; ret
0x000000000043aaf6 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004180b1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x4180b0 ; ret
0x0000000000485410 : mov eax, dword ptr [rip + 0x2374aa] ; ret
0x000000000047f30b : mov eax, dword ptr [rip + 0x23d097] ; mov qword ptr [rsi], rax ; ret
0x000000000047f29a : mov eax, dword ptr [rip + 0x23d110] ; ret
0x0000000000457731 : mov eax, dword ptr [rip + 0x264741] ; ret
0x000000000044f231 : mov eax, dword ptr [rip + 0x26d6f1] ; ret
0x0000000000418401 : mov eax, dword ptr [rip + 0x2a0d19] ; ret
0x000000000048dff2 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048ae81 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048ae54 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048ae71 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048e011 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046ba1f : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000460bb9 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461219 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x0000000000470e4f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048d176 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a596 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401133 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000452e3c : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044998a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044990d : mov eax, dword ptr [rsp + 0xc] ; jne 0x4498e2 ; neg eax ; jmp 0x4498e2
0x000000000040defd : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000486baf : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048a8ea : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000047fc38 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041a670 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042244f : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000447f92 : mov eax, eax ; ret
0x0000000000474b74 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x00000000004739b1 : mov eax, eax ; vzeroupper ; ret
0x000000000041017b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044af74 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410293 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fd4e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004119a2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004843a3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000488397 : mov eax, ebx ; jne 0x4883b5 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048847e : mov eax, ebx ; jne 0x48849d ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000410478 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414455 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a1b0 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000004127cb : mov eax, ebx ; pop rbx ; ret
0x0000000000484267 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000465bc5 : mov eax, ecx ; ret
0x00000000004126c3 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a905 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x00000000004126f4 : mov eax, edi ; ret
0x000000000041a505 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000465c8e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000046826a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410021 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000447f96 : mov eax, edx ; pop rbx ; ret
0x000000000041a511 : mov eax, edx ; ret
0x0000000000482617 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000041399a : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046f904 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041d9cd : mov eax, esi ; pop rbx ; ret
0x000000000041da01 : mov eax, esi ; ret
0x000000000046ea38 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465bc4 : mov eax, r9d ; ret
0x000000000049408d : mov ebp, 0xb010fff9 ; stc ; call rax
0x000000000049efe4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a60bd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000473178 : mov ebp, 0xf80148c0 ; ret
0x00000000004733fc : mov ebp, 0xf80148c6 ; ret
0x00000000004a7826 : mov ebp, 0xfb67d10d ; ret
0x0000000000468f0e : mov ebp, 0xfffff730 ; call rax
0x000000000045d9dc : mov ebp, 0xfffff758 ; call rax
0x000000000046bf09 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000464de5 : mov ebp, 0xffffff40 ; call rax
0x000000000048d5d3 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004004cb : mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000048e81a : mov ebp, dword ptr [rsp + 8] ; jmp 0x48e838
0x000000000046fb99 : mov ebp, eax ; jmp 0x46fb62
0x000000000048261d : mov ebp, ecx ; nop ; jmp rdx
0x0000000000490031 : mov ebx, 0x750022bc ; loope 0x49009a ; ret
0x000000000044bb64 : mov ebx, 0xafb8341 ; je 0x44bb73 ; ret
0x00000000004940a9 : mov ebx, 0xbd40fff9 ; stc ; call rax
0x0000000000494089 : mov ebx, 0xbd80fff9 ; stc ; call qword ptr [rax]
0x00000000004a60bb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000042459b : mov ebx, 0xf480001 ; ret 0x66c3
0x000000000040f334 : mov ebx, 1 ; jmp 0x40f303
0x000000000045cd5c : mov ebx, 1 ; jmp 0x45cd2b
0x000000000045a2c6 : mov ebx, edi ; test rax, rax ; je 0x45a2d6 ; call rax
0x00000000004755ac : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x0000000000400ee4 : mov ecx, 0x54e8002b ; ret 4
0x0000000000494045 : mov ecx, 0xbbe0fff9 ; stc ; jmp rax
0x00000000004a60b9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000046ba5d : mov ecx, 1 ; jmp rax
0x0000000000418f51 : mov ecx, dword ptr [rax] ; sub al, byte ptr [rax] ; ret
0x00000000004382ec : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042d69e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000471dbb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043aaf3 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000042fa13 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fc13 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fe13 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000443f30 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000443f71 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435483 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435413 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004353a3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004352c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435255 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004351e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435175 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435105 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435095 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435025 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435565 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000443f11 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000481ac7 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481a55 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004723f1 : mov ecx, eax ; jmp 0x4723bb
0x000000000044e52b : mov ecx, ebp ; call rbx
0x0000000000416eb0 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000446cf2 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000416eea : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000474175 : mov ecx, esi ; call rbx
0x000000000045f22a : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400a8c : mov edi, 0x6babd0 ; jmp rax
0x0000000000494331 : mov edi, 0xc2a0fff9 ; stc ; push rax ; ret
0x000000000048ce06 : mov edi, 1 ; call r14
0x000000000048cd5c : mov edi, 1 ; call rax
0x000000000048dacc : mov edi, 1 ; jmp rax
0x000000000040e994 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044a9cc : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045d9db : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x0000000000468f0d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000464de4 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048d451 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044a4b4 : mov edi, dword ptr [rbp] ; call r12
0x000000000040def9 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a48e : mov edi, dword ptr [rbx] ; call r12
0x000000000047c70f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047f2e6 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47f2c9 ; ret
0x00000000004a7ae6 : mov edi, dword ptr [rdx] ; ret
0x000000000048ed2e : mov edi, dword ptr [rsp + 0x10] ; call r14
0x00000000004824f4 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450c05 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000450ad0 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004514e1 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004516b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000004519a3 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x0000000000451fdb : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000454f9f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x00000000004511e9 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000450ef5 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045341a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000455bc6 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000452e37 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040112e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000416abb : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044a591 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004163c6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048dc1c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004232b4 : mov edi, eax ; call rcx
0x00000000004686f0 : mov edi, ebp ; call 0x4004b1
0x00000000004217d3 : mov edi, ebp ; call 0x41da14
0x000000000048998e : mov edi, ebp ; call qword ptr [r14]
0x00000000004018ce : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x0000000000489a62 : mov edi, ebp ; call qword ptr [rax]
0x0000000000489b3e : mov edi, ebp ; call qword ptr [rcx]
0x0000000000457efc : mov edi, ebp ; call r12
0x000000000048eb0c : mov edi, ebp ; call r14
0x0000000000422636 : mov edi, ebp ; call rax
0x0000000000474021 : mov edi, ebp ; call rbx
0x0000000000474172 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040df89 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040f880 : mov edi, ebx ; call 0x44bab4
0x000000000044e82e : mov edi, ebx ; call r14
0x00000000004130a6 : mov edi, ebx ; call rax
0x000000000041645d : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470ccf : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000472148 : mov edi, edi ; call r12
0x0000000000410fc3 : mov edi, edi ; call rax
0x000000000044ee0b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004846e1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4846c9 ; mov rax, rsi ; ret
0x0000000000458053 : mov edi, esi ; call rbx
0x0000000000458331 : mov edi, esi ; call rdx
0x000000000041cd51 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x418ff9
0x000000000048db24 : mov edi, esp ; call r15
0x0000000000471e70 : mov edi, esp ; call rbx
0x0000000000447e96 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000412846 : mov edx, 0x130 ; pop rbx ; ret
0x000000000044b9d6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x000000000040497c : mov edx, 0x8949ffff ; ret 0x149
0x0000000000494005 : mov edx, 0xbc20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000494129 : mov edx, 0xbc30fff9 ; stc ; jmp rax
0x0000000000494109 : mov edx, 0xbc80fff9 ; stc ; call qword ptr [rax]
0x00000000004ab584 : mov edx, 0xc5fffe10 ; adc dh, bh ; call rax
0x00000000004a6f9e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d0e1e
0x00000000004508a7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047e58c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000045832a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048dc20 : mov edx, dword ptr [rbp] ; call r12
0x0000000000484d49 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043e7bf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043ceed : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000484d5d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048eb09 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000443f52 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000443f43 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000443f93 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000443fa3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042f451 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042f810 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f0a1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000444540 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004354f0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000444591 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435331 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000444521 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000443f01 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004824f9 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048cd59 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x00000000004232b9 : mov edx, eax ; jmp 0x42326c
0x000000000045611a : mov edx, eax ; jmp 0x4560d1
0x0000000000456251 : mov edx, eax ; jmp 0x456210
0x000000000045651f : mov edx, eax ; jmp 0x4564d6
0x0000000000456596 : mov edx, eax ; jmp 0x45654d
0x000000000046f132 : mov edx, eax ; jmp 0x46f100
0x0000000000475d5e : mov edx, eax ; jmp 0x475d52
0x0000000000489989 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489a5d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489b39 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489943 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004479b8 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004559c9 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000452f12 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x0000000000475939 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000004507dc : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004946f0 : mov esi, 0x64fffa01 ; or edx, edi ; jmp rsp
0x000000000044f992 : mov esi, 0x83480147 ; ret
0x00000000004a60be : mov esi, 0xc2c1c0bf ; ret
0x0000000000447e24 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x000000000041949e : mov esi, 0xf3002a03 ; ret
0x0000000000460bbc : mov esi, 1 ; jmp rax
0x000000000046ec9c : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044a428 : mov esi, 2 ; jmp rax
0x000000000044a43b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000458dc4 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x458dd6 ; call rsi
0x000000000048d44d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044ee0e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048ed2b : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048dbd5 : mov esi, dword ptr [rsi] ; call r12
0x0000000000446d23 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044e526 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422631 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004516b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004511e4 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455bc1 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000420049 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x0000000000400589 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400598 ; ret
0x00000000004232b1 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000421c62 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004217d0 : mov esi, ebx ; mov rdi, r13 ; call 0x41da17
0x000000000048daca : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045d9d8 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047e5f3 : mov esi, edx ; cmp rcx, rsi ; jne 0x47e5d8 ; ret
0x0000000000423dd0 : mov esi, es ; std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000464de1 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048db21 : mov esi, esi ; mov rdi, r12 ; call r15
0x000000000048998c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489a60 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489b3c : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489946 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000470ccc : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040d2cb : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042b131 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b161 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b151 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000040fe82 : mov esp, 0x8824 ; add al, ch ; ret
0x000000000040479f : mov esp, 0x8949ffff ; ret 0x149
0x0000000000417752 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000049412d : mov esp, 0x95e0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004513fd : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x000000000045187f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004940ed : mov esp, 0xaf50fff9 ; stc ; call qword ptr [rax]
0x0000000000440873 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000046faa4 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000490032 : mov esp, 0xe1750022 ; pop rbx ; ret
0x000000000042b21b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042b141 : mov esp, 0xf80148c0 ; ret
0x000000000042b632 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000004007e6 : mov esp, eax ; call 0x447e18
0x00000000004006af : mov esp, eax ; call 0x4482d8
0x000000000048261a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d5d7 : mov esp, ecx ; ret
0x000000000044a9d0 : mov esp, esi ; call r15
0x000000000045268d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x0000000000456c0d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048ad43 : mov qword ptr [r10], r8 ; ret
0x00000000004382e0 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044bd20 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470918 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470958 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471957 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044bd86 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044bda0 : mov qword ptr [rax + 0x20], rsi ; ret
0x000000000047091c : mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004719d9 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004171d4 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044bd24 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000484d6c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000484cbc : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484d60 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048d0f1 : mov qword ptr [rax], rdx ; ret
0x0000000000471cca : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047c5e0 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000047cf80 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x00000000004584b1 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000004127c6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481bdd : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412bae : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000047f8cd : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485a72 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485a48
0x0000000000481b12 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488304 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004883d8 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000416350 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000417fec : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485532 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a338 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004100d0 : mov qword ptr [rcx + 0x130], rdx ; ret
0x0000000000482e3e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000044475c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000004440cc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004440ac : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044410f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044412f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004440f0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000416232 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047b584 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047b556 : mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000416262 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d130 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000044471c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000044406c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044473c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000044408c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004352c7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435257 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004351e7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435177 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044461a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435107 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443fba : mov qword ptr [rdi + 5], rdx ; ret
0x000000000044463a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435097 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443fca : mov qword ptr [rdi + 6], rdx ; ret
0x000000000044465a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000435027 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000443fda : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000484263 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000482dc3 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000004845ad : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000416236 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000447a8a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000446d16 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d0db : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042ef34 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ef72 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482d2e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042f2bb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434ad7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f49b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a57 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f68b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004349d7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f85c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434948 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fa5c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004348b8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fc5c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434828 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000482cb9 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042ef38 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ef76 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f0eb : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f1e7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f133 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b57 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000468459 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000482c88 : mov qword ptr [rdi], r9 ; ret
0x00000000004445a6 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000443f96 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000443fa6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000443fb7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000443fc7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000443fd7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000443f87 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043502b : mov qword ptr [rdi], rcx ; ret
0x0000000000447c0e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000444593 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435333 : mov qword ptr [rdi], rdx ; ret
0x00000000004382dd : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000446d1b : mov qword ptr [rdi], rsi ; ret
0x0000000000412844 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000443b3a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000044232a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000443b5a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000044234a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000443b7a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000044236a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000443a0a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000044225a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000041815f : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x00000000004439b3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000442203 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484d4c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004180c7 : mov qword ptr [rdx], rax ; ret
0x0000000000484897 : mov qword ptr [rip + 0x2377ca], rax ; ret
0x000000000047f1a4 : mov qword ptr [rip + 0x23d205], rax ; ret
0x000000000041f575 : mov qword ptr [rip + 0x29a2e4], rax ; ret
0x000000000041949b : mov qword ptr [rip + 0x2a03be], rax ; ret
0x0000000000418f96 : mov qword ptr [rip + 0x2a0853], rax ; ret
0x0000000000418f6e : mov qword ptr [rip + 0x2a0873], rax ; ret
0x0000000000418f4e : mov qword ptr [rip + 0x2a088b], rax ; ret
0x0000000000418e44 : mov qword ptr [rip + 0x2a09fd], rax ; ret
0x0000000000418e34 : mov qword ptr [rip + 0x2a0a05], rax ; ret
0x0000000000418e22 : mov qword ptr [rip + 0x2a0a07], rdx ; ret
0x0000000000418de4 : mov qword ptr [rip + 0x2a0a0d], rax ; ret
0x0000000000418dd4 : mov qword ptr [rip + 0x2a0a25], rax ; ret
0x0000000000400ee0 : mov qword ptr [rip + 0x2bb9f9], rax ; call 0x44d149
0x0000000000478770 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047f311 : mov qword ptr [rsi], rax ; ret
0x000000000047e658 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000045cdf9 : mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x45cdc7
0x0000000000450ecb : mov qword ptr [rsp + 0x50], rax ; call 0x44d1a7
0x000000000041c73e : mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000410fbd : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000489ae2 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004130a1 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004163b4 : mov qword ptr [rsp], rdi ; call 0x412646
0x000000000045a8b5 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000446d15 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000004a6f9d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d0e1f
0x000000000040f333 : mov r11d, 1 ; jmp 0x40f304
0x000000000045cd5b : mov r11d, 1 ; jmp 0x45cd2c
0x00000000004007e5 : mov r12, rax ; call 0x447e19
0x00000000004006ae : mov r12, rax ; call 0x4482d9
0x000000000044a9cf : mov r12d, r14d ; call r15
0x000000000048d44c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d450 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048ad40 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000044e52a : mov r9, r13 ; call rbx
0x0000000000474174 : mov r9, r14 ; call rbx
0x0000000000417660 : mov rax, -1 ; ret
0x0000000000474790 : mov rax, 1 ; ret
0x00000000004747a0 : mov rax, 2 ; ret
0x00000000004747b0 : mov rax, 3 ; ret
0x00000000004747c0 : mov rax, 4 ; ret
0x00000000004747d0 : mov rax, 5 ; ret
0x00000000004747e0 : mov rax, 6 ; ret
0x00000000004747f0 : mov rax, 7 ; ret
0x0000000000486bae : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047cb25 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000411550 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000471de3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000004819d0 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000458ebf : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x458ed3 ; call rax
0x000000000046ba59 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045a8ce : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046062c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d082 : mov rax, qword ptr [rax] ; ret
0x000000000047c340 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041639c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484d68 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416a88 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000442200 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000490c6c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x490c85 ; call rax
0x0000000000471de0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418420 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d0b0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d100 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048d140 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d1a0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d190 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d150 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000460b6e : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487c20 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487c39 ; ret
0x00000000004180c4 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004180b0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x4180b1 ; ret
0x000000000047f299 : mov rax, qword ptr [rip + 0x23d110] ; ret
0x0000000000457730 : mov rax, qword ptr [rip + 0x264741] ; ret
0x000000000044f230 : mov rax, qword ptr [rip + 0x26d6f1] ; ret
0x0000000000418400 : mov rax, qword ptr [rip + 0x2a0d19] ; ret
0x000000000048dff1 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048ae80 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048ae53 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048ae70 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e010 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046ba1e : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000460bb8 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461218 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d175 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a595 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401132 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000452e3b : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040defc : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048a8e9 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046ea37 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044a95d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a66f : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042244e : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004739b0 : mov rax, r8 ; vzeroupper ; ret
0x000000000044af73 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410292 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413ad6 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d2aa : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000414521 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414454 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a1af : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004127ca : mov rax, rbx ; pop rbx ; ret
0x000000000047e65b : mov rax, rcx ; ret
0x00000000004126c2 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a904 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000004126f3 : mov rax, rdi ; ret
0x000000000041a504 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047523a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000419ebc : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000447f95 : mov rax, rdx ; pop rbx ; ret
0x000000000041a510 : mov rax, rdx ; ret
0x000000000041d9cc : mov rax, rsi ; pop rbx ; ret
0x000000000041da00 : mov rax, rsi ; ret
0x000000000048d5d2 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048e819 : mov rbp, qword ptr [rsp + 8] ; jmp 0x48e839
0x000000000048261c : mov rbp, r9 ; nop ; jmp rdx
0x000000000046fb98 : mov rbp, rax ; jmp 0x46fb63
0x000000000045a2c5 : mov rbx, rdi ; test rax, rax ; je 0x45a2d7 ; call rax
0x0000000000443f70 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000481ac6 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481a54 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004723f0 : mov rcx, rax ; jmp 0x4723bc
0x0000000000446cf1 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b08b : mov rdi, qword ptr [r13] ; call r12
0x000000000040def8 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040e993 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044a9cb : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045d9da : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000468f0c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000464de3 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044a4b3 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044a48d : mov rdi, qword ptr [rbx] ; call r12
0x000000000048ed2d : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000450c04 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004514e0 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004516b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004519a2 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451fda : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000454f9e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004511e8 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453419 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455bc5 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004163c5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048dc1b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048db23 : mov rdi, r12 ; call r15
0x0000000000471e6f : mov rdi, r12 ; call rbx
0x00000000004217d2 : mov rdi, r13 ; call 0x41da15
0x0000000000457efb : mov rdi, r13 ; call r12
0x000000000048eb0b : mov rdi, r13 ; call r14
0x0000000000491f80 : mov rdi, r13 ; call rax
0x000000000040df88 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000458052 : mov rdi, r14 ; call rbx
0x0000000000458330 : mov rdi, r14 ; call rdx
0x0000000000472147 : mov rdi, r15 ; call r12
0x0000000000410fc2 : mov rdi, r15 ; call rax
0x000000000044ee0a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004232b3 : mov rdi, rax ; call rcx
0x0000000000422635 : mov rdi, rbp ; call rax
0x0000000000474020 : mov rdi, rbp ; call rbx
0x0000000000474171 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000040f87f : mov rdi, rbx ; call 0x44bab5
0x000000000044e82d : mov rdi, rbx ; call r14
0x00000000004130a5 : mov rdi, rbx ; call rax
0x000000000041645c : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470cce : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048cd58 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048eb08 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048dc1f : mov rdx, qword ptr [rbp] ; call r12
0x0000000000484d48 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000484d5c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042f0a0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435330 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004824f8 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000489988 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489a5c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489b38 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489942 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000046f131 : mov rdx, r8 ; jmp 0x46f101
0x00000000004232b8 : mov rdx, rax ; jmp 0x42326d
0x0000000000456119 : mov rdx, rax ; jmp 0x4560d2
0x0000000000456250 : mov rdx, rax ; jmp 0x456211
0x000000000045651e : mov rdx, rax ; jmp 0x4564d7
0x0000000000456595 : mov rdx, rax ; jmp 0x45654e
0x0000000000475d5d : mov rdx, rax ; jmp 0x475d53
0x00000000004479b7 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048dbd4 : mov rsi, qword ptr [r14] ; call r12
0x000000000048ed2a : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000458dc3 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x458dd7 ; call rsi
0x000000000044ee0d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044e525 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422630 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000420048 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048998b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489a5f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489b3b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489945 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000048db20 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400588 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400599 ; ret
0x00000000004232b0 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004217cf : mov rsi, rbx ; mov rdi, r13 ; call 0x41da18
0x000000000048dac9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047e5f2 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47e5d9 ; ret
0x0000000000482619 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d5d6 : mov rsp, rcx ; ret
0x0000000000493ffc : mov sil, 0xf9 ; jmp qword ptr [rax]
0x000000000046c546 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000438305 : mov word ptr [r9 - 2], cx ; ret
0x000000000044469c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000044400c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000004447a4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000004440f4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435567 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444568 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000443f48 : mov word ptr [rdi + 4], dx ; ret
0x00000000004445ba : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000443f8a : mov word ptr [rdi + 8], dx ; ret
0x0000000000447a9a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000446d34 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000042f63c : mov word ptr [rdi - 2], cx ; ret
0x000000000042f454 : mov word ptr [rdi - 2], dx ; ret
0x000000000042f638 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000443f13 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000446a72 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043556b : mov word ptr [rdi], cx ; ret
0x0000000000447c24 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000444523 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004355d3 : mov word ptr [rdi], dx ; ret
0x0000000000438302 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000446d39 : mov word ptr [rdi], si ; ret
0x0000000000443a88 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000004422c8 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000443a33 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000442283 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000446a75 : mov word ptr [rsi - 2], cx ; ret
0x00000000004047cb : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000446d33 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000447207 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000044c8cc : movabs al, byte ptr [0x8948c085480002ed] ; ret
0x00000000004871aa : movabs byte ptr [0x8348f7894cfff98c], al ; ret
0x00000000004750eb : movabs eax, dword ptr [0x8948c08548fffaa4] ; ret
0x000000000042dbc2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042dbbe : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042dc6c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000443fe0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044485d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000004441ad : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043523f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351cf : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043515f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004350ef : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004447fd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000044414d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043507f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044481d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000044416d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043500f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044483d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000044418d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043562f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355bf : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043554f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354df : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043546f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353ff : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043538f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043531f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352af : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447a0d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043479b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000043480b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000444674 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000443ff4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444037 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444027 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004440a8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444068 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444088 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444008 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004441a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444149 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444169 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444189 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000434fba : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000435014 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000443fe1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044485e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000004441ae : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000435240 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351d0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435160 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004350f0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004447fe : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000044414e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435080 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044481e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000044416e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000435010 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044483e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000044418e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000435630 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355c0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435550 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354e0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435470 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435400 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435390 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435320 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352b0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447995 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000447a0e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043479c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000043480c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434f47 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ec7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e37 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434db7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d37 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434cb7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c37 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434bb7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b37 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ab7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a37 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004349b7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434927 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434897 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434807 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000444675 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000443ff5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444048 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444038 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444028 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004440a9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444069 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444089 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444009 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004441aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000044414a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000044416a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044418a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000434fbb : movq qword ptr [rdi], mm0 ; ret
0x0000000000435015 : movq qword ptr [rdi], mm1 ; ret
0x00000000004adb00 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add byte ptr [rsp + rsi*4 - 0xa], bl ; call qword ptr [rsi]
0x000000000045757c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446c95 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a7962 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004a8bbd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4a8c16 ; jmp 0x4a8b57
0x0000000000446c87 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004afee9 : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000047f87c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004a91f5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a8ab1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046bb07 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000482ce2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004aff95 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x000000000048ace4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000480dab : movsx eax, cl ; neg eax ; ret
0x0000000000480e50 : movsx eax, dl ; sub eax, ecx ; ret
0x0000000000424631 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432c1b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042d69b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048bf88 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000040219e : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048c889 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048af37 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048ad11 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048c4c1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000044d2ae : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044d237 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000047c01d : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046e826 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000047c945 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000046ee56 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000401f35 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000448fd3 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000046e6ba : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000447e57 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000447f11 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000048519d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000446927 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x00000000004468d4 : movsxd rax, ecx ; ret
0x0000000000446919 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042bfcd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000443da9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000447e7f : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000446967 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040d537 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045a0bf : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000494de9 : movsxd rdi, edx ; jmp rax
0x000000000042d76f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040d24e : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000449249 : movsxd rdx, eax ; jmp 0x448ff3
0x0000000000459bc0 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000004aca75 : movsxd rsi, esi ; jmp rdx
0x0000000000445d8c : movsxd rsi, esi ; ret 0x7520
0x0000000000446e4f : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000446ed6 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446ed7 : movups xmmword ptr [rbx], xmm0 ; ret
0x0000000000446e50 : movups xmmword ptr [rbx], xmm4 ; ret
0x0000000000446e4b : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000446e4a : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000446ed2 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446c32 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446db9 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000446d96 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446c2f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048ace5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000475741 : movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004882dc : movzx eax, al ; neg eax ; ret
0x0000000000484ba9 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e5a0 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000004152b0 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048df3e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004164b1 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041299e : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041853f : movzx eax, byte ptr [rax] ; ret
0x000000000046ba1a : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004259c8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042bd60 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042b8a0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004259e3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004164c0 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004129b0 : movzx eax, byte ptr [rdx] ; ret
0x00000000004152b1 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447ee0 : movzx eax, cl ; pop rbx ; ret
0x00000000004463ea : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4463e9 ; ret
0x000000000044649a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446499 ; ret
0x000000000042ce84 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000446d08 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004259e0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042bd63 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dad3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dabb ; ret
0x0000000000425ba1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042a018 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042bce8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000425a33 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000445db4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000445e14 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000445e04 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000445df4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000445de4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000445dd4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000445dc4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000434f60 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042cc37 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000445d9b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000435640 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042b8a3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042b8c9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000434ee0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004355d0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000473247 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000044d143 : mul dword ptr [rsi] ; add byte ptr [rbp - 0xcf98b40], al ; ret
0x0000000000449913 : neg eax ; jmp 0x4498dc
0x00000000004492d7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000041857f : neg eax ; ret
0x000000000049457c : nop ; adc edx, edi ; jmp qword ptr [rax]
0x0000000000434697 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044b0b7 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b0c8 ; call r12
0x000000000042c2ec : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b4725 : nop ; add byte ptr [rax], al ; call 0xffffffffe34b4438
0x000000000047597c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044e6df : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000487c7f : nop ; add rsp, 8 ; ret
0x000000000048558f : nop ; call rax
0x000000000044ee10 : nop ; call rsi
0x0000000000493e00 : nop ; cmp cl, bh ; call qword ptr [rax]
0x0000000000494a74 : nop ; cmp dl, bh ; jmp qword ptr [rax]
0x0000000000493e08 : nop ; cmp edi, ecx ; call qword ptr [rax]
0x000000000044bd8f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44bd88 ; ret
0x0000000000494e94 : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; jmp rax
0x00000000004942cc : nop ; in al, 0xf9 ; jmp qword ptr [rax]
0x000000000049424c : nop ; in eax, 0xf9 ; jmp qword ptr [rax]
0x000000000048261f : nop ; jmp rdx
0x0000000000494248 : nop ; jrcxz 0x49424b ; call qword ptr [rax + 0x20fff9e5]
0x00000000004942c8 : nop ; loop 0x4942cb ; call qword ptr [rax + 0x20fff9e4]
0x000000000042f26f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000418fc3 : nop ; mov dword ptr [rip + 0x2a2dca], eax ; ret
0x000000000042f44f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000048520f : nop ; mov eax, 0x27 ; syscall ; ret
0x0000000000474cff : nop ; mov eax, 0xc9 ; syscall ; ret
0x00000000004168df : nop ; mov eax, 0xffffffff ; ret
0x000000000047fc1f : nop ; mov eax, 1 ; pop rbx ; ret
0x000000000042f80f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044453f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000471cc9 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000418e43 : nop ; mov qword ptr [rip + 0x2a09fd], rax ; ret
0x0000000000418e33 : nop ; mov qword ptr [rip + 0x2a0a05], rax ; ret
0x0000000000418de3 : nop ; mov qword ptr [rip + 0x2a0a0d], rax ; ret
0x0000000000418dd3 : nop ; mov qword ptr [rip + 0x2a0a25], rax ; ret
0x000000000048d0ff : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048ae6f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e00f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x0000000000443fdf : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000046ee9f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46ee6e
0x000000000046ee9e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46ee6f
0x00000000004b50b0 : nop ; pop rcx ; std ; call qword ptr [rdx]
0x00000000004004cf : nop ; ret
0x00000000004a3934 : nop ; scasb al, byte ptr [rdi] ; cld ; jmp rax
0x0000000000493e10 : nop ; stc ; call qword ptr [rax]
0x0000000000493f41 : nop ; stc ; call qword ptr [rsi + 0x16fff990]
0x0000000000493f45 : nop ; stc ; call qword ptr [rsi]
0x0000000000493fc5 : nop ; stc ; jmp rax
0x00000000004180ff : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000494160 : nop ; test al, 0xf9 ; jmp rax
0x000000000049489c : nop ; xor al, 0xfa ; jmp qword ptr [rax]
0x0000000000493df0 : nop ; xor bh, cl ; call qword ptr [rax]
0x000000000041454f : nop ; xor eax, eax ; ret
0x000000000040ea58 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419a98 : nop dword ptr [rax + rax] ; call rax
0x00000000004857a8 : nop dword ptr [rax + rax] ; call rbx
0x0000000000443f1b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400a93 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000411558 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a5b : nop dword ptr [rax + rax] ; ret
0x00000000004462eb : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047475c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042324d : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x0000000000471dc5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000041a50c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ad5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000044850c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000419a8d : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000418211 : nop dword ptr [rax] ; ret
0x000000000041448d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x41445d
0x0000000000416a15 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004857a7 : nop dword ptr cs:[rax + rax] ; call rbx
0x000000000040ea57 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419a97 : nop word ptr [rax + rax] ; call rax
0x0000000000484b1a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000474542 : nop word ptr [rax + rax] ; ret
0x00000000004480ea : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000044cd39 : not byte ptr [rdx + 0xf480004] ; ret
0x000000000044b372 : or ah, byte ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000491922 : or ah, dh ; idiv edi ; call 0x40dc06
0x000000000042a197 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f1cf : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a1c5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475862 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041d9fc : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473b88 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046bb08 : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000468b75 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x00000000004259c6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041d9ca : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000004130a3 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000047f879 : or al, 0x37 ; jae 0x47f827 ; xor eax, eax ; ret
0x0000000000424340 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000046eea2 : or al, 0x40 ; jmp 0x46ee6b
0x000000000046eea1 : or al, 0x40 ; jmp 0x46ee6c
0x000000000044998d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000004163b3 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x412647
0x0000000000401131 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000484f63 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004b1568 : or al, 0x5f ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x000000000046e953 : or al, 0x7e ; ret 0x8944
0x00000000004af744 : or al, 0x82 ; stc ; call qword ptr [rdx]
0x0000000000458473 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x458487 ; ret
0x000000000045de3b : or al, 0x83 ; ret
0x0000000000447e81 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x00000000004630ca : or al, 0x89 ; ret 0xc689
0x0000000000447f0b : or al, 0x89 ; ret 0xe283
0x0000000000424633 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043aaf4 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432c1d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042d69d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000475938 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042bfcf : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000443dab : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042d6a1 : or al, 0xb ; jmp r9
0x0000000000443daf : or al, 0xb ; jmp rcx
0x00000000004563af : or al, 0xe9 ; ret
0x0000000000471a6c : or al, 0xeb ; ret 0x5590
0x0000000000435163 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000046682d : or al, 0xf6 ; ret 0xf01
0x0000000000494371 : or al, 0xfa ; call rax
0x0000000000494d35 : or al, 0xfa ; jmp qword ptr [rax + 0x20fffa0d]
0x0000000000422af1 : or al, 9 ; ret 0xbae9
0x00000000004ac0d9 : or al, byte ptr [rax] ; add ah, dh ; sub al, 0xf6 ; call qword ptr [rdx]
0x00000000004ac0c5 : or al, byte ptr [rax] ; add al, bh ; sub al, 0xf6 ; call qword ptr [rax]
0x0000000000473b3b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042a377 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dd61 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3a5 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048ce2a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004075fd : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040aa8c : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044c346 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b3d6b : or al, byte ptr [rcx] ; ret
0x000000000048f8fb : or al, ch ; jmp rdx
0x000000000040a887 : or al, ch ; ret
0x000000000040ad68 : or al, ch ; ret 0xffb2
0x000000000041cd57 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x000000000047fa53 : or bh, al ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000424220 : or bh, dh ; ret 0
0x0000000000494cf1 : or bh, dl ; jmp qword ptr [rax + 0x20fffa0b]
0x0000000000494d31 : or bh, dl ; jmp qword ptr [rax]
0x000000000041a50a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000405dad : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048e81d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000435323 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a127 : or bl, dh ; ret
0x00000000004b1238 : or bl, dh ; std ; jmp qword ptr [rdi]
0x000000000044fa86 : or byte ptr [r15], 0x8e ; ret 1
0x0000000000411351 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e0fd : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000450dd3 : or byte ptr [r8 + 0xf], cl ; ret
0x00000000004845af : or byte ptr [r8 + 2], r15b ; ret
0x000000000041141f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047f3ba : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000442258 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f8a5 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000478c32 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004845f4 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048c887 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000442317 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000411352 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000412b95 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e0fe : or byte ptr [rax + 0x39], cl ; ret
0x0000000000452688 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000418539 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004acede : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000450dd4 : or byte ptr [rax + 0xf], cl ; ret
0x00000000004195e6 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000048673c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047d6a1 : or byte ptr [rax + 1], cl ; ret
0x00000000004845b0 : or byte ptr [rax + 2], bh ; ret
0x0000000000411420 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000418e83 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044a594 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044af72 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe1440cdb
0x000000000044225d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f3bb : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a1ae : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041645b : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000442259 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f760 : or byte ptr [rax - 0x77], cl ; ret
0x00000000004893aa : or byte ptr [rax - 0x77], r9b ; ret
0x000000000047f2e8 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000478c33 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004895fe : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047f8a6 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000489657 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000041eb10 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045b320 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044a942 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b4e7 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047db52 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044c200 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000411a36 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004724de : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041a1ab : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042a647 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043df01 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a585 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004171d7 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000450d7a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000447f55 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044e5f1 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f3e6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f3b9 ; ret
0x00000000004203bc : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000040d24c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000043f5be : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d07f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x000000000048595b : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000482a31 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x0000000000485676 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048d0ee : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x00000000004826b3 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x00000000004b43dc : or byte ptr [rbp - 0x15900000], 0xfc ; jmp qword ptr [rcx]
0x000000000041cb82 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000492093 : or byte ptr [rbp - 0x77], cl ; ret
0x0000000000449fac : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449ac3 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000413466 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401b95 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044adfe : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041dac7 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041dac6 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x000000000046eea0 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46ee6d
0x0000000000462da7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040fdb9 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000047b559 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000048439b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004845f5 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000048148d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000479082 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479054 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000468269 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000410477 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000048a2d5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000046f903 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000048c888 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046e939 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048819b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000483390 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000489a5b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000410fc1 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004843a2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044ae6b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000442318 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000420658 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040d42a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044a606 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041cb86 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000041453a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a947e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047bad0 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047ba20 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004546a7 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044fa87 : or byte ptr [rdi], 0x8e ; ret 1
0x000000000040ee92 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000475740 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000004882db : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000042dc6b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041ac56 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000482ff3 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x00000000004011f1 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000494cf0 : or byte ptr [rdx], 0xfa ; jmp qword ptr [rax + 0x20fffa0b]
0x0000000000418f9a : or byte ptr [rdx], ch ; add bl, dh ; ret
0x0000000000494598 : or byte ptr [rsi], 0xfa ; call qword ptr [rax]
0x0000000000418e26 : or ch, byte ptr [rdx] ; add bl, dh ; ret
0x0000000000493dad : or cl, bh ; jmp qword ptr [rax]
0x0000000000457831 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004108b4 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000410417 : or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004237c2 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045d22e : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000486bad : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047b4f5 : or cl, ch ; ret
0x0000000000435243 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048f425 : or dh, bl ; ret
0x000000000044cbfc : or dh, dh ; ret 0x8902
0x000000000041a7a7 : or dh, dh ; ret 0xf02
0x000000000049434c : or dl, 0xf9 ; call rax
0x00000000004946fd : or dl, bh ; call rsp
0x00000000004945c1 : or dl, bh ; jmp qword ptr [rax + 0x20fffa07]
0x00000000004945bd : or dl, bh ; jmp qword ptr [rax]
0x00000000004203ba : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044d23a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040d9fb : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x000000000045a42e : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000440ade : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000047272b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004889e0 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042a557 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f46f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a495 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004119f7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000045e745 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000401f33 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000042d406 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412bc0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000048b883 : or dword ptr [rbx], esp ; add byte ptr [rax], cl ; ret
0x000000000046f042 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x00000000004241c7 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000418f0b : or dword ptr [rdx], ebp ; add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000047fc16 : or dword ptr [rip + 0x23a5cb], 1 ; pop rbx ; ret
0x00000000004b3d68 : or eax, 0x10a0303 ; ret
0x00000000004b3dc0 : or eax, 0x1370303 ; ret
0x0000000000444801 : or eax, 0x1c478d48 ; ret
0x00000000004b3d58 : or eax, 0x34b0303 ; ret
0x00000000004b3d8c : or eax, 0x35b0303 ; ret
0x000000000046ee62 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046e6ca : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a53a : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004400f2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000042a0a7 : or eax, 0x83480000 ; ret 0x4910
0x000000000043da21 : or eax, 0x83480000 ; ret 0xe910
0x000000000042a0d5 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000490e82 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004743c2 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x0000000000494521 : or eax, 0xd44fffa ; cli ; call rsp
0x000000000049ed39 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x0000000000494cf9 : or eax, 0xea0fffa ; cli ; jmp qword ptr [rax]
0x0000000000453f65 : or eax, 0xea810000 ; ret 0
0x00000000004a8ab3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000004350f3 : or eax, 0xf7f0ff3 ; ret
0x00000000004492dd : or eax, 0xffffffff ; ret
0x000000000042bd29 : or eax, 1 ; ret
0x000000000042a287 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dbc1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a2b5 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004acee0 : or eax, dword ptr [rdx] ; jae 0x4acef2 ; ret
0x00000000004b509a : or eax, dword ptr [rdx] ; ret 0xe0a
0x00000000004180f4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000410b88 : or ebp, eax ; ret 0xf2
0x000000000044f427 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call rsp
0x00000000004126dd : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004352b3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000414566 : or ebx, esi ; ret
0x000000000042303f : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000413457 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000464926 : or ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc27f9136
0x0000000000423f7c : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000490eff : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000482893 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x0000000000471a66 : or edi, edx ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000494cf5 : or edi, edx ; jmp qword ptr [rax]
0x00000000004b2c41 : or edi, esp ; jmp qword ptr [rax]
0x0000000000494775 : or edx, edi ; call rax
0x00000000004945b9 : or edx, edi ; jmp qword ptr [rax + 0x20fffa08]
0x00000000004946f5 : or edx, edi ; jmp rsp
0x00000000004351d3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045acb4 : or esi, ebx ; ret
0x0000000000412bc1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004ac6d2 : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x0000000000435322 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004352b2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435242 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004351d2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b5099 : or r8d, dword ptr [r10] ; ret 0xe0a
0x0000000000457830 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b3dbf : or rax, 0x1370303 ; ret
0x00000000004b3d57 : or rax, 0x34b0303 ; ret
0x00000000004b3d8b : or rax, 0x35b0303 ; ret
0x000000000046ee61 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046e6c9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004492dc : or rax, 0xffffffffffffffff ; ret
0x00000000004acedf : or rax, qword ptr [rdx] ; jae 0x4acef3 ; ret
0x00000000004ac6d1 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x00000000004244f6 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004243b6 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000048db25 : out 0x41, eax ; call rdi
0x00000000004866e9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000470ccd : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000422ba8 : out 0x48, eax ; sub eax, 0x10 ; ret
0x000000000048998d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x00000000004018cd : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489a61 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000489b3d : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x0000000000489947 : out 0x89, al ; out dx, eax ; call rax
0x000000000041f582 : out 0xc7, al ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a7960 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000418d50 : out 0xe8, eax ; fidiv dword ptr [rsi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000490e66 : out 0xef, al ; clc ; push rbx ; ret
0x0000000000434aba : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b3a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a9688 : out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000461942 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000047607e : out 2, al ; add byte ptr [rax + 9], cl ; ret 0x850f
0x0000000000456c0e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a8ab7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000004241de : out dx, al ; jns 0x4241e8 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000042f2ba : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004232b2 : out dx, al ; mov rdi, rax ; call rcx
0x0000000000434eca : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f31e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000421c63 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000041fc76 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004176b9 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417711 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004686f1 : out dx, eax ; call 0x4004b0
0x00000000004217d4 : out dx, eax ; call 0x41da13
0x000000000048998f : out dx, eax ; call qword ptr [r14]
0x00000000004018cf : out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489a63 : out dx, eax ; call qword ptr [rax]
0x0000000000489b3f : out dx, eax ; call qword ptr [rcx]
0x0000000000457efd : out dx, eax ; call r12
0x000000000048eb0d : out dx, eax ; call r14
0x0000000000422637 : out dx, eax ; call rax
0x0000000000474022 : out dx, eax ; call rbx
0x0000000000490e67 : out dx, eax ; clc ; push rbx ; ret
0x000000000042f0ea : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f1e6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f132 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000474173 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040df8a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000434f4a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f41d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c053 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c068 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c07d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446533 : out dx, eax ; ret 0xf66
0x000000000042d56c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d555 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d53e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042bffa : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048aa87 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043d32e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044495e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a9263 : outsb dx, byte ptr [rsi] ; ja 0x4a91ec ; ret 0x48f
0x000000000047d6a0 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x00000000004a6fa4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000418f32 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000485267 : outsd dx, dword ptr [rsi] ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000494e01 : outsd dx, dword ptr [rsi] ; cli ; jmp rax
0x0000000000424788 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000438cae : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042d36d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042d40d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000047324a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d372 : outsd dx, dword ptr [rsi] ; ret
0x000000000046316d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000041a0fa : outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000465eed : outsd dx, dword ptr [rsi] ; ret 0x4ce8
0x00000000004a7966 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000419b32 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042fa27 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000463196 : outsd dx, dword ptr [rsi] ; ret 0xa3e8
0x000000000042d412 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000465ec9 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x000000000047329a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000463134 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004102ad : outsd dx, dword ptr [rsi] ; test eax, 0x8948002a ; ret 0x8948
0x00000000004a7965 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000429f62 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000474754 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047473f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000429f61 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a8d65 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a8d66 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000447bf6 : pextrw edi, mm0, 0x77 ; ret
0x000000000042b122 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42b189 ; xor eax, eax ; ret
0x000000000044070f : pmovmskb edx, mm4 ; test edx, edx ; je 0x440723 ; bsf eax, edx ; ret
0x00000000004b464d : pop qword ptr [rax] ; add byte ptr [rax + 2], dl ; std ; jmp qword ptr [rdx]
0x000000000044bb15 : pop r10 ; ret
0x00000000004a91ef : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044a441 : pop r12 ; jmp rax
0x000000000044a426 : pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fc79 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042219c : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000420e46 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040259e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040067f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f8e9 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041017e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da89 : pop r12 ; pop r13 ; ret
0x0000000000405d94 : pop r12 ; ret
0x000000000041fc7b : pop r13 ; pop r14 ; jmp rax
0x000000000042219e : pop r13 ; pop r14 ; jmp rcx
0x0000000000420e48 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025a0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400681 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f8eb : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410180 : pop r13 ; pop r14 ; ret
0x000000000040da8b : pop r13 ; ret
0x000000000041fc7d : pop r14 ; jmp rax
0x00000000004221a0 : pop r14 ; jmp rcx
0x0000000000420e4a : pop r14 ; pop r15 ; jmp rax
0x00000000004025a2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400683 : pop r14 ; pop r15 ; ret
0x000000000040f8ed : pop r14 ; pop rbp ; ret
0x0000000000410182 : pop r14 ; ret
0x0000000000420e4c : pop r15 ; jmp rax
0x00000000004025a4 : pop r15 ; pop rbp ; ret
0x0000000000400685 : pop r15 ; ret
0x000000000041e434 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000045da3d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004a4c44 : pop rax ; je 0x4a4c47 ; call qword ptr [rax]
0x00000000004a4c5c : pop rax ; je 0x4a4c5f ; jmp qword ptr [rbx]
0x00000000004a4c58 : pop rax ; je 0x4a4c5f ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x000000000045f142 : pop rax ; jmp 0x45f149
0x0000000000481a5c : pop rax ; jmp qword ptr [rax]
0x0000000000492092 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000481b16 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000044955c : pop rax ; ret
0x00000000004b0958 : pop rax ; sti ; std ; jmp qword ptr [rdx]
0x00000000004af388 : pop rax ; xchg eax, ebp ; clc ; call qword ptr [rax]
0x0000000000456249 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x4562c1 ; mov rdx, rax ; jmp 0x456218
0x0000000000460d70 : pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000416460 : pop rbp ; jmp rax
0x0000000000486b03 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400a8b : pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x00000000004889df : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a440 : pop rbp ; pop r12 ; jmp rax
0x000000000044a425 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fc78 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042219b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000420e45 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040067e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041017d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da88 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405d93 : pop rbp ; pop r12 ; ret
0x000000000041fc7c : pop rbp ; pop r14 ; jmp rax
0x000000000042219f : pop rbp ; pop r14 ; jmp rcx
0x0000000000420e49 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004025a1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400682 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f8ec : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000410181 : pop rbp ; pop r14 ; ret
0x00000000004843a8 : pop rbp ; pop rbx ; ret
0x0000000000400a98 : pop rbp ; ret
0x0000000000493e65 : pop rbp ; stc ; inc eax ; pop rsi ; stc ; call rax
0x0000000000484ff1 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004b11f1 : pop rbx ; add byte ptr [rax], al ; jb 0x4b11f7 ; call qword ptr [rdx]
0x00000000004b1235 : pop rbx ; add byte ptr [rax], al ; or bl, dh ; std ; jmp qword ptr [rdi]
0x00000000004a6538 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000460b1a : pop rbx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000447f46 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a6536 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004163a4 : pop rbx ; jmp rax
0x000000000046d508 : pop rbx ; loopne 0x46d512 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000047fc37 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000447f91 : pop rbx ; mov eax, eax ; ret
0x0000000000465c8d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000416ee9 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000041a903 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000040f8e8 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000045788c : pop rbx ; pop r12 ; ret
0x000000000048ab09 : pop rbx ; pop r14 ; ret
0x000000000041645f : pop rbx ; pop rbp ; jmp rax
0x0000000000470cd1 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044a424 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041fc77 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042219a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004101b4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da87 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405d92 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401b96 : pop rbx ; pop rbp ; ret
0x0000000000400d88 : pop rbx ; ret
0x00000000004a9820 : pop rbx ; ret 0x6f9
0x000000000044de10 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000405dae : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000416eb2 : pop rbx ; xor edx, edx ; jmp rax
0x0000000000496390 : pop rcx ; jae 0x496395 ; dec dword ptr [rax] ; je 0x496399 ; jmp rax
0x000000000041d623 : pop rcx ; ret 0x29
0x0000000000493e59 : pop rcx ; stc ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x00000000004b50b1 : pop rcx ; std ; call qword ptr [rdx]
0x000000000042dc68 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004b1569 : pop rdi ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x000000000043faad : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494de1 : pop rdi ; cli ; jmp rax
0x000000000042f689 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f499 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a8ade : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000420e4d : pop rdi ; jmp rax
0x00000000004a7aa1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044b112 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044a605 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000042f2b9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f0e9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f1e5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f131 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004025a5 : pop rdi ; pop rbp ; ret
0x0000000000400686 : pop rdi ; ret
0x000000000042a916 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004a86c1 : pop rdx ; je 0x4a868b ; ret 0xacfc
0x00000000004a9687 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044bb14 : pop rdx ; pop r10 ; ret
0x0000000000481b17 : pop rdx ; pop rbx ; ret
0x000000000044bb39 : pop rdx ; pop rsi ; ret
0x00000000004495b5 : pop rdx ; ret
0x0000000000493e5d : pop rdx ; stc ; jmp rax
0x00000000004a91f0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043f9ae : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420146 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000494e1d : pop rsi ; cli ; jmp rax
0x000000000041fc7e : pop rsi ; jmp rax
0x00000000004221a1 : pop rsi ; jmp rcx
0x000000000044b0e2 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x0000000000420e4b : pop rsi ; pop r15 ; jmp rax
0x00000000004025a3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400684 : pop rsi ; pop r15 ; ret
0x000000000040f8ee : pop rsi ; pop rbp ; ret
0x0000000000410183 : pop rsi ; ret
0x0000000000493e69 : pop rsi ; stc ; call rax
0x000000000043d540 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ac14 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004b1271 : pop rsp ; add byte ptr [rax], al ; jl 0x4b12ee ; cli ; jmp rax
0x000000000043e240 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041c73b : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000460e7b : pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000044a442 : pop rsp ; jmp rax
0x00000000004adb04 : pop rsp ; mov ah, 0xf6 ; call qword ptr [rsi]
0x000000000044a427 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000041fc7a : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x000000000042219d : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x0000000000420e47 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040259f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400680 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f8ea : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041017f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040da8a : pop rsp ; pop r13 ; ret
0x0000000000401d43 : pop rsp ; ret
0x0000000000477e02 : pop rsp ; ret 2
0x000000000040f894 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046a7fd : popfq ; call 0xffffffffc3caa807
0x000000000046a53f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000048c64e : popfq ; ret 0xf45
0x0000000000435012 : psllq mm1, qword ptr [r15] ; jg 0x43502d ; ret
0x0000000000437b32 : psllq mm1, qword ptr [r15] ; jg 0x437b4d ; ret
0x0000000000435013 : psllq mm1, qword ptr [rdi] ; jg 0x43502c ; ret
0x0000000000437b33 : psllq mm1, qword ptr [rdi] ; jg 0x437b4c ; ret
0x0000000000444026 : psllq mm1, qword ptr [rdi] ; jg 0x44403a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444025 : psllq mm1, qword ptr [rdi] ; jg 0x44403b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444087 : psllq mm1, qword ptr [rdi] ; jg 0x44409c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004b1ee1 : push -0x6d540000 ; sti ; jmp qword ptr [rax]
0x000000000045df32 : push -0x7c000003 ; ret
0x00000000004ac0c4 : push -0x7fffff6 ; sub al, 0xf6 ; call qword ptr [rax]
0x0000000000444944 : push -0x9ffffff ; ret 0x7501
0x0000000000495dc1 : push -5 ; call qword ptr [rax]
0x0000000000493e95 : push -7 ; call qword ptr [rax]
0x000000000041199d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004883d4 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000479a05 : push 0x48b4901 ; and al, 0x83 ; ret
0x000000000045832c : push 0x4cffffff ; mov edi, esi ; call rdx
0x0000000000493e8d : push 0x6930fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a9262 : push 0x6e ; ja 0x4a91ed ; ret 0x48f
0x000000000041711a : push 0x75c08548 ; ret
0x0000000000494aab : push qword ptr [rax + 0x32] ; cli ; call qword ptr [rax]
0x0000000000494583 : push qword ptr [rax + 0x40fffa10] ; adc dl, bh ; call rax
0x00000000004948a3 : push qword ptr [rax + 0x40fffa33] ; xor edi, edx ; call rax
0x0000000000493e5b : push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x00000000004945eb : push qword ptr [rax + 2] ; cli ; jmp rsi
0x00000000004a391b : push qword ptr [rax - 0x1f000352] ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x0000000000494357 : push qword ptr [rax - 0x32] ; stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x000000000049404f : push qword ptr [rax - 0x50] ; stc ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494137 : push qword ptr [rax - 0x65] ; stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x0000000000493da3 : push qword ptr [rax - 0xf0006e7] ; sbb bh, cl ; call rax
0x00000000004947a3 : push qword ptr [rax] ; add edi, edx ; jmp qword ptr [rax + 0x10fffa02]
0x0000000000493e8f : push qword ptr [rax] ; imul edi, ecx, 0xf96a20ff ; call qword ptr [rax]
0x000000000048dfed : push qword ptr [rax] ; jne 0x48e020 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048ee4d : push qword ptr [rax] ; jne 0x48ee80 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000494037 : push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x00000000004940d7 : push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000049401b : push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494053 : push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494127 : push qword ptr [rax] ; mov edx, 0xbc30fff9 ; stc ; jmp rax
0x000000000049412b : push qword ptr [rax] ; mov esp, 0x95e0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004945b7 : push qword ptr [rax] ; or edx, edi ; jmp qword ptr [rax + 0x20fffa08]
0x0000000000495dbf : push qword ptr [rax] ; push -5 ; call qword ptr [rax]
0x00000000004942f3 : push qword ptr [rax] ; ret 0xfff9
0x00000000004462c8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044a4d8 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a4b0 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b0e0 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b110 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042bcd9 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000471818 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000416f1d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000047183e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000049451f : push qword ptr [rbp + rcx + 0xd44fffa] ; cli ; call rsp
0x0000000000417386 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x000000000047f2eb : push qword ptr [rbp - 0x2e] ; ret
0x0000000000417750 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046114b : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45d3f9
0x00000000004492cc : push qword ptr [rbx + 1] ; ret
0x0000000000410b86 : push qword ptr [rbx + rcx - 0x18] ; ret 0xf2
0x0000000000493f13 : push qword ptr [rcx + 0x41fff992] ; xchg eax, ebx ; stc ; call rcx
0x000000000045e8b4 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000047a0ef : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x00000000004154ff : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000454ce3 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000449956 : push qword ptr [rdi + 0x3f] ; ret
0x0000000000449686 : push qword ptr [rdi + 0x57] ; ret
0x00000000004495b3 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045acb2 : push qword ptr [rdi + 0xb] ; ret
0x000000000044935a : push qword ptr [rdi + 3] ; ret
0x0000000000449649 : push qword ptr [rdi + 4] ; ret
0x00000000004493a8 : push qword ptr [rdi + 5] ; ret
0x000000000047550e : push qword ptr [rdi + 7] ; ret
0x000000000044a125 : push qword ptr [rdi + 8] ; ret
0x000000000044971c : push qword ptr [rdi + 9] ; ret
0x00000000004753c4 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000493f5b : push qword ptr [rsi + 0x46fff993] ; xchg eax, esp ; stc ; call rsi
0x00000000004943b3 : push qword ptr [rsi + 0x46fffa12] ; adc bh, dl ; call rsi
0x00000000004aa703 : push qword ptr [rsi - 0x591c0003] ; std ; jmp rbx
0x0000000000493f67 : push qword ptr [rsi - 0x6b] ; stc ; call qword ptr [rsi]
0x0000000000494a17 : push qword ptr [rsp + rsi + 0x3444fffa] ; cli ; call rsp
0x0000000000416352 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000047091a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000418101 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041c18d : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004b4650 : push rax ; add bh, ch ; jmp qword ptr [rdx]
0x0000000000416353 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042367c : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b074d : push rax ; add byte ptr [rax], al ; xlatb ; std ; hlt ; jmp qword ptr [rbx]
0x0000000000400ed0 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000450ecf : push rax ; call 0x44d1a3
0x0000000000461151 : push rax ; call 0x45d3f3
0x000000000044e5a8 : push rax ; call rbx
0x0000000000494cbc : push rax ; cli ; call rax
0x000000000049488c : push rax ; cli ; jmp rax
0x0000000000494f33 : push rax ; cmc ; cli ; inc dword ptr [rax] ; idiv dl ; call qword ptr [rax]
0x00000000004702a4 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x00000000004af3ac : push rax ; cmp eax, 0xb7700000 ; clc ; call qword ptr [rax]
0x0000000000494230 : push rax ; fdivr st(1) ; call qword ptr [rax]
0x00000000004b05d0 : push rax ; fyl2xp1 ; call qword ptr [rax]
0x000000000049426c : push rax ; in eax, 0xf9 ; jmp rax
0x0000000000493e9f : push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x0000000000494f0b : push rax ; int1 ; cli ; call qword ptr [rax]
0x00000000004a4c68 : push rax ; jbe 0x4a4c6b ; jmp qword ptr [rbx]
0x00000000004a4cc4 : push rax ; je 0x4a4cc7 ; jmp qword ptr [rbx]
0x0000000000449ffc : push rax ; jo 0x44a002 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000471e69 : push rax ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004adaf0 : push rax ; mov ah, 0xf6 ; call qword ptr [rsi]
0x0000000000494018 : push rax ; mov ah, 0xf9 ; push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x000000000049403f : push rax ; mov bh, 0xf9 ; jmp rax
0x000000000049405b : push rax ; mov ch, 0xf9 ; call rax
0x00000000004940d4 : push rax ; mov cl, 0xf9 ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000494034 : push rax ; mov dl, 0xf9 ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x00000000004507e1 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000418e82 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041a1aa : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044adfd : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041cb85 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044cbfb : push rax ; or dh, dh ; ret 0x8902
0x000000000041d8c2 : push rax ; or dh, dh ; ret 0xf02
0x0000000000494774 : push rax ; or edx, edi ; call rax
0x0000000000493e64 : push rax ; pop rbp ; stc ; inc eax ; pop rsi ; stc ; call rax
0x00000000004822ce : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000488485 : push rax ; pop rbx ; ret
0x00000000004507e3 : push rax ; push rsp ; ret
0x0000000000494337 : push rax ; ret
0x0000000000493da7 : push rax ; sbb bh, cl ; call rax
0x00000000004180f6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471959 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004940f0 : push rax ; scasd eax, dword ptr [rdi] ; stc ; call qword ptr [rax]
0x0000000000493e41 : push rax ; stc ; call rax
0x0000000000494ccc : push rax ; sub al, 0xfa ; call rax
0x0000000000494cdc : push rax ; sub bh, dl ; call rax
0x0000000000494cd4 : push rax ; sub edi, edx ; call rax
0x00000000004b5620 : push rax ; test ebp, edi ; call qword ptr [rbx]
0x0000000000494a8b : push rax ; xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x0000000000494aa4 : push rax ; xor edi, edx ; jmp rax
0x0000000000489f0a : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048c9b2 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000047fa58 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004103ed : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000046c4c7 : push rbp ; lodsd eax, dword ptr [rsi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048148c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004b59de : push rbp ; ret
0x0000000000410726 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040101f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047f8cf : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000484ba7 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412b98 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x00000000004474b5 : push rbx ; jb 0x4474c5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000471852 : push rbx ; je 0x4718b6 ; pop rbp ; pop r12 ; ret
0x00000000004718de : push rbx ; je 0x471942 ; pop rbp ; pop r12 ; ret
0x0000000000412b94 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000418f99 : push rbx ; or byte ptr [rdx], ch ; add bl, dh ; ret
0x000000000044b00f : push rbx ; ret
0x00000000004a86bc : push rbx ; xchg eax, edx ; jae 0x4a869b ; push rsi ; pop rdx ; je 0x4a8690 ; ret 0xacfc
0x000000000041e7a2 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041aadb : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041ae57 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x000000000044b4ab : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a7945 : push rcx ; call qword ptr [rsi]
0x000000000045e3a6 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000043846d : push rcx ; jl 0x4384be ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004385d4 : push rcx ; jl 0x438625 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000479081 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479053 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000460dcb : push rcx ; pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004195ed : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000044456a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000435179 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b0d6d : push rdi ; add byte ptr [rax], al ; rcr byte ptr [rsi], 1 ; cli ; call qword ptr [rdi]
0x0000000000477fc4 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044461c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045da7f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000042ef78 : push rdi ; clc ; ret
0x000000000042f0f0 : push rdi ; cld ; ret
0x000000000042fc17 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434a59 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046fad5 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000004349d9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043482a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000416264 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004348ba : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000048439a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048819a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004843a1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000041a7a6 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000444800 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042d36e : push rdi ; ret
0x000000000042d40e : push rdi ; ret 0xff3
0x0000000000418f10 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045da83 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000042fe17 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f63a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fa17 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000040382c : push rdi ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047324b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b128 : push rdi ; xor eax, eax ; ret
0x0000000000494440 : push rdx ; adc edx, edi ; jmp rdx
0x00000000004b0955 : push rdx ; add byte ptr [rax], al ; pop rax ; sti ; std ; jmp qword ptr [rdx]
0x0000000000487642 : push rdx ; and eax, dword ptr [rax] ; jne 0x487674 ; ret
0x0000000000494938 : push rdx ; cmp dl, bh ; jmp rdx
0x000000000042456a : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004507dd : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042c054 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446b59 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x446bb0 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000435411 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435481 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000443fb5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004353a1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000443f53 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042c069 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f0a2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f811 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f445 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f625 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f805 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f265 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a9260 : push rsi ; cli ; push 0x6e ; ja 0x4a91ef ; ret 0x48f
0x0000000000445e06 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000445df6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000445dc6 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004a86c0 : push rsi ; pop rdx ; je 0x4a868c ; ret 0xacfc
0x000000000044f7c6 : push rsi ; ret
0x0000000000468fc1 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000045de93 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445dd6 : push rsi ; sub eax, edx ; ret
0x000000000042c07e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494508 : push rsp ; adc dl, bh ; jmp rsp
0x000000000049471c : push rsp ; add al, 0xfa ; call rsp
0x00000000004ab124 : push rsp ; add al, 0xfe ; jmp rsp
0x00000000004b0a8d : push rsp ; add byte ptr [rax], al ; adc dh, bh ; stc ; call qword ptr [rax]
0x00000000004b0b11 : push rsp ; add byte ptr [rax], al ; sub al, 2 ; cli ; jmp qword ptr [rdx]
0x00000000004824fa : push rsp ; and al, 0x10 ; call rdx
0x000000000041c7f8 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041cd55 : push rsp ; and al, 8 ; call 0x418ff5
0x0000000000495557 : push rsp ; cmp al, 0xfb ; call rsi
0x00000000004946fc : push rsp ; or dl, bh ; call rsp
0x0000000000460ec8 : push rsp ; pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004507e4 : push rsp ; ret
0x0000000000488f7c : push rsp ; ret 0x4808
0x0000000000400ee8 : push rsp ; ret 4
0x0000000000493e4d : push rsp ; stc ; jmp qword ptr [rax]
0x00000000004af39c : push rsp ; xchg eax, ebp ; clc ; jmp qword ptr [rsi]
0x00000000004abafc : push rsp ; xchg eax, ebp ; cmc ; call rsp
0x0000000000476248 : push rsp ; xor edi, ebp ; dec dword ptr [rax + 0x39] ; ret
0x000000000043d200 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004abaf8 : pushfq ; add al, 0 ; add byte ptr [rbp + rdx*4 - 0xb], dl ; call rsp
0x000000000046222e : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044b087 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b098 ; call r12
0x0000000000451e8a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000479bff : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041698b : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000476845 : pushfq ; clc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004aff94 : pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x000000000043df00 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a0d4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000048c687 : pushfq ; ret 0xf45
0x000000000049413d : pushfq ; stc ; call qword ptr [rax]
0x00000000004afdb9 : pushfq ; stc ; call qword ptr [rbx]
0x0000000000494170 : rcl byte ptr [rdi - 0x656f0007], 0xf9 ; jmp rax
0x000000000042367b : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004a86bf : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a868d ; ret 0xacfc
0x00000000004a86bb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a8691 ; ret 0xacfc
0x0000000000473033 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000405db0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000465c8f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004843a7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000044f7d2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041453c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ec76 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048d2b8 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000046826b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000410022 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a8add : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004b561c : rcr byte ptr [rdi - 0x7ab00000], 0xfd ; call qword ptr [rbx]
0x00000000004b0d70 : rcr byte ptr [rsi], 1 ; cli ; call qword ptr [rdi]
0x0000000000482659 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000446c94 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000446c86 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004479ba : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041ea81 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040058b : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400596 ; ret
0x0000000000400416 : ret
0x00000000004006b7 : ret 0
0x000000000049f140 : ret 0x10
0x000000000047b4ea : ret 0x101
0x000000000048437c : ret 0x114d
0x0000000000457834 : ret 0x1176
0x000000000047fa5c : ret 0x1272
0x000000000047c5f3 : ret 0x13e9
0x000000000048ab21 : ret 0x145
0x0000000000483826 : ret 0x1474
0x0000000000479088 : ret 0x1475
0x0000000000475821 : ret 0x1477
0x0000000000445d68 : ret 0x148
0x00000000004047a4 : ret 0x149
0x000000000043882c : ret 0x14d
0x000000000040ac8a : ret 0x151
0x000000000040a98a : ret 0x154
0x000000000040a38a : ret 0x15a
0x000000000040a28a : ret 0x15b
0x000000000040a08a : ret 0x15d
0x000000000046bf11 : ret 0x1674
0x00000000004491ce : ret 0x16e9
0x0000000000426f5a : ret 0x17
0x000000000042b606 : ret 0x1776
0x000000000040aa92 : ret 0x18
0x0000000000438769 : ret 0x180f
0x000000000042b195 : ret 0x1876
0x0000000000406c8a : ret 0x191
0x0000000000406b8a : ret 0x192
0x000000000040698a : ret 0x194
0x000000000045782b : ret 0x1a72
0x00000000004a903a : ret 0x1ad4
0x0000000000407c52 : ret 0x1b
0x00000000004a77cd : ret 0x1b49
0x000000000048ebef : ret 0x1be8
0x000000000042442a : ret 0x1c6
0x000000000045c9a9 : ret 0x1ce9
0x00000000004a0e10 : ret 0x1d4
0x00000000004a15a8 : ret 0x1d5
0x0000000000400be1 : ret 0x1d89
0x0000000000480c85 : ret 0x1de8
0x000000000040eb32 : ret 0x1f0f
0x000000000041e7a6 : ret 0x1f77
0x0000000000459c1d : ret 0x1fe9
0x000000000045a877 : ret 0x200
0x0000000000477c0b : ret 0x2041
0x0000000000449c8c : ret 0x2044
0x0000000000461947 : ret 0x20be
0x000000000048aa8b : ret 0x2148
0x000000000041360d : ret 0x214c
0x0000000000412b9c : ret 0x2175
0x00000000004906ac : ret 0x22
0x000000000047e7f8 : ret 0x2275
0x0000000000440ad8 : ret 0x2288
0x0000000000491db2 : ret 0x229f
0x000000000042453a : ret 0x22a
0x00000000004907b2 : ret 0x22a2
0x00000000004875ba : ret 0x232b
0x000000000042d572 : ret 0x2373
0x0000000000481526 : ret 0x238c
0x000000000049fe18 : ret 0x24
0x0000000000485d07 : ret 0x24a
0x000000000045cba0 : ret 0x25
0x0000000000415d4d : ret 0x2501
0x0000000000467014 : ret 0x2504
0x0000000000423453 : ret 0x2575
0x000000000048c521 : ret 0x25e9
0x000000000044c2c8 : ret 0x26
0x0000000000473726 : ret 0x2774
0x000000000042ed46 : ret 0x280f
0x000000000042b185 : ret 0x2876
0x000000000045a70a : ret 0x28e8
0x000000000047e877 : ret 0x28f5
0x000000000041d5df : ret 0x29
0x000000000046316e : ret 0x290f
0x0000000000411347 : ret 0x2948
0x00000000004660aa : ret 0x2949
0x000000000040f040 : ret 0x294c
0x0000000000412e7d : ret 0x294d
0x0000000000415b4e : ret 0x2a61
0x000000000042132a : ret 0x2a7
0x000000000040e819 : ret 0x2aa7
0x000000000041072a : ret 0x2b48
0x0000000000403099 : ret 0x2b5e
0x0000000000422b7b : ret 0x2b74
0x000000000041eac2 : ret 0x2b75
0x0000000000447e32 : ret 0x2b77
0x00000000004009a5 : ret 0x2b8
0x000000000047885a : ret 0x2bc
0x000000000048c50f : ret 0x2be9
0x000000000041f30e : ret 0x2c75
0x000000000046eea5 : ret 0x2e66
0x000000000044befe : ret 0x2f75
0x0000000000467bd5 : ret 0x30be
0x00000000004a0308 : ret 0x33
0x0000000000452694 : ret 0x349
0x000000000048a8c0 : ret 0x3575
0x000000000047b1ba : ret 0x3774
0x000000000042b5e6 : ret 0x3776
0x00000000004a891a : ret 0x3827
0x000000000046fd2e : ret 0x3873
0x000000000042b175 : ret 0x3876
0x00000000004167fb : ret 0x389
0x00000000004a6fa6 : ret 0x38ae
0x000000000048e1d2 : ret 0x38e8
0x0000000000489498 : ret 0x3901
0x0000000000480f7d : ret 0x3934
0x000000000046d4e8 : ret 0x3941
0x0000000000410fd1 : ret 0x3948
0x0000000000411d8d : ret 0x3949
0x000000000041ebec : ret 0x394c
0x0000000000468b7d : ret 0x394d
0x00000000004463e2 : ret 0x3a01
0x000000000042d55b : ret 0x3a73
0x0000000000487fe3 : ret 0x3a83
0x000000000048100a : ret 0x3b34
0x0000000000446e01 : ret 0x3b48
0x000000000044996f : ret 0x3b8
0x0000000000413df9 : ret 0x3c75
0x0000000000480f3d : ret 0x3d
0x000000000047f1e8 : ret 0x3d73
0x00000000004203c1 : ret 0x3d83
0x000000000041c71f : ret 0x3de9
0x0000000000464e66 : ret 0x3e8
0x000000000047b01a : ret 0x3e80
0x000000000045a02b : ret 0x4002
0x000000000040d21d : ret 0x4074
0x0000000000473d11 : ret 0x408d
0x000000000044c14a : ret 0x4101
0x0000000000460218 : ret 0x4108
0x00000000004609c5 : ret 0x4110
0x0000000000480fb7 : ret 0x4134
0x0000000000452e47 : ret 0x415f
0x00000000004508ae : ret 0x41c3
0x0000000000425bda : ret 0x4266
0x00000000004709a3 : ret 0x4389
0x0000000000405d81 : ret 0x4401
0x000000000046842b : ret 0x4404
0x000000000041a0fb : ret 0x4466
0x000000000041da93 : ret 0x4473
0x00000000004a7aa4 : ret 0x474c
0x0000000000423bf6 : ret 0x4801
0x0000000000411f86 : ret 0x4803
0x0000000000422461 : ret 0x4804
0x0000000000440a63 : ret 0x4808
0x0000000000402f56 : ret 0x480a
0x000000000044e22e : ret 0x481
0x000000000041c138 : ret 0x4810
0x00000000004585dc : ret 0x4811
0x000000000045d917 : ret 0x481e
0x000000000045d937 : ret 0x4820
0x000000000044e0ce : ret 0x4830
0x0000000000425ae6 : ret 0x4840
0x0000000000440718 : ret 0x48c3
0x0000000000418b13 : ret 0x48e9
0x00000000004a9266 : ret 0x48f
0x0000000000405d1c : ret 0x4901
0x00000000004552eb : ret 0x4902
0x0000000000419152 : ret 0x4908
0x000000000042a0ac : ret 0x4910
0x000000000045a479 : ret 0x4c01
0x000000000041e43a : ret 0x4c07
0x000000000045d1d6 : ret 0x4c40
0x0000000000465eee : ret 0x4ce8
0x000000000041d0f6 : ret 0x4d01
0x000000000045bc98 : ret 0x4d10
0x000000000040265f : ret 0x4de8
0x00000000004a8cc7 : ret 0x4e27
0x000000000040168e : ret 0x4f76
0x000000000044ec4f : ret 0x5089
0x000000000044bd67 : ret 0x508b
0x000000000042d544 : ret 0x5173
0x0000000000449bc7 : ret 0x5488
0x00000000004a6f2c : ret 0x5508
0x0000000000471a6e : ret 0x5590
0x000000000042b5c6 : ret 0x5776
0x00000000004a91f8 : ret 0x5803
0x0000000000455351 : ret 0x5841
0x0000000000487955 : ret 0x5876
0x000000000040e673 : ret 0x589
0x00000000004a6c00 : ret 0x591c
0x00000000004a7967 : ret 0x5ae4
0x000000000042411e : ret 0x5ae9
0x0000000000455539 : ret 0x5be9
0x000000000040f37a : ret 0x5d5b
0x00000000004a9692 : ret 0x62c1
0x0000000000430eea : ret 0x632
0x000000000047c460 : ret 0x6349
0x0000000000485174 : ret 0x637f
0x00000000004585b3 : ret 0x6411
0x000000000045b191 : ret 0x6601
0x000000000042b101 : ret 0x6620
0x000000000042d62a : ret 0x669
0x00000000004235c8 : ret 0x66c3
0x000000000047fa6e : ret 0x674
0x000000000042b5b6 : ret 0x6776
0x00000000004a6c1f : ret 0x67b2
0x0000000000416da5 : ret 0x6874
0x000000000044927a : ret 0x6ae9
0x00000000004a9821 : ret 0x6f9
0x0000000000480cc0 : ret 0x72e8
0x0000000000416f21 : ret 0x7401
0x000000000042242a : ret 0x7402
0x000000000047c4ca : ret 0x7403
0x000000000044a2f1 : ret 0x7404
0x0000000000471842 : ret 0x7408
0x00000000004126ad : ret 0x7420
0x00000000004640c4 : ret 0x7450
0x0000000000480c7a : ret 0x7472
0x000000000041f1aa : ret 0x74a
0x0000000000444949 : ret 0x7501
0x0000000000444956 : ret 0x7502
0x0000000000444963 : ret 0x7504
0x000000000041e74d : ret 0x7508
0x000000000044491b : ret 0x7510
0x0000000000444928 : ret 0x7520
0x000000000042444e : ret 0x7540
0x0000000000475780 : ret 0x7577
0x00000000004239e5 : ret 0x75e8
0x000000000042c432 : ret 0x7677
0x0000000000482912 : ret 0x777
0x00000000004841d6 : ret 0x77f
0x0000000000402db1 : ret 0x7ce9
0x000000000042b0a1 : ret 0x7e20
0x000000000042b51c : ret 0x7e40
0x000000000042478c : ret 0x7f10
0x000000000046d700 : ret 0x7f3c
0x0000000000432d0e : ret 0x80
0x0000000000425969 : ret 0x8000
0x000000000048de92 : ret 0x8001
0x0000000000476bc7 : ret 0x8116
0x000000000045f9eb : ret 0x8148
0x000000000048e3e8 : ret 0x8166
0x000000000041ce20 : ret 0x820f
0x0000000000454b73 : ret 0x8301
0x000000000047d1e7 : ret 0x8303
0x000000000042c000 : ret 0x830f
0x000000000045d7e4 : ret 0x8341
0x0000000000423505 : ret 0x8348
0x0000000000446860 : ret 0x8349
0x000000000047f05f : ret 0x8364
0x0000000000471186 : ret 0x840
0x0000000000475b79 : ret 0x8401
0x0000000000411d95 : ret 0x840f
0x00000000004538c0 : ret 0x841
0x000000000048b13e : ret 0x8440
0x0000000000479c07 : ret 0x848b
0x000000000046eb49 : ret 0x8502
0x0000000000412f32 : ret 0x850f
0x0000000000457f13 : ret 0x8511
0x000000000044a622 : ret 0x8545
0x0000000000402b32 : ret 0x8548
0x000000000042347a : ret 0x854d
0x0000000000405bf1 : ret 0x8575
0x00000000004013c2 : ret 0x860f
0x000000000041aadf : ret 0x870f
0x00000000004a653e : ret 0x871e
0x000000000046d707 : ret 0x875
0x000000000042b1a5 : ret 0x876
0x0000000000402c5c : ret 0x8801
0x0000000000451bbd : ret 0x8804
0x000000000045b1e2 : ret 0x8841
0x000000000047e14e : ret 0x8844
0x000000000041c76f : ret 0x88d
0x000000000040244a : ret 0x8901
0x000000000044cbfe : ret 0x8902
0x000000000041222a : ret 0x8908
0x000000000045d7d6 : ret 0x8941
0x000000000041f3af : ret 0x8944
0x0000000000403e0f : ret 0x8948
0x000000000041345a : ret 0x8949
0x0000000000410a41 : ret 0x894c
0x000000000048338b : ret 0x894e
0x000000000046da99 : ret 0x89e8
0x000000000041738a : ret 0x8a
0x0000000000487b80 : ret 0x8b
0x00000000004504e9 : ret 0x8b01
0x000000000046f19a : ret 0x8b04
0x0000000000475913 : ret 0x8b05
0x000000000046f04b : ret 0x8b08
0x00000000004a8d6e : ret 0x8b36
0x000000000041d301 : ret 0x8b41
0x000000000046d7a3 : ret 0x8b44
0x0000000000413883 : ret 0x8b48
0x00000000004111f6 : ret 0x8b49
0x000000000048330e : ret 0x8b4a
0x000000000040d42d : ret 0x8b4c
0x000000000046492d : ret 0x8c0f
0x000000000045d231 : ret 0x8d04
0x000000000048c33f : ret 0x8d0f
0x000000000041c9fc : ret 0x8d44
0x00000000004195f1 : ret 0x8d48
0x0000000000467e0c : ret 0x8d49
0x00000000004826b7 : ret 0x8d4a
0x000000000041db14 : ret 0x8d4c
0x000000000045d7f2 : ret 0x8d89
0x000000000045268b : ret 0x8e0f
0x000000000045da9a : ret 0x8f0f
0x0000000000404cf4 : ret 0x907
0x000000000043fee5 : ret 0x90c3
0x0000000000423b99 : ret 0x90e9
0x0000000000477cce : ret 0x9174
0x0000000000400505 : ret 0x927
0x000000000048af7b : ret 0x9272
0x000000000041adfd : ret 0x948
0x00000000004732e8 : ret 0x94c
0x0000000000484ba2 : ret 0x950f
0x0000000000448c00 : ret 0x9572
0x00000000004a7b93 : ret 0x9576
0x00000000004603ef : ret 0x958b
0x00000000004223be : ret 0x976
0x000000000047cf93 : ret 0x9be9
0x0000000000487065 : ret 0x9eb
0x000000000049e940 : ret 0xa
0x00000000004ae81e : ret 0xa01
0x000000000044a318 : ret 0xa076
0x0000000000449144 : ret 0xa0e9
0x0000000000463197 : ret 0xa3e8
0x000000000048c3fe : ret 0xa4e9
0x00000000004a7883 : ret 0xa514
0x000000000048c4fd : ret 0xa5e9
0x000000000044b2bd : ret 0xabe
0x000000000040fce6 : ret 0xac20
0x00000000004a7d07 : ret 0xac65
0x00000000004a86c4 : ret 0xacfc
0x000000000045f22f : ret 0xae9
0x00000000004232ba : ret 0xaeeb
0x00000000004abe9f : ret 0xb00e
0x000000000041165d : ret 0xb074
0x0000000000465aca : ret 0xb1
0x000000000041ae5b : ret 0xb277
0x0000000000464efe : ret 0xb2c8
0x000000000045611b : ret 0xb2eb
0x0000000000449130 : ret 0xb4e9
0x000000000045d816 : ret 0xb589
0x0000000000489e75 : ret 0xb5e8
0x0000000000402c15 : ret 0xb60f
0x0000000000400ed4 : ret 0xb70f
0x0000000000469a75 : ret 0xb8
0x000000000046b81c : ret 0xb848
0x000000000048e252 : ret 0xb8e8
0x00000000004a7bce : ret 0xb9b9
0x000000000046d055 : ret 0xb9e9
0x000000000046ec24 : ret 0xba41
0x0000000000422af3 : ret 0xbae9
0x0000000000456252 : ret 0xbaeb
0x000000000048c9b6 : ret 0xbc80
0x000000000045d802 : ret 0xbd89
0x0000000000480dc2 : ret 0xbe0f
0x00000000004a7924 : ret 0xbe57
0x0000000000425829 : ret 0xc000
0x0000000000403146 : ret 0xc031
0x00000000004585fe : ret 0xc083
0x000000000042af60 : ret 0xc085
0x0000000000474349 : ret 0xc148
0x000000000041af79 : ret 0xc183
0x00000000004048d8 : ret 0xc189
0x0000000000449fb2 : ret 0xc221
0x000000000041f3eb : ret 0xc275
0x0000000000476726 : ret 0xc283
0x000000000042d414 : ret 0xc2b2
0x0000000000447e9e : ret 0xc35b
0x00000000004579ed : ret 0xc389
0x000000000041f3ed : ret 0xc3f3
0x00000000004a60c2 : ret 0xc4c3
0x00000000004a74d8 : ret 0xc4ff
0x000000000042b581 : ret 0xc540
0x0000000000457ab6 : ret 0xc589
0x00000000004630cc : ret 0xc689
0x000000000047f03d : ret 0xc74
0x0000000000440e20 : ret 0xc748
0x0000000000468cc8 : ret 0xc789
0x0000000000480e52 : ret 0xc829
0x0000000000461a93 : ret 0xc839
0x00000000004167ec : ret 0xc883
0x00000000004604c7 : ret 0xc985
0x000000000046f133 : ret 0xc9eb
0x0000000000440a31 : ret 0xc9ff
0x00000000004008c1 : ret 0xca21
0x000000000047820f : ret 0xcbe9
0x00000000004a6f6a : ret 0xcca7
0x00000000004a904d : ret 0xcd11
0x00000000004050e2 : ret 0xce80
0x000000000049ed40 : ret 0xd
0x0000000000420c6e : ret 0xd020
0x000000000040deb6 : ret 0xd021
0x000000000044b73f : ret 0xd029
0x0000000000463f4b : ret 0xd120
0x00000000004011f4 : ret 0xd284
0x00000000004575aa : ret 0xd285
0x000000000048e938 : ret 0xd2e8
0x0000000000479c96 : ret 0xd348
0x000000000044f5c7 : ret 0xd5e9
0x00000000004811ff : ret 0xd75
0x000000000045cbd6 : ret 0xd774
0x00000000004a8ae5 : ret 0xd8f
0x000000000040ffd3 : ret 0xdaf7
0x0000000000453d9a : ret 0xdb76
0x00000000004a8bc6 : ret 0xdcd9
0x000000000046486d : ret 0xdde8
0x00000000004a7b42 : ret 0xde5d
0x00000000004a68d1 : ret 0xde9e
0x00000000004256e9 : ret 0xe000
0x00000000004448d9 : ret 0xe074
0x000000000044d350 : ret 0xe083
0x00000000004b509c : ret 0xe0a
0x000000000048c5c1 : ret 0xe1e9
0x000000000044d182 : ret 0xe1eb
0x000000000040dac0 : ret 0xe281
0x0000000000400c15 : ret 0xe283
0x0000000000472ff8 : ret 0xe575
0x0000000000465550 : ret 0xe57f
0x0000000000465eca : ret 0xe583
0x0000000000447e92 : ret 0xe680
0x00000000004665af : ret 0xe683
0x00000000004a8ce6 : ret 0xe71f
0x000000000047905a : ret 0xe75
0x0000000000422ba6 : ret 0xe775
0x0000000000465b83 : ret 0xe7e9
0x000000000042bbe5 : ret 0xe883
0x0000000000478bd6 : ret 0xe8c0
0x0000000000402eea : ret 0xe901
0x0000000000402f2f : ret 0xe902
0x0000000000440ac6 : ret 0xe908
0x000000000043d066 : ret 0xe910
0x000000000045e05d : ret 0xe920
0x00000000004a7047 : ret 0xe970
0x0000000000447e2a : ret 0xea81
0x000000000040db8d : ret 0xeab8
0x0000000000400bfd : ret 0xeac1
0x000000000047d896 : ret 0xeb01
0x000000000046f063 : ret 0xeb04
0x000000000042a0da : ret 0xeb10
0x0000000000481022 : ret 0xeb34
0x00000000004a97f8 : ret 0xec2
0x000000000045cb60 : ret 0xed75
0x00000000004a949a : ret 0xef32
0x000000000048c188 : ret 0xef89
0x0000000000475d5f : ret 0xefeb
0x0000000000428ece : ret 0xf
0x00000000004255a9 : ret 0xf000
0x00000000004055c5 : ret 0xf01
0x000000000041a7a9 : ret 0xf02
0x000000000041cb89 : ret 0xf04
0x00000000004118e3 : ret 0xf08
0x000000000041aa79 : ret 0xf0f
0x000000000040e3be : ret 0xf10
0x0000000000410b8a : ret 0xf2
0x00000000004663cb : ret 0xf20
0x000000000041ccf3 : ret 0xf275
0x0000000000463486 : ret 0xf3f
0x0000000000466953 : ret 0xf40
0x000000000046fadd : ret 0xf41
0x000000000048c63c : ret 0xf45
0x0000000000423799 : ret 0xf475
0x0000000000451446 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000466939 : ret 0xf50
0x0000000000489606 : ret 0xf608
0x00000000004753d5 : ret 0xf631
0x0000000000425b66 : ret 0xf66
0x000000000047ace7 : ret 0xf675
0x000000000046fb9c : ret 0xf741
0x0000000000405812 : ret 0xf748
0x00000000004828fc : ret 0xf749
0x0000000000484772 : ret 0xf7bc
0x0000000000425469 : ret 0xf800
0x00000000004a67b0 : ret 0xf869
0x0000000000418523 : ret 0xf8b
0x0000000000463481 : ret 0xf8c1
0x0000000000440346 : ret 0xf8c5
0x00000000004481d4 : ret 0xf8e9
0x000000000049443c : ret 0xfa11
0x0000000000494934 : ret 0xfa38
0x000000000041f0d2 : ret 0xfae9
0x000000000044fe02 : ret 0xfb06
0x0000000000495520 : ret 0xfb3c
0x0000000000449e62 : ret 0xfb65
0x000000000041f6ba : ret 0xfbe9
0x0000000000425329 : ret 0xfc00
0x0000000000424241 : ret 0xfc3
0x0000000000475e1a : ret 0xfd35
0x000000000047574a : ret 0xfd64
0x00000000004251e9 : ret 0xfe00
0x0000000000400d45 : ret 0xfe83
0x00000000004250a9 : ret 0xff00
0x0000000000434881 : ret 0xff2
0x000000000044d2fb : ret 0xff25
0x000000000042bda9 : ret 0xff2d
0x0000000000425b0a : ret 0xff3
0x000000000046ab77 : ret 0xff31
0x000000000041a5ca : ret 0xff53
0x0000000000424f69 : ret 0xff80
0x0000000000466151 : ret 0xff83
0x0000000000453d2c : ret 0xff85
0x000000000045d1c2 : ret 0xffa0
0x000000000042344a : ret 0xffa5
0x000000000040b06a : ret 0xffaf
0x000000000040ad6a : ret 0xffb2
0x0000000000410cf7 : ret 0xffb8
0x000000000040dbda : ret 0xffc0
0x0000000000423158 : ret 0xffdf
0x000000000045a8b0 : ret 0xffe0
0x000000000046d134 : ret 0xffe7
0x0000000000467de9 : ret 0xffe8
0x00000000004491e5 : ret 0xffe9
0x000000000040f0a1 : ret 0xffef
0x0000000000422b72 : ret 0xfff
0x000000000040da02 : ret 0xfff0
0x000000000046a560 : ret 0xfff1
0x0000000000491928 : ret 0xfff7
0x0000000000424a69 : ret 0xfff8
0x00000000004942f5 : ret 0xfff9
0x000000000041c628 : ret 0xfffa
0x00000000004047f9 : ret 0xfffb
0x0000000000424929 : ret 0xfffc
0x0000000000417fa5 : ret 0xfffd
0x00000000004247e9 : ret 0xfffe
0x000000000041549c : ret 0xffff
0x000000000042b7f5 : ret 1
0x000000000041f82c : ret 2
0x000000000040f884 : ret 3
0x0000000000400ee9 : ret 4
0x00000000004559ca : ret 5
0x000000000049e4e8 : ret 6
0x000000000042a66a : ret 7
0x0000000000409f28 : ret 8
0x000000000044538a : ret 9
0x000000000046ee9d : retf 0x9066 ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46ee70
0x000000000049434d : retf 0xfff9 ; ror bl, 1 ; stc ; jmp qword ptr [rax]
0x00000000004b3e65 : retf ; cld ; call rdx
0x00000000004b3e51 : retf ; cld ; jmp qword ptr [rcx]
0x000000000048dbd3 : retf ; mov rsi, qword ptr [r14] ; call r12
0x0000000000494351 : retf ; stc ; jmp qword ptr [rax]
0x00000000004942fc : rol ah, 1 ; stc ; jmp qword ptr [rax]
0x00000000004464a5 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000447f93 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048e00c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042b0fe : rol bl, 0x83 ; ret 0x6620
0x000000000047454b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000418107 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042b8cd : rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000446e4d : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000425ae2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042b5eb : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000473722 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a27e0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000479c01 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042c33d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044cc0b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048d03e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040faf9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042b342 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000048265b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000418578 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000452e41 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000004747b2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000447e21 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000046639f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000446e4e : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000046d052 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000474792 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004af81c : rol byte ptr [rcx], 0 ; jo 0x4af7ad ; stc ; call qword ptr [rbx]
0x000000000044e5a6 : rol byte ptr [rcx], 0x50 ; call rbx
0x00000000004590fb : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000004481b7 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x00000000004481d0 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000042363b : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044ddf1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004747f2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004747a2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000494668 : rol byte ptr [rdx], cl ; cli ; inc dword ptr [rdx + 2] ; cli ; call rdx
0x00000000004747e2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000042b66f : rol ch, 1 ; std ; xlatb ; ret
0x0000000000473496 : rol ch, cl ; std ; xlatb ; ret
0x00000000004409df : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a60c0 : rol cl, 0xc2 ; ret
0x000000000047473c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000042b124 : rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000042b663 : rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x00000000004404b3 : rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000400929 : rol dword ptr [rcx], -0x73 ; call r11
0x0000000000477eb9 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000004565ef : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004546aa : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042bda5 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000422b3c : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000422b3b : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000494308 : ror al, 0xf9 ; call qword ptr [rax]
0x000000000048f3c4 : ror bh, 0x22 ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000049435c : ror bh, 0xf9 ; call qword ptr [rax]
0x0000000000494350 : ror bl, 1 ; stc ; jmp qword ptr [rax]
0x0000000000472145 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048a8a8 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042b172 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42b1b9 ; add rax, rdi ; ret
0x0000000000440877 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047445c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x0000000000410eae : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000047582c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x47585f ; ret
0x000000000044bae8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041d9c3 : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000482b11 : ror byte ptr [rax + 0x39], cl ; call 0x490abd2e
0x000000000047c78a : ror byte ptr [rax + 0x39], cl ; ret
0x000000000046fd33 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044d2ad : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000047e6b6 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000045f22b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045a7d9 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045a7ca : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042b21c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042b142 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042b633 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000405963 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000440874 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049ebe8 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042b8c5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004b3f2c : ror byte ptr [rax - 0x31f00000], 1 ; cld ; jmp qword ptr [rsi]
0x000000000048312c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x000000000046614a : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000042b132 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042b162 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042b152 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000422b6e : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000047988a : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x00000000004110f0 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048a8bd : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000459fe4 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000413880 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000481e2a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040dabd : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000041f1bd : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000414561 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x414577 ; ret
0x0000000000484b9c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004162e5 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475743 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000415501 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041db0d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb232c
0x000000000041ec4d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb346c
0x000000000041fa07 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb4226
0x000000000042150a : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb5d29
0x0000000000421a0f : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb622e
0x0000000000421f4b : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb676a
0x000000000040eb40 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000454ce5 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000489495 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000493dac : ror byte ptr [rax], 1 ; stc ; jmp qword ptr [rax]
0x000000000046ed72 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x0000000000473e2c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000004b2c40 : ror byte ptr [rbx], 0xfc ; jmp qword ptr [rax]
0x0000000000484594 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048bf87 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000472146 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000045bce6 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000467e38 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000044f5bf : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000046944e : ror byte ptr [rcx - 0x90f4b], 0xff ; jmp qword ptr [rdx + rax*8]
0x000000000046fb94 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x46fb67
0x000000000044b9dc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000477e61 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045e82c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041010d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475979 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040f891 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402736 : ror byte ptr [rdi], 0x84 ; ret
0x000000000046694b : ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000450547 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x0000000000440daa : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042250f : ror byte ptr [rdi], 0x85 ; ret
0x000000000044c63f : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047d972 : ror byte ptr [rdi], 0x85 ; ret 2
0x00000000004674e9 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000044b73c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047f449 : ror byte ptr [rdi], 0x94 ; ret
0x0000000000480f3a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046d6fd : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000484b9f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000044691e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000040ffd0 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046cb0a : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000422b6b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000446d95 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040dad2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dabc ; ret
0x000000000046347e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x000000000048519e : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x0000000000446928 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x000000000048aa84 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000046f326 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000004232b7 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000479c93 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000465b80 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004857b1 : ror dword ptr [rax - 0x77], cl ; ret
0x00000000004161fd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x4161f7 ; ret
0x00000000004708dd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x4708d7 ; ret
0x000000000045d934 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000483dfd : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x000000000046553b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x00000000004448d7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000042cba8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d2b4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d086 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042d006 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042d344 : ror dword ptr [rdi], -0x7b ; je 0x42d354 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042ce3b : ror dword ptr [rdi], -0x7b ; jno 0x42ce50 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cf03 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cb80 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004161fc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x4161f8 ; ret
0x00000000004708dc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x4708d8 ; ret
0x000000000043f46e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000403aae : sahf ; ret
0x000000000041d5de : sahf ; ret 0x29
0x00000000004a6fa5 : sahf ; ret 0x38ae
0x00000000004836f1 : sahf ; ret 0x3948
0x000000000045bcec : sahf ; ret 0x894c
0x000000000048c674 : sahf ; ret 0xf45
0x0000000000494181 : sahf ; stc ; call rax
0x0000000000494ed0 : sal al, 0xfa ; call rax
0x0000000000494ed4 : sal al, 1 ; cli ; jmp rax
0x000000000041857e : sal bh, 0xd8 ; ret
0x0000000000494f80 : sal bh, 0xfa ; jmp rax
0x0000000000425967 : sal bh, 1 ; ret 0x8000
0x0000000000425827 : sal bh, 1 ; ret 0xc000
0x00000000004256e7 : sal bh, 1 ; ret 0xe000
0x00000000004255a7 : sal bh, 1 ; ret 0xf000
0x0000000000425467 : sal bh, 1 ; ret 0xf800
0x0000000000425327 : sal bh, 1 ; ret 0xfc00
0x00000000004251e7 : sal bh, 1 ; ret 0xfe00
0x00000000004250a7 : sal bh, 1 ; ret 0xff00
0x0000000000424f67 : sal bh, 1 ; ret 0xff80
0x0000000000424e27 : sal bh, 1 ; ret 0xffc0
0x0000000000424ce7 : sal bh, 1 ; ret 0xffe0
0x0000000000424ba7 : sal bh, 1 ; ret 0xfff0
0x0000000000424a67 : sal bh, 1 ; ret 0xfff8
0x0000000000424927 : sal bh, 1 ; ret 0xfffc
0x00000000004247e7 : sal bh, 1 ; ret 0xfffe
0x0000000000493cc4 : sal bl, 1 ; clc ; inc dword ptr [rax] ; hlt ; clc ; call rax
0x000000000047453f : sal bl, 1 ; ret
0x000000000047f2ed : sal bl, cl ; ret
0x000000000040d9fd : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x0000000000489601 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x00000000004739e2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000004824ee : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000405dab : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048f423 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000048f408 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000414564 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044bb11 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000041711d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000446610 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000416200 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000425c8b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dad7 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042b66d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000480da8 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042b665 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000004404bd : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x00000000004404b5 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000047429b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000041853c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044cbf6 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x000000000048705c : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x48707a
0x00000000004407bc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000044e5a2 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x0000000000493e2c : sal byte ptr [rcx], 0xf9 ; jmp qword ptr [rax + 0x10fff94a]
0x000000000044bae6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000042273f : sal byte ptr [rdi + rbp - 0x7d], 0x3d ; ret
0x000000000040ea3c : sal byte ptr [rdx + 0x3948006b], 1 ; ret
0x00000000004736eb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044c41b : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000440ad3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000484f61 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047f8a9 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000048965a : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x0000000000494f08 : sal cl, 1 ; cli ; push rax ; int1 ; cli ; call qword ptr [rax]
0x0000000000494f5c : sal dh, 0xfa ; jmp rax
0x00000000004adf55 : sal dh, cl ; call qword ptr [rax]
0x0000000000493ccc : sal dl, 1 ; clc ; jmp qword ptr [rax]
0x0000000000494f28 : sal dl, 1 ; cli ; push rax ; cli ; jmp rax
0x0000000000446cf3 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000480dad : sal edi, -0x28 ; ret
0x0000000000444916 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004235a2 : salc ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000042d636 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000048fef1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000446a5a : salc ; clc ; ret
0x0000000000495688 : salc ; cmp al, 0xfb ; jmp rax
0x000000000047e5f4 : salc ; cmp rcx, rsi ; jne 0x47e5d7 ; ret
0x0000000000405d8e : salc ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000484b19 : salc ; nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000047e5f9 : salc ; ret
0x0000000000493f64 : salc ; xchg eax, esp ; stc ; push qword ptr [rsi - 0x6b] ; stc ; call qword ptr [rsi]
0x0000000000494fa0 : sar al, 0xfa ; jmp rax
0x0000000000403000 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000449283 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000047fc33 : sar bh, 0xff ; lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004844f0 : sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000402732 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047bb71 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x0000000000488e8c : sar byte ptr [rcx], 0x23 ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004468ce : sar byte ptr [rcx], 0xc8 ; jle 0x446910 ; movsxd rax, ecx ; ret
0x000000000044d17d : sar byte ptr [rcx], cl ; ret
0x0000000000494330 : sar byte ptr [rdi - 0x3d5f0007], 1 ; stc ; push rax ; ret
0x00000000004585f6 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a793f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000438233 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43823e ; ret
0x0000000000447209 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000471b3c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000048856e : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a76a3 : sar ecx, 1 ; jnp 0x4a7664 ; ret
0x0000000000494329 : sar ecx, cl ; call qword ptr [rax - 0x2f00062c]
0x0000000000415497 : sar edx, 2 ; call 0x4116e5
0x0000000000471c42 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042b8c7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004476c3 : sar esi, 1 ; jg 0x4476f3 ; vzeroupper ; ret
0x000000000044785c : sar esi, 1 ; jg 0x44788c ; vzeroupper ; ret
0x0000000000471b3b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000048856d : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415496 : sar rdx, 2 ; call 0x4116e6
0x0000000000415495 : sar rdx, 2 ; call 0x4116e7
0x0000000000471c41 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042b8c6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000463135 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004665ad : sbb al, 0x29 ; ret 0xe683
0x0000000000495058 : sbb al, 0x2e ; sti ; call qword ptr [rax]
0x0000000000495060 : sbb al, 0x2e ; sti ; call qword ptr [rdi]
0x00000000004674e7 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004b3e64 : sbb al, 0xcb ; cld ; call rdx
0x0000000000494210 : sbb al, 0xf9 ; inc dword ptr [rax - 0x26] ; stc ; jmp qword ptr [rax]
0x0000000000494d21 : sbb al, 0xfa ; jmp qword ptr [rax + 0x20fffa1d]
0x0000000000494d61 : sbb al, 0xfa ; jmp qword ptr [rax]
0x000000000040e022 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000463c16 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000406ed3 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x00000000004696bb : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040b068 : sbb al, ch ; ret 0xffaf
0x0000000000493da9 : sbb bh, cl ; call rax
0x0000000000494d1d : sbb bh, dl ; jmp qword ptr [rax]
0x00000000004a6425 : sbb bl, byte ptr [rsi] ; ret
0x0000000000481b14 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000485a74 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000484b99 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000047e151 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x0000000000418f11 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045da84 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000481b15 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000468fc2 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048dc7a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004824f7 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000041f16d : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000474170 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047f8cc : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000416261 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000419ebb : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000048577f : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000004196d3 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485a75 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040a51a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000048a6f5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041f788 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044cf5c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000411627 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004180f7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004876f7 : sbb byte ptr [rbx], ah ; add byte ptr [rax], al ; jne 0x487706 ; pop rbx ; ret
0x000000000047195a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004195ee : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x0000000000471e6e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000048ff6f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x48fff2 ; ret 0x8b48
0x00000000004540a8 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000040dbd0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000041f1bb : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000484b9a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000493dec : sbb byte ptr [rdi], 0xf9 ; call qword ptr [rax + 0x10fff932]
0x0000000000486f5b : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000494180 : sbb byte ptr [rsi - 0x602f0007], 0xf9 ; jmp qword ptr [rax]
0x000000000041d9bd : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x000000000045782d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043dbbd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f80a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f02a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f41a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ec3a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e71d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043defd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043d6dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043edd9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e23d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043da1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d1fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e3dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043f2ca : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eaea : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fbfa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d53d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d673 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e373 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043de93 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f1cb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fafb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e6b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d9b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d4d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e1d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f31b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043eb3b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048dfa5 : sbb dh, bl ; ret
0x0000000000494d55 : sbb dl, bh ; jmp qword ptr [rax + 0x20fffa19]
0x00000000004807b7 : sbb dl, dh ; jmp r11
0x000000000048854b : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048de99 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000460f71 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a8cdd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004462e7 : sbb eax, -1 ; ret
0x000000000048cff2 : sbb eax, 0x18c48348 ; ret
0x0000000000490030 : sbb eax, 0x22bcbb ; jne 0x490020 ; pop rbx ; ret
0x000000000045e494 : sbb eax, 0x39480001 ; ret
0x000000000045d912 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000407c4a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000048265a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042bd27 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048db7f : sbb eax, eax ; ret
0x00000000004462e5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004242a1 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x0000000000472909 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x00000000004507de : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000403ead : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000493da5 : sbb ecx, edi ; push rax ; sbb bh, cl ; call rax
0x0000000000494d5d : sbb edi, edx ; jmp qword ptr [rax + 0x20fffa1c]
0x0000000000494d19 : sbb edx, edi ; jmp qword ptr [rax + 0x20fffa1a]
0x0000000000494d59 : sbb edx, edi ; jmp qword ptr [rax]
0x000000000042adc2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f85e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000046c3ef : scasb al, byte ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a3901 : scasb al, byte ptr [rdi] ; cld ; jmp rax
0x00000000004b1871 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b1859 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004b1885 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdx]
0x0000000000493f30 : scasb al, byte ptr [rdi] ; xchg eax, esi ; stc ; inc dword ptr [rsi - 0x73] ; stc ; call qword ptr [rsi]
0x000000000043f95d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000413f2d : scasd eax, dword ptr [rdi] ; jo 0x413f61 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041454e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e3d9 : scasd eax, dword ptr [rdi] ; ret
0x000000000045ad2e : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000411346 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004195e9 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004481d3 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004940f1 : scasd eax, dword ptr [rdi] ; stc ; call qword ptr [rax]
0x000000000044baec : setae al ; ret
0x000000000045aa5a : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000041857c : setne al ; neg eax ; ret
0x000000000044d180 : setne dl ; jmp 0x44d168
0x00000000004942a4 : shl al, 1 ; stc ; call rax
0x000000000042b60b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042b5cb : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000004b172c : shl byte ptr [rax], 1 ; add byte ptr [rax], al ; idiv ch ; call rdx
0x000000000047ef99 : shl byte ptr [rbx], 1 ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000044652f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x00000000004448d3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000440085 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042d53b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d552 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000473286 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473297 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042d431 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004942a8 : shl dl, 1 ; stc ; call rax
0x000000000049fe10 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000400b08 : shl dword ptr [rdi + 0x5d01002b], cl ; ret
0x00000000004a7828 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000042d4b6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044638b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000473282 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d56d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d556 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d53f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042bffb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d4d1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042af5c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042d391 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044de11 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044de0d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000482d2c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482cb7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482c86 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000487060 : shl edx, 5 ; add rdx, rax ; jmp 0x487076
0x0000000000482d2b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482cb6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482c85 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048705f : shl rdx, 5 ; add rdx, rax ; jmp 0x487077
0x0000000000425c8f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000042423a : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004575d8 : shr byte ptr [rcx], cl ; ret
0x000000000042b8cb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000494cc0 : shr byte ptr [rip + 0x2d50fffa], 1 ; cli ; call rax
0x00000000004a390c : shr byte ptr [rsi - 0x521f0004], 0xfc ; jmp rax
0x00000000004a3900 : shr byte ptr [rsi - 0x521f0004], 1 ; cld ; jmp rax
0x0000000000493de4 : shr byte ptr [rsi], 0xf9 ; jmp rax
0x0000000000495028 : shr byte ptr [rsi], 0xfb ; dec eax ; sti ; jmp rax
0x000000000048cad2 : shr cl, 1 ; ret 0xfffe
0x0000000000467f7c : shr cl, cl ; jrcxz 0x467f88 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048c5df : shr cl, cl ; ret
0x0000000000447eaa : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000047434b : shr eax, 2 ; ret
0x0000000000474853 : shr eax, 2 ; vzeroupper ; ret
0x0000000000447ef5 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041ea7e : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000482e3c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482dc1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482d90 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000482e3b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482dc0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482d8f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047434a : shr rax, 2 ; ret
0x0000000000474852 : shr rax, 2 ; vzeroupper ; ret
0x000000000049efe9 : sldt word ptr [rax] ; ret
0x0000000000473b86 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000493dee : stc ; call qword ptr [rax + 0x10fff932]
0x0000000000493df6 : stc ; call qword ptr [rax + 0x10fff935]
0x0000000000493dfe : stc ; call qword ptr [rax + 0x10fff938]
0x0000000000493e06 : stc ; call qword ptr [rax + 0x10fff93b]
0x0000000000493e0e : stc ; call qword ptr [rax + 0x10fff93e]
0x0000000000493e16 : stc ; call qword ptr [rax + 0x10fff941]
0x0000000000493e1e : stc ; call qword ptr [rax + 0x10fff944]
0x00000000004942ca : stc ; call qword ptr [rax + 0x20fff9e4]
0x000000000049424a : stc ; call qword ptr [rax + 0x20fff9e5]
0x000000000049433e : stc ; call qword ptr [rax - 0x1f00063a]
0x000000000049415e : stc ; call qword ptr [rax - 0x1f000658]
0x0000000000494172 : stc ; call qword ptr [rax - 0x1f000666]
0x000000000049432a : stc ; call qword ptr [rax - 0x2f00062c]
0x0000000000493fb2 : stc ; call qword ptr [rax]
0x00000000004af7d2 : stc ; call qword ptr [rbx]
0x00000000004b01ea : stc ; call qword ptr [rcx]
0x00000000004af746 : stc ; call qword ptr [rdx]
0x0000000000493f42 : stc ; call qword ptr [rsi + 0x16fff990]
0x0000000000493f4a : stc ; call qword ptr [rsi + 0x16fff991]
0x0000000000493f52 : stc ; call qword ptr [rsi + 0x26fff992]
0x0000000000493f36 : stc ; call qword ptr [rsi]
0x00000000004942fa : stc ; call rax
0x0000000000493f1a : stc ; call rcx
0x0000000000493f62 : stc ; call rsi
0x00000000004af6ce : stc ; call rsp
0x0000000000494fa9 : stc ; cli ; jmp qword ptr [rax]
0x0000000000462f3e : stc ; dec dword ptr [rax + 0x29] ; ret
0x00000000004686f5 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000049436e : stc ; dec dword ptr [rsi + 0xc] ; cli ; call rax
0x000000000049408a : stc ; inc dword ptr [rax + 0x10fff9bd] ; mov al, 0xf9 ; call rax
0x000000000049427e : stc ; inc dword ptr [rax - 0x21] ; stc ; call qword ptr [rax]
0x00000000004941da : stc ; inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x00000000004941f6 : stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000494296 : stc ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000494212 : stc ; inc dword ptr [rax - 0x26] ; stc ; jmp qword ptr [rax]
0x0000000000494326 : stc ; inc dword ptr [rax - 0x2d] ; stc ; call qword ptr [rax - 0x2f00062c]
0x000000000049434a : stc ; inc dword ptr [rax - 0x2f000636] ; retf ; stc ; jmp qword ptr [rax]
0x000000000049417e : stc ; inc dword ptr [rax - 0x2f000662] ; lahf ; stc ; jmp qword ptr [rax]
0x000000000049433a : stc ; inc dword ptr [rax - 0x3b] ; stc ; call qword ptr [rax - 0x1f00063a]
0x00000000004940aa : stc ; inc dword ptr [rax - 0x43] ; stc ; call rax
0x00000000004940a6 : stc ; inc dword ptr [rax - 0x45] ; stc ; inc dword ptr [rax - 0x43] ; stc ; call rax
0x0000000000493ffa : stc ; inc dword ptr [rax - 0x4a] ; stc ; jmp qword ptr [rax]
0x000000000049406e : stc ; inc dword ptr [rax - 0x50] ; stc ; inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x000000000049415a : stc ; inc dword ptr [rax - 0x59] ; stc ; call qword ptr [rax - 0x1f000658]
0x0000000000493fe6 : stc ; inc dword ptr [rax - 0x6b] ; stc ; jmp rax
0x0000000000493dea : stc ; inc dword ptr [rax - 0x6f0006e1] ; xor bh, cl ; call qword ptr [rax]
0x000000000049421a : stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x0000000000493e9a : stc ; inc dword ptr [rax] ; insb byte ptr [rdi], dx ; stc ; push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x0000000000494072 : stc ; inc dword ptr [rax] ; mov dl, 0xf9 ; jmp rax
0x0000000000493e56 : stc ; inc dword ptr [rax] ; pop rcx ; stc ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x0000000000493dca : stc ; inc dword ptr [rax] ; sub cl, bh ; jmp qword ptr [rax]
0x0000000000493f16 : stc ; inc dword ptr [rcx - 0x6d] ; stc ; call rcx
0x0000000000493eda : stc ; inc dword ptr [rdx - 0x71] ; stc ; jmp rax
0x0000000000493ed6 : stc ; inc dword ptr [rdx - 0x72] ; stc ; inc dword ptr [rdx - 0x71] ; stc ; jmp rax
0x0000000000493f5e : stc ; inc dword ptr [rsi - 0x6c] ; stc ; call rsi
0x0000000000493f32 : stc ; inc dword ptr [rsi - 0x73] ; stc ; call qword ptr [rsi]
0x000000000049435a : stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x00000000004940ea : stc ; inc eax ; mov esp, 0xaf50fff9 ; stc ; call qword ptr [rax]
0x0000000000493e66 : stc ; inc eax ; pop rsi ; stc ; call rax
0x000000000049413a : stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x0000000000493de2 : stc ; inc eax ; stc ; jmp rax
0x000000000049416e : stc ; inc eax ; xchg eax, edi ; stc ; call qword ptr [rax - 0x1f000666]
0x0000000000493e2a : stc ; inc eax ; xor ecx, edi ; jmp qword ptr [rax + 0x10fff94a]
0x000000000043e912 : stc ; je 0x43e8de ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000493e2e : stc ; jmp qword ptr [rax + 0x10fff94a]
0x0000000000493dbe : stc ; jmp qword ptr [rax - 0x3f0006dc]
0x0000000000493dae : stc ; jmp qword ptr [rax]
0x00000000004af51a : stc ; jmp qword ptr [rbx]
0x00000000004afbea : stc ; jmp qword ptr [rcx]
0x00000000004b04ee : stc ; jmp qword ptr [rdx]
0x0000000000493f56 : stc ; jmp qword ptr [rsi]
0x0000000000493dc6 : stc ; jmp rax
0x00000000004af796 : stc ; jmp rbx
0x00000000004a76a4 : stc ; jnp 0x4a7663 ; ret
0x000000000042fe18 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000400ee3 : stc ; mov ecx, 0x54e8002b ; ret 4
0x0000000000493e5a : stc ; push qword ptr [rax + 0x5a] ; stc ; jmp rax
0x0000000000494356 : stc ; push qword ptr [rax - 0x32] ; stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x000000000049404e : stc ; push qword ptr [rax - 0x50] ; stc ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494136 : stc ; push qword ptr [rax - 0x65] ; stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x0000000000493da2 : stc ; push qword ptr [rax - 0xf0006e7] ; sbb bh, cl ; call rax
0x0000000000493e8e : stc ; push qword ptr [rax] ; imul edi, ecx, 0xf96a20ff ; call qword ptr [rax]
0x0000000000494036 : stc ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x00000000004940d6 : stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000049401a : stc ; push qword ptr [rax] ; mov dh, 0xf9 ; call qword ptr [rax]
0x0000000000494052 : stc ; push qword ptr [rax] ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494126 : stc ; push qword ptr [rax] ; mov edx, 0xbc30fff9 ; stc ; jmp rax
0x000000000049412a : stc ; push qword ptr [rax] ; mov esp, 0x95e0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004942f2 : stc ; push qword ptr [rax] ; ret 0xfff9
0x0000000000493f12 : stc ; push qword ptr [rcx + 0x41fff992] ; xchg eax, ebx ; stc ; call rcx
0x0000000000493f5a : stc ; push qword ptr [rsi + 0x46fff993] ; xchg eax, esp ; stc ; call rsi
0x0000000000493f66 : stc ; push qword ptr [rsi - 0x6b] ; stc ; call qword ptr [rsi]
0x0000000000493e9e : stc ; push rax ; insb byte ptr [rdi], dx ; stc ; jmp rax
0x000000000049403e : stc ; push rax ; mov bh, 0xf9 ; jmp rax
0x000000000049405a : stc ; push rax ; mov ch, 0xf9 ; call rax
0x0000000000494336 : stc ; push rax ; ret
0x0000000000493da6 : stc ; push rax ; sbb bh, cl ; call rax
0x00000000004490a4 : stc ; ret
0x0000000000446a59 : stc ; salc ; clc ; ret
0x0000000000438734 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042bda7 : stc ; xlatb ; ret 0xff2d
0x00000000004a4c46 : std ; call qword ptr [rax]
0x00000000004b5622 : std ; call qword ptr [rbx]
0x00000000004b50b2 : std ; call qword ptr [rdx]
0x00000000004ab0aa : std ; call rax
0x00000000004b1732 : std ; call rdx
0x000000000047624a : std ; dec dword ptr [rax + 0x39] ; ret
0x00000000004a4c7e : std ; dec dword ptr [rax + 0x60fffd77] ; ja 0x4a4c8d ; jmp qword ptr [rax]
0x0000000000473ba8 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x0000000000449ffe : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469702 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000423dd2 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004b0751 : std ; hlt ; jmp qword ptr [rbx]
0x00000000004824eb : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000048199e : std ; jbe 0x4819ac ; ret
0x00000000004a4c86 : std ; jmp qword ptr [rax]
0x00000000004a4c4a : std ; jmp qword ptr [rbx]
0x00000000004b4dfa : std ; jmp qword ptr [rcx]
0x00000000004b123a : std ; jmp qword ptr [rdi]
0x00000000004b095a : std ; jmp qword ptr [rdx]
0x00000000004aa6f6 : std ; jmp rbx
0x00000000004b472a : std ; jmp rdx
0x00000000004b4e2e : std ; jmp rsp
0x00000000004a4c42 : std ; lcall ptr [rax + 0x74] ; std ; call qword ptr [rax]
0x00000000004a4c5a : std ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004a4c56 : std ; lcall ptr [rax + 0x74] ; std ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004aa6fe : std ; lcall ptr [rsi - 0x594b0003] ; std ; jmp rbx
0x000000000042f63b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004aa702 : std ; push qword ptr [rsi - 0x591c0003] ; std ; jmp rbx
0x000000000044b00e : std ; push rbx ; ret
0x0000000000446c93 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000042b671 : std ; xlatb ; ret
0x000000000042b669 : std ; xlatb ; ret 0xc085
0x000000000042bbe3 : std ; xlatb ; ret 0xe883
0x0000000000473494 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000421961 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000411423 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000049505a : sti ; call qword ptr [rax]
0x0000000000495082 : sti ; call qword ptr [rcx]
0x0000000000495062 : sti ; call qword ptr [rdi]
0x000000000049509a : sti ; call rax
0x00000000004950a2 : sti ; call rdi
0x000000000049555a : sti ; call rsi
0x0000000000448e1f : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000496392 : sti ; dec dword ptr [rax] ; je 0x496397 ; jmp rax
0x000000000049560a : sti ; dec dword ptr [rdi + 0x3d] ; sti ; jmp qword ptr [rdx]
0x000000000049502a : sti ; dec eax ; sti ; jmp rax
0x0000000000495026 : sti ; inc eax ; sti ; dec eax ; sti ; jmp rax
0x0000000000495606 : sti ; jmp qword ptr [rax + 0x4ffffb3d]
0x00000000004b1ee6 : sti ; jmp qword ptr [rax]
0x00000000004b2a4a : sti ; jmp qword ptr [rbx]
0x000000000049560e : sti ; jmp qword ptr [rdx]
0x0000000000490500 : sti ; jmp qword ptr [rsi + 0xf]
0x000000000049502e : sti ; jmp rax
0x0000000000478989 : sti ; jp 0x47898a ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000495552 : sti ; lcall ptr [rax - 0xb0004c4] ; cmp al, 0xfb ; call rsi
0x000000000049638e : sti ; lcall ptr [rcx + 0x73] ; sti ; dec dword ptr [rax] ; je 0x49639b ; jmp rax
0x0000000000495056 : sti ; lcall ptr [rsi + rbp] ; sti ; call qword ptr [rax]
0x000000000049505e : sti ; lcall ptr [rsi + rbp] ; sti ; call qword ptr [rdi]
0x0000000000495052 : sti ; lcall ptr [rsi] ; sti ; lcall ptr [rsi + rbp] ; sti ; call qword ptr [rax]
0x000000000042fa18 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000495dbe : sti ; push qword ptr [rax] ; push -5 ; call qword ptr [rax]
0x0000000000495556 : sti ; push rsp ; cmp al, 0xfb ; call rsi
0x00000000004a782a : sti ; ret
0x00000000004b0959 : sti ; std ; jmp qword ptr [rdx]
0x000000000045a2c7 : sti ; test rax, rax ; je 0x45a2d5 ; call rax
0x00000000004a7d04 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004479bb : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041d4d2 : stosb byte ptr [rdi], al ; ret
0x000000000046c129 : stosd dword ptr [rdi], eax ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000424151 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000494ea1 : stosd dword ptr [rdi], eax ; cli ; call rax
0x00000000004683be : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000041ea83 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004a8e0c : stosd dword ptr [rdi], eax ; ret
0x0000000000424401 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041ea82 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a91f1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000481c96 : sub al, 0x48 ; add esp, 0x38 ; ret
0x0000000000447bf2 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000004af794 : sub al, 0x82 ; stc ; jmp rbx
0x000000000042cb83 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004ac0c9 : sub al, 0xf6 ; call qword ptr [rax]
0x00000000004ac0dd : sub al, 0xf6 ; call qword ptr [rdx]
0x0000000000494b51 : sub al, 0xfa ; call qword ptr [rdx + 0x12fffa2b]
0x0000000000494b4d : sub al, 0xfa ; call qword ptr [rdx]
0x0000000000494ccd : sub al, 0xfa ; call rax
0x0000000000494c8d : sub al, 0xfa ; jmp rax
0x00000000004b0b14 : sub al, 2 ; cli ; jmp qword ptr [rdx]
0x0000000000418500 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412645 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000418496 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a3875], 1 ; ret
0x0000000000418405 : sub al, byte ptr [rax] ; ret
0x00000000004241fa : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x0000000000424542 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000045a88a : sub al, byte ptr [rdx] ; add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x000000000042bf45 : sub al, ch ; std ; xlatb ; ret
0x0000000000494b5d : sub bh, dl ; call qword ptr [rdx]
0x0000000000494cdd : sub bh, dl ; call rax
0x0000000000494c9d : sub bh, dl ; jmp rax
0x000000000046339b : sub bl, cl ; in eax, 0xdf ; loopne 0x463330 ; ret
0x000000000047716c : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000047716b : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000483823 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x0000000000422634 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048c0dc : sub byte ptr [rax - 0x77], cl ; ret
0x000000000046f784 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004049f3 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004adf51 : sub byte ptr [rax], al ; add ah, cl ; sal dh, cl ; call qword ptr [rax]
0x00000000004841bd : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484205 ; leave ; ret
0x0000000000477dfe : sub byte ptr [rbp + rcx*4 + 0x15], cl ; pop rsp ; ret 2
0x00000000004b5b84 : sub byte ptr [rbp - 0x5eb80000], ah ; std ; jmp qword ptr [rax]
0x00000000004489b4 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000487ff3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000487ff2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000494ea0 : sub byte ptr [rbx - 0x532f0006], 0xfa ; jmp qword ptr [rax]
0x0000000000461721 : sub byte ptr [rcx], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000044bd8c : sub byte ptr [rcx], al ; ret
0x00000000004926c8 : sub byte ptr [rdi - 0x50a20009], 0xf7 ; jmp rcx
0x0000000000421456 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042435a : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x000000000042439b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004abb84 : sub byte ptr [rip - 0x64880000], al ; cmc ; call rax
0x00000000004af384 : sub byte ptr [rip - 0x6aa80000], bh ; clc ; call qword ptr [rax]
0x00000000004a3940 : sub byte ptr [rsi - 0x521f0004], 0xfc ; jmp rax
0x0000000000493dcd : sub cl, bh ; jmp qword ptr [rax]
0x0000000000467de6 : sub cl, bpl ; ret 0xffe8
0x000000000040eb3d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000467de7 : sub cl, ch ; ret 0xffe8
0x000000000045de94 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004ac009 : sub dh, dh ; jmp qword ptr [rax]
0x0000000000494ab1 : sub dl, bh ; call rax
0x0000000000494c2d : sub dl, bh ; call rsp
0x0000000000494c29 : sub dl, bh ; inc dword ptr [rax + rbp - 6] ; call rsp
0x0000000000494ce9 : sub dl, bh ; jmp qword ptr [rax]
0x000000000047ffca : sub dl, dh ; call r11
0x0000000000494c2c : sub dl, r15b ; call rsp
0x000000000041f51a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042421c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f57a : sub dword ptr [rax], eax ; ret
0x000000000045c193 : sub dword ptr [rbx - 6], eax ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000042dc67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42dc7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ddb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ddcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042df07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42df1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e057 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e06d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e1a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e1bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e2f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e30d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e447 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e45d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e597 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e5ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e6e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e6fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e837 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e84d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e987 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e99d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ead7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42eaed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ec27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ec3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ed8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eec7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42eedd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430637 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43064d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430787 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43079d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004308d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4308ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430a27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430a3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430b77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430b8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430cc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430cdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430e2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430f67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430f7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004310b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4310cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431207 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43121d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431357 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43136d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004314a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4314bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004315f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43160d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431747 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43175d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431897 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4318ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042dbc3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042dbbf : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042dc6d : sub dword ptr [rdi], esp ; jmp r9
0x000000000042423b : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000042d366 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042bcd7 : sub eax, -1 ; jne 0x42bce8 ; vzeroupper ; ret
0x0000000000422baa : sub eax, 0x10 ; ret
0x0000000000494b49 : sub eax, 0x2c92fffa ; cli ; call qword ptr [rdx]
0x0000000000494cc1 : sub eax, 0x2d50fffa ; cli ; call rax
0x0000000000494c81 : sub eax, 0x2d60fffa ; cli ; jmp rax
0x0000000000493de1 : sub eax, 0x2ec0fff9 ; stc ; jmp rax
0x0000000000469294 : sub eax, 0x83000000 ; ret
0x0000000000466665 : sub eax, 0x83000000 ; ret 0x8b01
0x00000000004242a2 : sub eax, 0xf480002 ; ret 0x66c3
0x00000000004584c4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000446764 : sub eax, 1 ; ret
0x00000000004819e6 : sub eax, dword ptr [0] ; ret
0x000000000040382d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400b0a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000400ee5 : sub eax, dword ptr [rax] ; call 0x44d144
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000401b8f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045de36 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000418dbe : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000044848a : sub eax, dword ptr [rdx + rcx*4] ; je 0x448476 ; ret
0x0000000000424402 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004180d3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004468cd : sub eax, eax ; cmp eax, ecx ; jle 0x446911 ; movsxd rax, ecx ; ret
0x0000000000480e34 : sub eax, eax ; ret
0x000000000042bd23 : sub eax, ecx ; je 0x42bd39 ; sbb eax, eax ; or eax, 1 ; ret
0x00000000004177a9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004844b0 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004259cc : sub eax, ecx ; ret
0x0000000000440879 : sub eax, edi ; ret
0x000000000047445e : sub eax, edi ; shr rax, 2 ; ret
0x0000000000484593 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000004180fb : sub eax, edx ; ret
0x0000000000474850 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042bcec : sub eax, edx ; vzeroupper ; ret
0x000000000044692d : sub eax, esi ; ret
0x0000000000480e33 : sub eax, r8d ; ret
0x00000000004a7a9e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000413af0 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000448cf3 : sub ebp, edx ; add byte ptr es:[rax + 0x39], cl ; ret
0x00000000004126c6 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a6535 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044cbf8 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x00000000004739e4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000494b59 : sub edi, edx ; call qword ptr [rdx + 0x12fffa2a]
0x0000000000494b55 : sub edi, edx ; call qword ptr [rdx]
0x0000000000494cd5 : sub edi, edx ; call rax
0x0000000000494c95 : sub edi, edx ; jmp rax
0x0000000000418100 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004180f5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042b174 : sub edx, eax ; jbe 0x42b1b7 ; add rax, rdi ; ret
0x000000000042b184 : sub edx, eax ; jbe 0x42b1b9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042b194 : sub edx, eax ; jbe 0x42b1b9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042b1a4 : sub edx, eax ; jbe 0x42b1b9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000494c25 : sub edx, edi ; call rsp
0x0000000000494ae5 : sub edx, edi ; jmp qword ptr [rax]
0x00000000004235a1 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000041309f : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000415494 : sub edx, esi ; sar rdx, 2 ; call 0x4116e8
0x000000000048a6f3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046f846 : sub esp, 0x80 ; call 0x44baf8
0x000000000041f824 : sub esp, 0x80 ; call 0x44bb28
0x00000000004923b1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000423571 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004177a8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000422ba9 : sub rax, 0x10 ; ret
0x0000000000446763 : sub rax, 1 ; ret
0x00000000004819e5 : sub rax, qword ptr [0] ; ret
0x0000000000418dbd : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004819e4 : sub rax, qword ptr fs:[0] ; ret
0x00000000004851a2 : sub rax, r8 ; ret
0x0000000000440878 : sub rax, rdi ; ret
0x000000000047445d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000446833 : sub rax, rdx ; ret
0x00000000004408cf : sub rax, rdx ; vzeroupper ; ret
0x000000000044692c : sub rax, rsi ; ret
0x000000000042b173 : sub rdx, rax ; jbe 0x42b1b8 ; add rax, rdi ; ret
0x0000000000415493 : sub rdx, rsi ; sar rdx, 2 ; call 0x4116e9
0x000000000048a6f2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046f845 : sub rsp, 0x80 ; call 0x44baf9
0x000000000041f823 : sub rsp, 0x80 ; call 0x44bb29
0x00000000004923b0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044bb37 : syscall ; pop rdx ; pop rsi ; ret
0x0000000000474d05 : syscall ; ret
0x0000000000417014 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004753f5 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048ae83 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004b4df8 : test al, 0x36 ; std ; jmp qword ptr [rcx]
0x000000000044a9ce : test al, 0x45 ; mov esp, esi ; call r15
0x00000000004a6df7 : test al, 0x97 ; xchg eax, esp ; ret
0x0000000000494161 : test al, 0xf9 ; jmp rax
0x00000000004ac004 : test al, 9 ; add byte ptr [rax], al ; cwde ; sub dh, dh ; jmp qword ptr [rax]
0x000000000047e6b5 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000425c8a : test al, al ; jne 0x425c78 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000477e63 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000472a9c : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004196d8 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000041010f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000458bb1 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046a8f9 : test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000040ea5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419a9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004857aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x0000000000444aaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000443eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041842a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004129aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000041155a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004183ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041732a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004448ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3acd : test byte ptr [rax], al ; add byte ptr [rdx - 0x36], bh ; hlt ; jmp qword ptr [rcx]
0x000000000044ed22 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046a7fc : test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000048bf8b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048db22 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000456114 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x4560d7
0x000000000044b464 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x0000000000423dd6 : test byte ptr [rdi], 0x84 ; ret
0x0000000000449faf : test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449ac6 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000472e24 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000472e3c : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000456519 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x4564dc
0x00000000004913c7 : test byte ptr [rdx], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041fb1e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000472a84 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042161e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000421b1e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004913c6 : test byte ptr [rdx], spl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000469384 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045ed94 : test byte ptr [rip - 0x7c000011], al ; ret
0x000000000047367d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000452f11 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x000000000044075d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004824ea : test ch, bh ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004af821 : test cl, bh ; call qword ptr [rbx]
0x0000000000489d7a : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004463ef : test cl, cl ; jne 0x4463e4 ; ret
0x000000000044649f : test cl, cl ; jne 0x446494 ; ret
0x000000000044675f : test cl, cl ; jne 0x446758 ; sub rax, 1 ; ret
0x00000000004508a5 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000444934 : test dl, 0x40 ; jne 0x4448f9 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444962 : test dl, 4 ; jne 0x4448f9 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000040dad6 : test dl, dl ; jne 0x40dab8 ; ret
0x000000000044660f : test dl, dl ; jne 0x446608 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000480da7 : test dl, dl ; jne 0x480d83 ; movsx eax, cl ; neg eax ; ret
0x0000000000491a73 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x0000000000472a9d : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000468866 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004021a1 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044d2b1 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045e809 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000468f76 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004021a0 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044d2b0 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042b0f8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x00000000004497d9 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x0000000000412c57 : test dword ptr [rbx + 0xf48002a], eax ; ret 0x8948
0x000000000042ce67 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d2b6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042bf38 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000041f958 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004755ab : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042ce3d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cd4d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cc5d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041cd52 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x000000000048df04 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041ccec : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042cb82 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000473463 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000449446 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000446172 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045f6d1 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000040fcad : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042d088 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a8ae0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432d06 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004102ae : test eax, 0x8948002a ; ret 0x8948
0x000000000044b9db : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000422b21 : test eax, eax ; je 0x422b38 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000042ae48 : test eax, eax ; je 0x42ae54 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044a1e8 : test eax, eax ; je 0x44a1f3 ; ret
0x000000000044d146 : test eax, eax ; je 0x44d155 ; ret
0x0000000000458ec4 : test eax, eax ; je 0x458ece ; call rax
0x000000000045a2c9 : test eax, eax ; je 0x45a2d3 ; call rax
0x0000000000484f60 : test eax, eax ; je 0x484f78 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f3c8 : test eax, eax ; je 0x48f3d5 ; ret
0x000000000048f4d8 : test eax, eax ; je 0x48f4e5 ; ret
0x0000000000490c71 : test eax, eax ; je 0x490c80 ; call rax
0x000000000041711c : test eax, eax ; jne 0x417115 ; ret
0x00000000004180b4 : test eax, eax ; jne 0x4180ad ; ret
0x000000000042b125 : test eax, eax ; jne 0x42b186 ; xor eax, eax ; ret
0x000000000042b5a1 : test eax, eax ; jne 0x42b5c9 ; xor eax, eax ; vzeroupper ; ret
0x000000000044bb10 : test eax, eax ; jne 0x44bb0b ; pop rdx ; pop r10 ; ret
0x000000000048f407 : test eax, eax ; jne 0x48f415 ; ret
0x000000000048f422 : test eax, eax ; jne 0x48f435 ; ret
0x000000000048f652 : test eax, eax ; jne 0x48f665 ; ret
0x000000000047bb70 : test eax, eax ; js 0x47bb87 ; pop rbx ; ret
0x0000000000469965 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000004702ba : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044a489 : test ebp, ebp ; jne 0x44a4a8 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044aff4 : test ebp, ebp ; jne 0x44b020 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b027 : test ebp, ebp ; jne 0x44b079 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b053 : test ebp, ebp ; jne 0x44b0d9 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000490141 : test ebp, ebp ; jne 0x490130 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490cfb : test ebp, ebp ; jne 0x490ce8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b5621 : test ebp, edi ; call qword ptr [rbx]
0x000000000041ac58 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042b060 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000421960 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421458 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004546a9 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000477eb8 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444922 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000474539 : test ecx, ecx ; jne 0x4744f8 ; mov rax, rdx ; ret
0x000000000047f035 : test edi, 0x8b410023 ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000044a4af : test edi, edi ; jne 0x44a4f9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a4d7 : test edi, edi ; jne 0x44a519 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b0df : test edi, edi ; jne 0x44b14a ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b10f : test edi, edi ; jne 0x44b17b ; mov rdi, qword ptr [r13] ; call r12
0x000000000047f2ea : test edi, edi ; jne 0x47f2c5 ; ret
0x000000000048465d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x484651 ; mov rax, rsi ; ret
0x0000000000440712 : test edx, edx ; je 0x440720 ; bsf eax, edx ; ret
0x0000000000440712 : test edx, edx ; je 0x440721 ; bsf eax, edx ; ret
0x00000000004407bb : test edx, edx ; je 0x4407d7 ; bsf rax, rdx ; ret
0x00000000004407bb : test edx, edx ; je 0x4407d8 ; bsf rax, rdx ; ret
0x000000000044c41a : test edx, edx ; je 0x44c431 ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x00000000004736ea : test edx, edx ; je 0x473717 ; bsf rax, rdx ; ret
0x00000000004736ea : test edx, edx ; je 0x473718 ; bsf rax, rdx ; ret
0x0000000000414563 : test edx, edx ; jne 0x414575 ; ret
0x00000000004161ff : test edx, edx ; jne 0x4161f5 ; ret
0x00000000004708df : test edx, edx ; jne 0x4708d5 ; ret
0x000000000047429a : test edx, edx ; jne 0x474295 ; ret
0x0000000000444915 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000458dc8 : test esi, esi ; je 0x458dd2 ; call rsi
0x00000000004735e1 : test esi, esi ; jne 0x4735f0 ; xor rax, rax ; ret
0x00000000004742a1 : test esi, esi ; jne 0x4742b0 ; xor rax, rax ; ret
0x000000000045e594 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000044492f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042ae47 : test r8d, r8d ; je 0x42ae55 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000474538 : test r9d, r9d ; jne 0x4744f9 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000422b20 : test rax, rax ; je 0x422b39 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000044a1e7 : test rax, rax ; je 0x44a1f4 ; ret
0x0000000000458ec3 : test rax, rax ; je 0x458ecf ; call rax
0x000000000045a2c8 : test rax, rax ; je 0x45a2d4 ; call rax
0x0000000000484f5f : test rax, rax ; je 0x484f79 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490c70 : test rax, rax ; je 0x490c81 ; call rax
0x000000000041711b : test rax, rax ; jne 0x417116 ; ret
0x00000000004180b3 : test rax, rax ; jne 0x4180ae ; ret
0x000000000044a488 : test rbp, rbp ; jne 0x44a4a9 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044aff3 : test rbp, rbp ; jne 0x44b021 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000490140 : test rbp, rbp ; jne 0x490131 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490cfa : test rbp, rbp ; jne 0x490ce9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f2e9 : test rdi, rdi ; jne 0x47f2c6 ; ret
0x00000000004407ba : test rdx, rdx ; je 0x4407d8 ; bsf rax, rdx ; ret
0x00000000004407ba : test rdx, rdx ; je 0x4407d9 ; bsf rax, rdx ; ret
0x00000000004736e9 : test rdx, rdx ; je 0x473718 ; bsf rax, rdx ; ret
0x00000000004736e9 : test rdx, rdx ; je 0x473719 ; bsf rax, rdx ; ret
0x0000000000414562 : test rdx, rdx ; jne 0x414576 ; ret
0x00000000004161fe : test rdx, rdx ; jne 0x4161f6 ; ret
0x00000000004708de : test rdx, rdx ; jne 0x4708d6 ; ret
0x0000000000458dc7 : test rsi, rsi ; je 0x458dd3 ; call rsi
0x00000000004735e0 : test rsi, rsi ; jne 0x4735f1 ; xor rax, rax ; ret
0x00000000004742a0 : test rsi, rsi ; jne 0x4742b1 ; xor rax, rax ; ret
0x00000000004152b3 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x00000000004382ca : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000044707c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446a45 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447c01 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000446a49 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447208 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x00000000004472af : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x00000000004382b6 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043829d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000446fe5 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000447b6b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000447153 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000447125 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000447af2 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000446a3b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000446a3f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004476c2 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000447788 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000447c7d : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000446a54 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000446a58 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000004385d3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000043846c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000043826e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000438232 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000438735 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000446bf8 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000446b5b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000004469fa : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043e911 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042b448 : vzeroupper ; ret
0x000000000042b620 : vzeroupper ; xor eax, eax ; ret
0x0000000000494e71 : wait ; cli ; call qword ptr [rax]
0x00000000004abb89 : wait ; cmc ; call rax
0x0000000000494139 : wait ; stc ; inc eax ; pushfq ; stc ; call qword ptr [rax]
0x000000000042a493 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043dbbf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a583 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a3a3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045fe42 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000043f80c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f02c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f41c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ec3c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d6ec : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000447e82 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042adeb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043e71f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043deff : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043d6df : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044ed88 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042a943 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000473ba6 : xchg byte ptr [rax - 3], al ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000043eddb : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004943c8 : xchg byte ptr [rax], dl ; cli ; call qword ptr [rsi]
0x000000000043e23f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a0d3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043da1f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d1ff : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e3df : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042ab23 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a2b3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000048c88c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042ad03 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043f2cc : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eaec : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fbfc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004948c0 : xchg byte ptr [rdi], dh ; cli ; call qword ptr [rsi]
0x0000000000453f63 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042ac13 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043d53f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a555 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a645 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a465 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041aa55 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x000000000043d675 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e375 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043de95 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f1cd : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000455055 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043fafd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a1c3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000043e6b5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d9b5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d4d5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e1d5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f31d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043eb3d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a375 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a195 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a285 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a0a5 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046ee59 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046e1af : xchg dword ptr [rax - 0x77000000], ecx ; ret 0x349
0x0000000000402cc3 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x00000000004b3e4d : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; retf ; cld ; jmp qword ptr [rcx]
0x000000000047b586 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000044ee74 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x0000000000461d4c : xchg dword ptr [rbx - 0x76fffff4], ebp ; ret 0x349
0x00000000004a67ac : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048af3a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x0000000000423653 : xchg dword ptr [rcx], ebp ; add bh, dh ; ret 0
0x000000000044bb0e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44bb0d ; pop rdx ; pop r10 ; ret
0x000000000046f044 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x00000000004696ba : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000410195 : xchg dword ptr [rdx - 0x76b7ffd6], ebp ; ret 0x8948
0x00000000004628c4 : xchg dword ptr [rdx - 0x77000000], edx ; ret 0x349
0x0000000000478bd0 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046c36c : xchg dword ptr [rsi - 0x76ffffe1], ecx ; ret 0x349
0x00000000004a694b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004af389 : xchg eax, ebp ; clc ; call qword ptr [rax]
0x00000000004af39d : xchg eax, ebp ; clc ; jmp qword ptr [rsi]
0x00000000004abae9 : xchg eax, ebp ; cmc ; call qword ptr [rdx]
0x00000000004abafd : xchg eax, ebp ; cmc ; call rsp
0x000000000045832b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000044fa9f : xchg eax, ebp ; ret
0x000000000048ab20 : xchg eax, ebp ; ret 0x145
0x0000000000477c0a : xchg eax, ebp ; ret 0x2041
0x0000000000477cca : xchg eax, ebp ; ret 0x2044
0x0000000000449bbc : xchg eax, ebp ; ret 0x3948
0x000000000041daab : xchg eax, ebp ; ret 0x8348
0x0000000000479890 : xchg eax, ebp ; ret 0xc283
0x0000000000420c6d : xchg eax, ebp ; ret 0xd020
0x000000000040deb5 : xchg eax, ebp ; ret 0xd021
0x0000000000463f4a : xchg eax, ebp ; ret 0xd120
0x000000000040ffd2 : xchg eax, ebp ; ret 0xdaf7
0x000000000044d181 : xchg eax, ebp ; ret 0xe1eb
0x000000000048c69a : xchg eax, ebp ; ret 0xf45
0x000000000041857d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000493f69 : xchg eax, ebp ; stc ; call qword ptr [rsi]
0x0000000000494131 : xchg eax, ebp ; stc ; jmp qword ptr [rax]
0x0000000000493fe9 : xchg eax, ebp ; stc ; jmp rax
0x0000000000410f92 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046b727 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042bfd0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004b1559 : xchg eax, ebx ; cli ; call qword ptr [rcx]
0x00000000004b1541 : xchg eax, ebx ; cli ; call qword ptr [rdi]
0x0000000000443dac : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042d772 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000045af08 : xchg eax, ebx ; ret 0x3948
0x0000000000411d8c : xchg eax, ebx ; ret 0x3949
0x00000000004203c0 : xchg eax, ebx ; ret 0x3d83
0x0000000000471185 : xchg eax, ebx ; ret 0x840
0x000000000045b9ed : xchg eax, ebx ; ret 0x854d
0x000000000041cd59 : xchg eax, ebx ; ret 0xffff
0x0000000000493fdd : xchg eax, ebx ; stc ; call qword ptr [rax]
0x0000000000493f19 : xchg eax, ebx ; stc ; call rcx
0x0000000000493f5d : xchg eax, ebx ; stc ; inc dword ptr [rsi - 0x6c] ; stc ; call rsi
0x000000000045224b : xchg eax, ecx ; clc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x000000000044d497 : xchg eax, ecx ; jmp 0xffffffffc2cdd4c8
0x000000000043e7c1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000493f49 : xchg eax, ecx ; stc ; call qword ptr [rsi + 0x16fff991]
0x0000000000493f4d : xchg eax, ecx ; stc ; call qword ptr [rsi]
0x0000000000493fcd : xchg eax, ecx ; stc ; jmp rax
0x000000000043ceef : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004100d2 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004145d4 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004b4e29 : xchg eax, edi ; add byte ptr [rax], al ; in al, 0x36 ; std ; jmp rsp
0x00000000004b4df5 : xchg eax, edi ; add byte ptr [rax], al ; test al, 0x36 ; std ; jmp qword ptr [rcx]
0x000000000040d251 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000004244f5 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000041ebeb : xchg eax, edi ; ret 0x394c
0x000000000041f0d1 : xchg eax, edi ; ret 0xfae9
0x000000000041f6b9 : xchg eax, edi ; ret 0xfbe9
0x000000000044b73b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000494171 : xchg eax, edi ; stc ; call qword ptr [rax - 0x1f000666]
0x00000000004a6df8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000047ae7f : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000494b3c : xchg eax, edx ; cli ; call qword ptr [rdx]
0x0000000000494948 : xchg eax, edx ; cli ; jmp qword ptr [rdx]
0x00000000004a86bd : xchg eax, edx ; jae 0x4a869a ; push rsi ; pop rdx ; je 0x4a868f ; ret 0xacfc
0x0000000000482b16 : xchg eax, edx ; ret 0x2948
0x00000000004827ee : xchg eax, edx ; ret 0x294c
0x0000000000405be8 : xchg eax, edx ; ret 0x8548
0x0000000000482ff5 : xchg eax, edx ; ret 0x8949
0x000000000044b73e : xchg eax, edx ; ret 0xd029
0x00000000004a67af : xchg eax, edx ; ret 0xf869
0x000000000044691d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000493f51 : xchg eax, edx ; stc ; call qword ptr [rsi + 0x26fff992]
0x0000000000493f15 : xchg eax, edx ; stc ; inc dword ptr [rcx - 0x6d] ; stc ; call rcx
0x0000000000493f55 : xchg eax, edx ; stc ; jmp qword ptr [rsi]
0x00000000004b1ee5 : xchg eax, edx ; sti ; jmp qword ptr [rax]
0x0000000000494b4c : xchg eax, edx ; sub al, 0xfa ; call qword ptr [rdx]
0x0000000000494b5c : xchg eax, edx ; sub bh, dl ; call qword ptr [rdx]
0x000000000042ae4c : xchg eax, edx ; sub eax, edx ; ret
0x0000000000494b54 : xchg eax, edx ; sub edi, edx ; call qword ptr [rdx]
0x000000000042c2d0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000434503 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000455d71 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000447f14 : xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000478851 : xchg eax, esi ; jmp 0x4786ae
0x000000000042c38d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000040479e : xchg eax, esi ; mov esp, 0x8949ffff ; ret 0x149
0x000000000042c2eb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000493f44 : xchg eax, esi ; nop ; stc ; call qword ptr [rsi]
0x0000000000448b71 : xchg eax, esi ; ret 0xc085
0x00000000004a904c : xchg eax, esi ; ret 0xcd11
0x0000000000448bcf : xchg eax, esi ; ret 0xd284
0x000000000042c33c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000493fb1 : xchg eax, esi ; stc ; call qword ptr [rax]
0x0000000000493f31 : xchg eax, esi ; stc ; inc dword ptr [rsi - 0x73] ; stc ; call qword ptr [rsi]
0x00000000004afbe9 : xchg eax, esi ; stc ; jmp qword ptr [rcx]
0x0000000000493f4c : xchg eax, esi ; xchg eax, ecx ; stc ; call qword ptr [rsi]
0x0000000000493f54 : xchg eax, esi ; xchg eax, edx ; stc ; jmp qword ptr [rsi]
0x00000000004948e4 : xchg eax, esi ; xor edi, edx ; jmp qword ptr [rsi]
0x000000000046c547 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004a3b1c : xchg eax, esp ; mov al, 0xfc ; jmp rsp
0x00000000004b11f0 : xchg eax, esp ; pop rbx ; add byte ptr [rax], al ; jb 0x4b11f8 ; call qword ptr [rdx]
0x00000000004a925f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a91f0 ; ret 0x48f
0x00000000004663a2 : xchg eax, esp ; ret
0x0000000000450b3b : xchg eax, esp ; ret 0x1f0f
0x0000000000449c8b : xchg eax, esp ; ret 0x2044
0x0000000000480f3c : xchg eax, esp ; ret 0x3d
0x000000000041c71e : xchg eax, esp ; ret 0x3de9
0x000000000046d6ff : xchg eax, esp ; ret 0x7f3c
0x0000000000484ba1 : xchg eax, esp ; ret 0x950f
0x0000000000402c14 : xchg eax, esp ; ret 0xb60f
0x0000000000446920 : xchg eax, esp ; ret 0xc085
0x0000000000449fb1 : xchg eax, esp ; ret 0xc221
0x0000000000476725 : xchg eax, esp ; ret 0xc283
0x0000000000449ac8 : xchg eax, esp ; ret 0xca21
0x00000000004011f3 : xchg eax, esp ; ret 0xd284
0x000000000044f5c6 : xchg eax, esp ; ret 0xd5e9
0x000000000048c63b : xchg eax, esp ; ret 0xf45
0x0000000000422b6a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000047ef98 : xchg eax, esp ; shl byte ptr [rbx], 1 ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000493f61 : xchg eax, esp ; stc ; call rsi
0x0000000000493fe5 : xchg eax, esp ; stc ; inc dword ptr [rax - 0x6b] ; stc ; jmp rax
0x0000000000493f65 : xchg eax, esp ; stc ; push qword ptr [rsi - 0x6b] ; stc ; call qword ptr [rsi]
0x0000000000495dbc : xchg eax, esp ; sti ; push qword ptr [rax] ; push -5 ; call qword ptr [rax]
0x00000000004b156c : xchg eax, esp ; xchg eax, ebx ; cli ; call qword ptr [rcx]
0x0000000000493f18 : xchg eax, r11d ; stc ; call rcx
0x00000000004a4c4d : xchg ebp, edi ; jmp qword ptr [rbx]
0x00000000004a4c41 : xchg ebp, edi ; lcall ptr [rax + 0x74] ; std ; call qword ptr [rax]
0x000000000041ab24 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004abae8 : xchg rax, rbp ; cmc ; call qword ptr [rdx]
0x00000000004a1e39 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042d639 : xlatb ; add r9, r11 ; jmp r9
0x000000000047582f : xlatb ; ja 0x47585c ; ret
0x0000000000446c83 : xlatb ; jb 0x446c8e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040d53d : xlatb ; jmp rdi
0x00000000004a7823 : xlatb ; jo 0x4a789f ; mov ebp, 0xfb67d10d ; ret
0x00000000004846e2 : xlatb ; mov byte ptr [rsi], al ; jne 0x4846c8 ; mov rax, rsi ; ret
0x0000000000471a65 : xlatb ; or edi, edx ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000042af74 : xlatb ; ret
0x00000000004a8cc6 : xlatb ; ret 0x4e27
0x00000000004732e7 : xlatb ; ret 0x94c
0x000000000042af5f : xlatb ; ret 0xc085
0x0000000000425a80 : xlatb ; ret 0xc148
0x000000000042bbe4 : xlatb ; ret 0xe883
0x0000000000440734 : xlatb ; ret 0xf66
0x000000000042bda8 : xlatb ; ret 0xff2d
0x000000000042b341 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000473495 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b123 : xlatb ; rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000042b662 : xlatb ; rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x00000000004404b2 : xlatb ; rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x00000000004448d6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000425966 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000425826 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000004256e6 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000004255a6 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000425466 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000425326 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000004251e6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000004250a6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000424f66 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000424e26 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000424ce6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000424ba6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000424a66 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000424926 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000004247e6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00000000004448d2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000473285 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473296 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004942d1 : xlatb ; stc ; call rax
0x00000000004942b1 : xlatb ; stc ; jmp qword ptr [rax]
0x00000000004b0750 : xlatb ; std ; hlt ; jmp qword ptr [rbx]
0x00000000004244da : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a67aa : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004af790 : xor al, 0x41 ; add byte ptr [rax], al ; sub al, 0x82 ; stc ; jmp rbx
0x00000000004aff90 : xor al, 0x49 ; add byte ptr [rax], al ; pushfq ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call rsi
0x00000000004af6cc : xor al, 0x79 ; stc ; call rsp
0x0000000000459bc2 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000046ec9b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048dbd2 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a798a : xor al, 0xd8 ; ret
0x0000000000458dc5 : xor al, 0xf0 ; test rsi, rsi ; je 0x458dd5 ; call rsi
0x000000000045293e : xor al, 0xf6 ; ret
0x0000000000493df5 : xor al, 0xf9 ; call qword ptr [rax + 0x10fff935]
0x00000000004948e1 : xor al, 0xfa ; call qword ptr [rsi + 0x26fffa33]
0x0000000000494a1d : xor al, 0xfa ; call rsp
0x0000000000494a19 : xor al, 0xfa ; inc dword ptr [rsp + rsi - 6] ; call rsp
0x000000000049489d : xor al, 0xfa ; jmp qword ptr [rax]
0x000000000045f8ac : xor al, 1 ; jmp 0x45db06
0x0000000000493df1 : xor bh, cl ; call qword ptr [rax]
0x0000000000494a71 : xor bh, dl ; call qword ptr [rax + 0x20fffa38]
0x0000000000494aad : xor bh, dl ; call qword ptr [rax]
0x00000000004948b1 : xor bh, dl ; call rsi
0x000000000045d1dd : xor bh, dl ; dec dword ptr [rax + 0x29] ; ret
0x0000000000494a6d : xor bh, dl ; jmp qword ptr [rax]
0x0000000000494aa9 : xor bh, dl ; push qword ptr [rax + 0x32] ; cli ; call qword ptr [rax]
0x000000000042b1ac : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000042b07d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004111f2 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000045b668 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000043fee1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000440342 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000004111f3 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004b0a8c : xor byte ptr [rax + rax], dl ; adc dh, bh ; stc ; call qword ptr [rax]
0x000000000044a9ca : xor byte ptr [rax - 0x75], cl ; jge 0x44a980 ; mov r12d, r14d ; call r15
0x0000000000440a9f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000047401f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048aa88 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004718c2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044cf4f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000402ef8 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041154b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040e969 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e8a3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000047426c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000040e98f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000447f63 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004717fa : xor byte ptr [rax], al ; je 0x471805 ; ret
0x000000000048dfee : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000446ed5 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x000000000049417c : xor byte ptr [rbp - 0x617f0007], bl ; stc ; call rax
0x00000000004665a9 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x00000000004148e6 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044f31a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046c4ee : xor byte ptr [rbx - 0x79f0f608], al ; ret
0x00000000004947a4 : xor byte ptr [rbx], al ; cli ; jmp qword ptr [rax + 0x10fffa02]
0x000000000048a8a5 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000004784e3 : xor byte ptr [rcx + 0x29], cl ; ret
0x000000000049412c : xor byte ptr [rcx + rdi*8 - 0x66a1f01], bh ; jmp qword ptr [rax]
0x0000000000493e90 : xor byte ptr [rcx - 7], ch ; jmp qword ptr [rax]
0x000000000041154c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000412847 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004100d3 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004945b8 : xor byte ptr [rcx], cl ; cli ; jmp qword ptr [rax + 0x20fffa08]
0x00000000004709a0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000494128 : xor byte ptr [rdx - 0x43cf0007], bh ; stc ; jmp rax
0x0000000000494e9c : xor byte ptr [rdx - 0x547f0006], ch ; cli ; call rax
0x0000000000495dc0 : xor byte ptr [rdx - 5], ch ; call qword ptr [rax]
0x00000000004b040f : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042c07f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047324c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b07e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000411f7d : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047dbe3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045b1d7 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048d07e : xor cl, byte ptr [rax] ; jne 0x48d0a3 ; mov rax, qword ptr [rax] ; ret
0x0000000000405c10 : xor cl, ch ; ret
0x000000000045a029 : xor dh, dh ; ret 0x4002
0x000000000042353a : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047ff9e : xor dl, dh ; jmp r11
0x00000000004800b0 : xor dl, dh ; ret
0x0000000000465b7d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x000000000044bf1f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d0ed : xor dword ptr [rax], ecx ; jne 0x48d0fc ; mov qword ptr [rax], rdx ; ret
0x000000000041bc39 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x00000000004235c2 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000424281 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046b4fe : xor eax, 0x24b91d ; jmp rax
0x0000000000494899 : xor eax, 0x3490fffa ; cli ; jmp qword ptr [rax]
0x0000000000494951 : xor eax, 0x3542fffa ; cli ; call rdx
0x00000000004948d1 : xor eax, 0x3556fffa ; cli ; jmp rsi
0x0000000000494a8d : xor eax, 0x3580fffa ; cli ; call qword ptr [rax]
0x0000000000447493 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a4da : xor eax, 0x7d8b48 ; call r12
0x000000000046548a : xor eax, 0x89ffffe6 ; ret
0x000000000040e966 : xor eax, dword ptr [0x30] ; call rax
0x0000000000415500 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004162e4 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045c719 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047582b : xor eax, eax ; cmp rdi, rdx ; ja 0x475860 ; ret
0x000000000044bae7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000414490 : xor eax, eax ; jmp 0x41445a
0x000000000045cdfc : xor eax, eax ; jmp 0x45cdc4
0x000000000045cdfb : xor eax, eax ; jmp 0x45cdc5
0x0000000000475c18 : xor eax, eax ; leave ; ret
0x0000000000473032 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405daf : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041453b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ec75 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042360c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000412bb2 : xor eax, eax ; pop rbx ; ret
0x000000000040ebbd : xor eax, eax ; ret
0x0000000000425c8e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000414560 : xor eax, eax ; test rdx, rdx ; jne 0x414578 ; ret
0x000000000042b56c : xor eax, eax ; vzeroupper ; ret
0x0000000000458988 : xor ebp, ecx ; ret 0xfffd
0x000000000047a0f0 : xor ebx, ebx ; jmp 0x47a0b9
0x0000000000458686 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000457659 : xor ecx, ecx ; call r15
0x0000000000473e29 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000493e2d : xor ecx, edi ; jmp qword ptr [rax + 0x10fff94a]
0x000000000044befc : xor edi, dword ptr [rax] ; ret 0x2f75
0x0000000000476249 : xor edi, ebp ; dec dword ptr [rax + 0x39] ; ret
0x000000000041a901 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000494965 : xor edi, edx ; call qword ptr [rdx]
0x00000000004948a9 : xor edi, edx ; call rax
0x00000000004948a5 : xor edi, edx ; inc dword ptr [rax + 0x33] ; cli ; call rax
0x00000000004948e5 : xor edi, edx ; jmp qword ptr [rsi]
0x0000000000494aa5 : xor edi, edx ; jmp rax
0x000000000040e8a0 : xor edx, dword ptr [0x30] ; call rdx
0x000000000044e5a3 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044d17c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d16c
0x000000000046fb93 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x46fb68
0x0000000000416eb3 : xor edx, edx ; jmp rax
0x0000000000473e2b : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000041f1bc : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000478986 : xor esi, esi ; call 0x400491
0x000000000046121c : xor esi, esi ; jmp rax
0x0000000000457658 : xor r9d, r9d ; call r15
0x000000000040e965 : xor rax, qword ptr [0x30] ; call rax
0x000000000040e964 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000004448f0 : xor rax, rax ; ret
0x000000000040e89f : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e89e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 9121
