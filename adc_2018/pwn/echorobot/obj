
echorobot:     file format elf64-x86-64


Disassembly of section .init:

0000000000000678 <_init>:
 678:	48 83 ec 08          	sub    rsp,0x8
 67c:	48 8b 05 5d 09 20 00 	mov    rax,QWORD PTR [rip+0x20095d]        # 200fe0 <_DYNAMIC+0x1e8>
 683:	48 85 c0             	test   rax,rax
 686:	74 05                	je     68d <_init+0x15>
 688:	e8 63 00 00 00       	call   6f0 <__libc_start_main@plt+0x10>
 68d:	48 83 c4 08          	add    rsp,0x8
 691:	c3                   	ret    

Disassembly of section .plt:

00000000000006a0 <setbuf@plt-0x10>:
 6a0:	ff 35 62 09 20 00    	push   QWORD PTR [rip+0x200962]        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>
 6a6:	ff 25 64 09 20 00    	jmp    QWORD PTR [rip+0x200964]        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>
 6ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000006b0 <setbuf@plt>:
 6b0:	ff 25 62 09 20 00    	jmp    QWORD PTR [rip+0x200962]        # 201018 <_GLOBAL_OFFSET_TABLE_+0x18>
 6b6:	68 00 00 00 00       	push   0x0
 6bb:	e9 e0 ff ff ff       	jmp    6a0 <_init+0x28>

00000000000006c0 <printf@plt>:
 6c0:	ff 25 5a 09 20 00    	jmp    QWORD PTR [rip+0x20095a]        # 201020 <_GLOBAL_OFFSET_TABLE_+0x20>
 6c6:	68 01 00 00 00       	push   0x1
 6cb:	e9 d0 ff ff ff       	jmp    6a0 <_init+0x28>

00000000000006d0 <read@plt>:
 6d0:	ff 25 52 09 20 00    	jmp    QWORD PTR [rip+0x200952]        # 201028 <_GLOBAL_OFFSET_TABLE_+0x28>
 6d6:	68 02 00 00 00       	push   0x2
 6db:	e9 c0 ff ff ff       	jmp    6a0 <_init+0x28>

00000000000006e0 <__libc_start_main@plt>:
 6e0:	ff 25 4a 09 20 00    	jmp    QWORD PTR [rip+0x20094a]        # 201030 <_GLOBAL_OFFSET_TABLE_+0x30>
 6e6:	68 03 00 00 00       	push   0x3
 6eb:	e9 b0 ff ff ff       	jmp    6a0 <_init+0x28>

Disassembly of section .plt.got:

00000000000006f0 <.plt.got>:
 6f0:	ff 25 ea 08 20 00    	jmp    QWORD PTR [rip+0x2008ea]        # 200fe0 <_DYNAMIC+0x1e8>
 6f6:	66 90                	xchg   ax,ax
 6f8:	ff 25 fa 08 20 00    	jmp    QWORD PTR [rip+0x2008fa]        # 200ff8 <_DYNAMIC+0x200>
 6fe:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000700 <_start>:
 700:	31 ed                	xor    ebp,ebp
 702:	49 89 d1             	mov    r9,rdx
 705:	5e                   	pop    rsi
 706:	48 89 e2             	mov    rdx,rsp
 709:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 70d:	50                   	push   rax
 70e:	54                   	push   rsp
 70f:	4c 8d 05 fa 01 00 00 	lea    r8,[rip+0x1fa]        # 910 <__libc_csu_fini>
 716:	48 8d 0d 83 01 00 00 	lea    rcx,[rip+0x183]        # 8a0 <__libc_csu_init>
 71d:	48 8d 3d 0c 01 00 00 	lea    rdi,[rip+0x10c]        # 830 <main>
 724:	e8 b7 ff ff ff       	call   6e0 <__libc_start_main@plt>
 729:	f4                   	hlt    
 72a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000730 <deregister_tm_clones>:
 730:	48 8d 3d 11 09 20 00 	lea    rdi,[rip+0x200911]        # 201048 <__TMC_END__>
 737:	48 8d 05 11 09 20 00 	lea    rax,[rip+0x200911]        # 20104f <__TMC_END__+0x7>
 73e:	55                   	push   rbp
 73f:	48 29 f8             	sub    rax,rdi
 742:	48 89 e5             	mov    rbp,rsp
 745:	48 83 f8 0e          	cmp    rax,0xe
 749:	76 15                	jbe    760 <deregister_tm_clones+0x30>
 74b:	48 8b 05 86 08 20 00 	mov    rax,QWORD PTR [rip+0x200886]        # 200fd8 <_DYNAMIC+0x1e0>
 752:	48 85 c0             	test   rax,rax
 755:	74 09                	je     760 <deregister_tm_clones+0x30>
 757:	5d                   	pop    rbp
 758:	ff e0                	jmp    rax
 75a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
 760:	5d                   	pop    rbp
 761:	c3                   	ret    
 762:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 766:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 76d:	00 00 00 

0000000000000770 <register_tm_clones>:
 770:	48 8d 3d d1 08 20 00 	lea    rdi,[rip+0x2008d1]        # 201048 <__TMC_END__>
 777:	48 8d 35 ca 08 20 00 	lea    rsi,[rip+0x2008ca]        # 201048 <__TMC_END__>
 77e:	55                   	push   rbp
 77f:	48 29 fe             	sub    rsi,rdi
 782:	48 89 e5             	mov    rbp,rsp
 785:	48 c1 fe 03          	sar    rsi,0x3
 789:	48 89 f0             	mov    rax,rsi
 78c:	48 c1 e8 3f          	shr    rax,0x3f
 790:	48 01 c6             	add    rsi,rax
 793:	48 d1 fe             	sar    rsi,1
 796:	74 18                	je     7b0 <register_tm_clones+0x40>
 798:	48 8b 05 51 08 20 00 	mov    rax,QWORD PTR [rip+0x200851]        # 200ff0 <_DYNAMIC+0x1f8>
 79f:	48 85 c0             	test   rax,rax
 7a2:	74 0c                	je     7b0 <register_tm_clones+0x40>
 7a4:	5d                   	pop    rbp
 7a5:	ff e0                	jmp    rax
 7a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 7ae:	00 00 
 7b0:	5d                   	pop    rbp
 7b1:	c3                   	ret    
 7b2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 7b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 7bd:	00 00 00 

00000000000007c0 <__do_global_dtors_aux>:
 7c0:	80 3d 89 08 20 00 00 	cmp    BYTE PTR [rip+0x200889],0x0        # 201050 <completed.7594>
 7c7:	75 27                	jne    7f0 <__do_global_dtors_aux+0x30>
 7c9:	48 83 3d 27 08 20 00 	cmp    QWORD PTR [rip+0x200827],0x0        # 200ff8 <_DYNAMIC+0x200>
 7d0:	00 
 7d1:	55                   	push   rbp
 7d2:	48 89 e5             	mov    rbp,rsp
 7d5:	74 0c                	je     7e3 <__do_global_dtors_aux+0x23>
 7d7:	48 8b 3d 62 08 20 00 	mov    rdi,QWORD PTR [rip+0x200862]        # 201040 <__dso_handle>
 7de:	e8 15 ff ff ff       	call   6f8 <__libc_start_main@plt+0x18>
 7e3:	e8 48 ff ff ff       	call   730 <deregister_tm_clones>
 7e8:	5d                   	pop    rbp
 7e9:	c6 05 60 08 20 00 01 	mov    BYTE PTR [rip+0x200860],0x1        # 201050 <completed.7594>
 7f0:	f3 c3                	repz ret 
 7f2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 7f6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 7fd:	00 00 00 

0000000000000800 <frame_dummy>:
 800:	48 8d 3d e9 05 20 00 	lea    rdi,[rip+0x2005e9]        # 200df0 <__JCR_END__>
 807:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
 80b:	75 0b                	jne    818 <frame_dummy+0x18>
 80d:	e9 5e ff ff ff       	jmp    770 <register_tm_clones>
 812:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
 818:	48 8b 05 c9 07 20 00 	mov    rax,QWORD PTR [rip+0x2007c9]        # 200fe8 <_DYNAMIC+0x1f0>
 81f:	48 85 c0             	test   rax,rax
 822:	74 e9                	je     80d <frame_dummy+0xd>
 824:	55                   	push   rbp
 825:	48 89 e5             	mov    rbp,rsp
 828:	ff d0                	call   rax
 82a:	5d                   	pop    rbp
 82b:	e9 40 ff ff ff       	jmp    770 <register_tm_clones>

0000000000000830 <main>:
 830:	55                   	push   rbp
 831:	48 89 e5             	mov    rbp,rsp
 834:	48 83 ec 40          	sub    rsp,0x40
 838:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
 83f:	00 00 
 841:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 845:	31 c0                	xor    eax,eax
 847:	48 8d 55 c0          	lea    rdx,[rbp-0x40]
 84b:	b8 00 00 00 00       	mov    eax,0x0
 850:	b9 06 00 00 00       	mov    ecx,0x6
 855:	48 89 d7             	mov    rdi,rdx
 858:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
 85b:	48 8b 05 e6 07 20 00 	mov    rax,QWORD PTR [rip+0x2007e6]        # 201048 <__TMC_END__>
 862:	be 00 00 00 00       	mov    esi,0x0
 867:	48 89 c7             	mov    rdi,rax
 86a:	e8 41 fe ff ff       	call   6b0 <setbuf@plt>
 86f:	48 8d 45 c0          	lea    rax,[rbp-0x40]
 873:	ba 30 00 00 00       	mov    edx,0x30
 878:	48 89 c6             	mov    rsi,rax
 87b:	bf 00 00 00 00       	mov    edi,0x0
 880:	e8 4b fe ff ff       	call   6d0 <read@plt>
 885:	48 8d 45 c0          	lea    rax,[rbp-0x40]
 889:	48 89 c7             	mov    rdi,rax
 88c:	b8 00 00 00 00       	mov    eax,0x0
 891:	e8 2a fe ff ff       	call   6c0 <printf@plt>
 896:	eb d7                	jmp    86f <main+0x3f>
 898:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 89f:	00 

00000000000008a0 <__libc_csu_init>:
 8a0:	41 57                	push   r15
 8a2:	41 56                	push   r14
 8a4:	41 89 ff             	mov    r15d,edi
 8a7:	41 55                	push   r13
 8a9:	41 54                	push   r12
 8ab:	4c 8d 25 2e 05 20 00 	lea    r12,[rip+0x20052e]        # 200de0 <__frame_dummy_init_array_entry>
 8b2:	55                   	push   rbp
 8b3:	48 8d 2d 2e 05 20 00 	lea    rbp,[rip+0x20052e]        # 200de8 <__init_array_end>
 8ba:	53                   	push   rbx
 8bb:	49 89 f6             	mov    r14,rsi
 8be:	49 89 d5             	mov    r13,rdx
 8c1:	4c 29 e5             	sub    rbp,r12
 8c4:	48 83 ec 08          	sub    rsp,0x8
 8c8:	48 c1 fd 03          	sar    rbp,0x3
 8cc:	e8 a7 fd ff ff       	call   678 <_init>
 8d1:	48 85 ed             	test   rbp,rbp
 8d4:	74 20                	je     8f6 <__libc_csu_init+0x56>
 8d6:	31 db                	xor    ebx,ebx
 8d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 8df:	00 
 8e0:	4c 89 ea             	mov    rdx,r13
 8e3:	4c 89 f6             	mov    rsi,r14
 8e6:	44 89 ff             	mov    edi,r15d
 8e9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 8ed:	48 83 c3 01          	add    rbx,0x1
 8f1:	48 39 eb             	cmp    rbx,rbp
 8f4:	75 ea                	jne    8e0 <__libc_csu_init+0x40>
 8f6:	48 83 c4 08          	add    rsp,0x8
 8fa:	5b                   	pop    rbx
 8fb:	5d                   	pop    rbp
 8fc:	41 5c                	pop    r12
 8fe:	41 5d                	pop    r13
 900:	41 5e                	pop    r14
 902:	41 5f                	pop    r15
 904:	c3                   	ret    
 905:	90                   	nop
 906:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 90d:	00 00 00 

0000000000000910 <__libc_csu_fini>:
 910:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000000914 <_fini>:
 914:	48 83 ec 08          	sub    rsp,0x8
 918:	48 83 c4 08          	add    rsp,0x8
 91c:	c3                   	ret    
