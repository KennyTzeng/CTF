
hitcon:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000270 <.interp>:
 270:	2f                   	(bad)  
 271:	6c                   	ins    BYTE PTR es:[rdi],dx
 272:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 279:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 27e:	78 2d                	js     2ad <tbuf+0x26d>
 280:	78 38                	js     2ba <tbuf+0x27a>
 282:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 288:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 289:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

000000000000028c <.note.ABI-tag>:
 28c:	04 00                	add    al,0x0
 28e:	00 00                	add    BYTE PTR [rax],al
 290:	10 00                	adc    BYTE PTR [rax],al
 292:	00 00                	add    BYTE PTR [rax],al
 294:	01 00                	add    DWORD PTR [rax],eax
 296:	00 00                	add    BYTE PTR [rax],al
 298:	47                   	rex.RXB
 299:	4e 55                	rex.WRX push rbp
 29b:	00 00                	add    BYTE PTR [rax],al
 29d:	00 00                	add    BYTE PTR [rax],al
 29f:	00 03                	add    BYTE PTR [rbx],al
 2a1:	00 00                	add    BYTE PTR [rax],al
 2a3:	00 02                	add    BYTE PTR [rdx],al
 2a5:	00 00                	add    BYTE PTR [rax],al
 2a7:	00 00                	add    BYTE PTR [rax],al
 2a9:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000002ac <.note.gnu.build-id>:
 2ac:	04 00                	add    al,0x0
 2ae:	00 00                	add    BYTE PTR [rax],al
 2b0:	14 00                	adc    al,0x0
 2b2:	00 00                	add    BYTE PTR [rax],al
 2b4:	03 00                	add    eax,DWORD PTR [rax]
 2b6:	00 00                	add    BYTE PTR [rax],al
 2b8:	47                   	rex.RXB
 2b9:	4e 55                	rex.WRX push rbp
 2bb:	00 03                	add    BYTE PTR [rbx],al
 2bd:	cb                   	retf   
 2be:	12 ca                	adc    cl,dl
 2c0:	80 c6 25             	add    dh,0x25
 2c3:	79 ce                	jns    293 <tbuf+0x253>
 2c5:	e7 63                	out    0x63,eax
 2c7:	7e b3                	jle    27c <tbuf+0x23c>
 2c9:	c0 fd cd             	sar    ch,0xcd
 2cc:	17                   	(bad)  
 2cd:	c1                   	.byte 0xc1
 2ce:	96                   	xchg   esi,eax
 2cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]

Disassembly of section .gnu.hash:

00000000000002d0 <.gnu.hash>:
 2d0:	02 00                	add    al,BYTE PTR [rax]
 2d2:	00 00                	add    BYTE PTR [rax],al
 2d4:	25 00 00 00 01       	and    eax,0x1000000
 2d9:	00 00                	add    BYTE PTR [rax],al
 2db:	00 06                	add    BYTE PTR [rsi],al
 2dd:	00 00                	add    BYTE PTR [rax],al
 2df:	00 00                	add    BYTE PTR [rax],al
 2e1:	00 20                	add    BYTE PTR [rax],ah
 2e3:	00 80 01 10 00 25    	add    BYTE PTR [rax+0x25001001],al
 2e9:	00 00                	add    BYTE PTR [rax],al
 2eb:	00 26                	add    BYTE PTR [rsi],ah
 2ed:	00 00                	add    BYTE PTR [rax],al
 2ef:	00 29                	add    BYTE PTR [rcx],ch
 2f1:	1d 8c 1c 67 55       	sbb    eax,0x55671c8c
 2f6:	61                   	(bad)  
 2f7:	10                   	.byte 0x10

Disassembly of section .dynsym:

00000000000002f8 <.dynsym>:
	...
 310:	e7 00                	out    0x0,eax
 312:	00 00                	add    BYTE PTR [rax],al
 314:	12 00                	adc    al,BYTE PTR [rax]
	...
 326:	00 00                	add    BYTE PTR [rax],al
 328:	e6 00                	out    0x0,al
 32a:	00 00                	add    BYTE PTR [rax],al
 32c:	12 00                	adc    al,BYTE PTR [rax]
	...
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	ef                   	out    dx,eax
 341:	00 00                	add    BYTE PTR [rax],al
 343:	00 12                	add    BYTE PTR [rdx],dl
	...
 355:	00 00                	add    BYTE PTR [rax],al
 357:	00 63 01             	add    BYTE PTR [rbx+0x1],ah
 35a:	00 00                	add    BYTE PTR [rax],al
 35c:	12 00                	adc    al,BYTE PTR [rax]
	...
 36e:	00 00                	add    BYTE PTR [rax],al
 370:	6a 01                	push   0x1
 372:	00 00                	add    BYTE PTR [rax],al
 374:	22 00                	and    al,BYTE PTR [rax]
	...
 386:	00 00                	add    BYTE PTR [rax],al
 388:	39 01                	cmp    DWORD PTR [rcx],eax
 38a:	00 00                	add    BYTE PTR [rax],al
 38c:	12 00                	adc    al,BYTE PTR [rax]
	...
 39e:	00 00                	add    BYTE PTR [rax],al
 3a0:	56                   	push   rsi
 3a1:	00 00                	add    BYTE PTR [rax],al
 3a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 3b5:	00 00                	add    BYTE PTR [rax],al
 3b7:	00 fa                	add    dl,bh
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 40 01             	add    BYTE PTR [rax+0x1],al
 3d2:	00 00                	add    BYTE PTR [rax],al
 3d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 3e6:	00 00                	add    BYTE PTR [rax],al
 3e8:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 3eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 3fd:	00 00                	add    BYTE PTR [rax],al
 3ff:	00 87 00 00 00 11    	add    BYTE PTR [rdi+0x11000000],al
	...
 415:	00 00                	add    BYTE PTR [rax],al
 417:	00 f5                	add    ch,dh
 419:	00 00                	add    BYTE PTR [rax],al
 41b:	00 12                	add    BYTE PTR [rdx],dl
	...
 42d:	00 00                	add    BYTE PTR [rax],al
 42f:	00 57 01             	add    BYTE PTR [rdi+0x1],dl
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	ee                   	out    dx,al
 449:	00 00                	add    BYTE PTR [rax],al
 44b:	00 12                	add    BYTE PTR [rdx],dl
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 d6                	add    dh,dl
 461:	00 00                	add    BYTE PTR [rax],al
 463:	00 12                	add    BYTE PTR [rdx],dl
	...
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 07                	add    BYTE PTR [rdi],al
 479:	01 00                	add    DWORD PTR [rax],eax
 47b:	00 12                	add    BYTE PTR [rdx],dl
	...
 48d:	00 00                	add    BYTE PTR [rax],al
 48f:	00 f4                	add    ah,dh
 491:	00 00                	add    BYTE PTR [rax],al
 493:	00 12                	add    BYTE PTR [rdx],dl
	...
 4a5:	00 00                	add    BYTE PTR [rax],al
 4a7:	00 27                	add    BYTE PTR [rdi],ah
 4a9:	01 00                	add    DWORD PTR [rax],eax
 4ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 ad 00 00 00 11    	add    BYTE PTR [rbp+0x11000000],ch
	...
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 79 01             	add    BYTE PTR [rcx+0x1],bh
 4da:	00 00                	add    BYTE PTR [rax],al
 4dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 4ee:	00 00                	add    BYTE PTR [rax],al
 4f0:	47 01 00             	rex.RXB add DWORD PTR [r8],r8d
 4f3:	00 12                	add    BYTE PTR [rdx],dl
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 18                	add    BYTE PTR [rax],bl
 509:	01 00                	add    DWORD PTR [rax],eax
 50b:	00 12                	add    BYTE PTR [rdx],dl
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 86 01 00 00 12    	add    BYTE PTR [rsi+0x12000001],al
	...
 535:	00 00                	add    BYTE PTR [rax],al
 537:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
 53a:	00 00                	add    BYTE PTR [rax],al
 53c:	12 00                	adc    al,BYTE PTR [rax]
	...
 54e:	00 00                	add    BYTE PTR [rax],al
 550:	7f 01                	jg     553 <tbuf+0x513>
 552:	00 00                	add    BYTE PTR [rax],al
 554:	12 00                	adc    al,BYTE PTR [rax]
	...
 566:	00 00                	add    BYTE PTR [rax],al
 568:	5e                   	pop    rsi
 569:	01 00                	add    DWORD PTR [rax],eax
 56b:	00 12                	add    BYTE PTR [rdx],dl
	...
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 5d 01             	add    BYTE PTR [rbp+0x1],bl
 582:	00 00                	add    BYTE PTR [rax],al
 584:	12 00                	adc    al,BYTE PTR [rax]
	...
 596:	00 00                	add    BYTE PTR [rax],al
 598:	02 01                	add    al,BYTE PTR [rcx]
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	33 01                	xor    eax,DWORD PTR [rcx]
 5b2:	00 00                	add    BYTE PTR [rax],al
 5b4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	26 01 00             	add    DWORD PTR es:[rax],eax
 5cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 5dd:	00 00                	add    BYTE PTR [rax],al
 5df:	00 11                	add    BYTE PTR [rcx],dl
 5e1:	00 00                	add    BYTE PTR [rax],al
 5e3:	00 20                	add    BYTE PTR [rax],ah
	...
 5f5:	00 00                	add    BYTE PTR [rax],al
 5f7:	00 2c 01             	add    BYTE PTR [rcx+rax*1],ch
 5fa:	00 00                	add    BYTE PTR [rax],al
 5fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 60e:	00 00                	add    BYTE PTR [rax],al
 610:	8d 01                	lea    eax,[rcx]
 612:	00 00                	add    BYTE PTR [rax],al
 614:	12 00                	adc    al,BYTE PTR [rax]
	...
 626:	00 00                	add    BYTE PTR [rax],al
 628:	78 00                	js     62a <tbuf+0x5ea>
 62a:	00 00                	add    BYTE PTR [rax],al
 62c:	20 00                	and    BYTE PTR [rax],al
	...
 63e:	00 00                	add    BYTE PTR [rax],al
 640:	2d 00 00 00 20       	sub    eax,0x20000000
	...
 655:	00 00                	add    BYTE PTR [rax],al
 657:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
 65a:	00 00                	add    BYTE PTR [rax],al
 65c:	12 00                	adc    al,BYTE PTR [rax]
	...
 66e:	00 00                	add    BYTE PTR [rax],al
 670:	4f 01 00             	rex.WRXB add QWORD PTR [r8],r8
 673:	00 11                	add    BYTE PTR [rcx],dl
 675:	00 1b                	add    BYTE PTR [rbx],bl
 677:	00 40 40             	add    BYTE PTR [rax+0x40],al
 67a:	20 00                	and    BYTE PTR [rax],al
 67c:	00 00                	add    BYTE PTR [rax],al
 67e:	00 00                	add    BYTE PTR [rax],al
 680:	08 00                	or     BYTE PTR [rax],al
 682:	00 00                	add    BYTE PTR [rax],al
 684:	00 00                	add    BYTE PTR [rax],al
 686:	00 00                	add    BYTE PTR [rax],al
 688:	20 01                	and    BYTE PTR [rcx],al
 68a:	00 00                	add    BYTE PTR [rax],al
 68c:	11 00                	adc    DWORD PTR [rax],eax
 68e:	1b 00                	sbb    eax,DWORD PTR [rax]
 690:	50                   	push   rax
 691:	40 20 00             	and    BYTE PTR [rax],al
 694:	00 00                	add    BYTE PTR [rax],al
 696:	00 00                	add    BYTE PTR [rax],al
 698:	08 00                	or     BYTE PTR [rax],al
 69a:	00 00                	add    BYTE PTR [rax],al
 69c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

00000000000006a0 <.dynstr>:
 6a0:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 6a4:	70 74                	jo     71a <tbuf+0x6da>
 6a6:	68 72 65 61 64       	push   0x64616572
 6ab:	2e 73 6f             	cs jae 71d <tbuf+0x6dd>
 6ae:	2e 30 00             	xor    BYTE PTR cs:[rax],al
 6b1:	5f                   	pop    rdi
 6b2:	49 54                	rex.WB push r12
 6b4:	4d 5f                	rex.WRB pop r15
 6b6:	64 65 72 65          	fs gs jb 71f <tbuf+0x6df>
 6ba:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 6c1:	4d 
 6c2:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 6c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6c6:	65 54                	gs push rsp
 6c8:	61                   	(bad)  
 6c9:	62                   	(bad)  
 6ca:	6c                   	ins    BYTE PTR es:[rdi],dx
 6cb:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
 6cf:	54                   	push   rsp
 6d0:	4d 5f                	rex.WRB pop r15
 6d2:	72 65                	jb     739 <tbuf+0x6f9>
 6d4:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 6db:	4d 
 6dc:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 6de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6e0:	65 54                	gs push rsp
 6e2:	61                   	(bad)  
 6e3:	62                   	(bad)  
 6e4:	6c                   	ins    BYTE PTR es:[rdi],dx
 6e5:	65 00 70 74          	add    BYTE PTR gs:[rax+0x74],dh
 6e9:	68 72 65 61 64       	push   0x64616572
 6ee:	5f                   	pop    rdi
 6ef:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
 6f2:	61                   	(bad)  
 6f3:	74 65                	je     75a <tbuf+0x71a>
 6f5:	00 70 74             	add    BYTE PTR [rax+0x74],dh
 6f8:	68 72 65 61 64       	push   0x64616572
 6fd:	5f                   	pop    rdi
 6fe:	6a 6f                	push   0x6f
 700:	69 6e 00 63 6c 6f 73 	imul   ebp,DWORD PTR [rsi+0x0],0x736f6c63
 707:	65 00 6c 69 62       	add    BYTE PTR gs:[rcx+rbp*2+0x62],ch
 70c:	73 74                	jae    782 <tbuf+0x742>
 70e:	64 63 2b             	movsxd ebp,DWORD PTR fs:[rbx]
 711:	2b 2e                	sub    ebp,DWORD PTR [rsi]
 713:	73 6f                	jae    784 <tbuf+0x744>
 715:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 71a:	67 6d                	ins    DWORD PTR es:[edi],dx
 71c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 71d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 71e:	5f                   	pop    rdi
 71f:	73 74                	jae    795 <tbuf+0x755>
 721:	61                   	(bad)  
 722:	72 74                	jb     798 <tbuf+0x758>
 724:	5f                   	pop    rdi
 725:	5f                   	pop    rdi
 726:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 729:	54                   	push   rsp
 72a:	56                   	push   rsi
 72b:	4e 31 30             	rex.WRX xor QWORD PTR [rax],r14
 72e:	5f                   	pop    rdi
 72f:	5f                   	pop    rdi
 730:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
 733:	61                   	(bad)  
 734:	62                   	(bad)  
 735:	69 76 31 31 37 5f 5f 	imul   esi,DWORD PTR [rsi+0x31],0x5f5f3731
 73c:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
 740:	73 5f                	jae    7a1 <tbuf+0x761>
 742:	74 79                	je     7bd <tbuf+0x77d>
 744:	70 65                	jo     7ab <tbuf+0x76b>
 746:	5f                   	pop    rdi
 747:	69 6e 66 6f 45 00 5f 	imul   ebp,DWORD PTR [rsi+0x66],0x5f00456f
 74e:	5a                   	pop    rdx
 74f:	54                   	push   rsp
 750:	56                   	push   rsi
 751:	4e 31 30             	rex.WRX xor QWORD PTR [rax],r14
 754:	5f                   	pop    rdi
 755:	5f                   	pop    rdi
 756:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
 759:	61                   	(bad)  
 75a:	62                   	(bad)  
 75b:	69 76 31 32 30 5f 5f 	imul   esi,DWORD PTR [rsi+0x31],0x5f5f3032
 762:	73 69                	jae    7cd <tbuf+0x78d>
 764:	5f                   	pop    rdi
 765:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
 769:	73 5f                	jae    7ca <tbuf+0x78a>
 76b:	74 79                	je     7e6 <tbuf+0x7a6>
 76d:	70 65                	jo     7d4 <tbuf+0x794>
 76f:	5f                   	pop    rdi
 770:	69 6e 66 6f 45 00 5f 	imul   ebp,DWORD PTR [rsi+0x66],0x5f00456f
 777:	5a                   	pop    rdx
 778:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 779:	77 6d                	ja     7e8 <tbuf+0x7a8>
 77b:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 77f:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 781:	73 6f                	jae    7f2 <tbuf+0x7b2>
 783:	2e 36 00 73 70       	cs add BYTE PTR ss:[rbx+0x70],dh
 788:	72 69                	jb     7f3 <tbuf+0x7b3>
 78a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 78b:	74 66                	je     7f3 <tbuf+0x7b3>
 78d:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
 790:	61                   	(bad)  
 791:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 792:	64 00 66 6f          	add    BYTE PTR fs:[rsi+0x6f],ah
 796:	70 65                	jo     7fd <tbuf+0x7bd>
 798:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 799:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 79c:	72 6e                	jb     80c <tbuf+0x7cc>
 79e:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 7a1:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 7a4:	74 73                	je     819 <tbuf+0x7d9>
 7a6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 7a9:	73 74                	jae    81f <tbuf+0x7df>
 7ab:	61                   	(bad)  
 7ac:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 7af:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 7b2:	5f                   	pop    rdi
 7b3:	66 61                	data16 (bad) 
 7b5:	69 6c 00 70 75 74 63 	imul   ebp,DWORD PTR [rax+rax*1+0x70],0x68637475
 7bc:	68 
 7bd:	61                   	(bad)  
 7be:	72 00                	jb     7c0 <tbuf+0x780>
 7c0:	73 74                	jae    836 <tbuf+0x7f6>
 7c2:	64 69 6e 00 5f 65 78 	imul   ebp,DWORD PTR fs:[rsi+0x0],0x6978655f
 7c9:	69 
 7ca:	74 00                	je     7cc <tbuf+0x78c>
 7cc:	73 74                	jae    842 <tbuf+0x802>
 7ce:	72 64                	jb     834 <tbuf+0x7f4>
 7d0:	75 70                	jne    842 <tbuf+0x802>
 7d2:	00 66 67             	add    BYTE PTR [rsi+0x67],ah
 7d5:	65 74 73             	gs je  84b <tbuf+0x80b>
 7d8:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 7db:	72 6c                	jb     849 <tbuf+0x809>
 7dd:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 7df:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 7e2:	6d                   	ins    DWORD PTR es:[rdi],dx
 7e3:	73 65                	jae    84a <tbuf+0x80a>
 7e5:	74 00                	je     7e7 <tbuf+0x7a7>
 7e7:	67 65 74 63          	addr32 gs je 84e <tbuf+0x80e>
 7eb:	68 61 72 00 73       	push   0x73007261
 7f0:	74 64                	je     856 <tbuf+0x816>
 7f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7f3:	75 74                	jne    869 <tbuf+0x829>
 7f5:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
 7f8:	6c                   	ins    BYTE PTR es:[rdi],dx
 7f9:	65 65 70 00          	gs gs jo 7fd <tbuf+0x7bd>
 7fd:	66 72 65             	data16 jb 865 <tbuf+0x825>
 800:	61                   	(bad)  
 801:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 805:	72 63                	jb     86a <tbuf+0x82a>
 807:	68 72 00 5f 5f       	push   0x5f5f0072
 80c:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 80f:	5f                   	pop    rdi
 810:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 816:	7a 65                	jp     87d <tbuf+0x83d>
 818:	00 73 63             	add    BYTE PTR [rbx+0x63],dh
 81b:	61                   	(bad)  
 81c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 81d:	66 00 73 65          	data16 add BYTE PTR [rbx+0x65],dh
 821:	74 62                	je     885 <tbuf+0x845>
 823:	75 66                	jne    88b <tbuf+0x84b>
 825:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 828:	72 63                	jb     88d <tbuf+0x84d>
 82a:	6d                   	ins    DWORD PTR es:[rdi],dx
 82b:	70 00                	jo     82d <tbuf+0x7ed>
 82d:	5f                   	pop    rdi
 82e:	5f                   	pop    rdi
 82f:	6c                   	ins    BYTE PTR es:[rdi],dx
 830:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 837:	72 74                	jb     8ad <tbuf+0x86d>
 839:	5f                   	pop    rdi
 83a:	6d                   	ins    DWORD PTR es:[rdi],dx
 83b:	61                   	(bad)  
 83c:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 843:	43 58                	rex.XB pop r8
 845:	58                   	pop    rax
 846:	5f                   	pop    rdi
 847:	33 2e                	xor    ebp,DWORD PTR [rsi]
 849:	34 00                	xor    al,0x0
 84b:	43 58                	rex.XB pop r8
 84d:	58                   	pop    rax
 84e:	41                   	rex.B
 84f:	42                   	rex.X
 850:	49 5f                	rex.WB pop r15
 852:	31 2e                	xor    DWORD PTR [rsi],ebp
 854:	33 00                	xor    eax,DWORD PTR [rax]
 856:	47                   	rex.RXB
 857:	4c                   	rex.WR
 858:	49                   	rex.WB
 859:	42                   	rex.X
 85a:	43 5f                	rex.XB pop r15
 85c:	32 2e                	xor    ch,BYTE PTR [rsi]
 85e:	32 2e                	xor    ch,BYTE PTR [rsi]
 860:	35 00 47 4c 49       	xor    eax,0x494c4700
 865:	42                   	rex.X
 866:	43 5f                	rex.XB pop r15
 868:	32 2e                	xor    ch,BYTE PTR [rsi]
 86a:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

000000000000086c <.gnu.version>:
 86c:	00 00                	add    BYTE PTR [rax],al
 86e:	02 00                	add    al,BYTE PTR [rax]
 870:	02 00                	add    al,BYTE PTR [rax]
 872:	02 00                	add    al,BYTE PTR [rax]
 874:	02 00                	add    al,BYTE PTR [rax]
 876:	02 00                	add    al,BYTE PTR [rax]
 878:	02 00                	add    al,BYTE PTR [rax]
 87a:	03 00                	add    eax,DWORD PTR [rax]
 87c:	02 00                	add    al,BYTE PTR [rax]
 87e:	02 00                	add    al,BYTE PTR [rax]
 880:	03 00                	add    eax,DWORD PTR [rax]
 882:	04 00                	add    al,0x0
 884:	03 00                	add    eax,DWORD PTR [rax]
 886:	02 00                	add    al,BYTE PTR [rax]
 888:	02 00                	add    al,BYTE PTR [rax]
 88a:	05 00 06 00 02       	add    eax,0x2000600
 88f:	00 02                	add    BYTE PTR [rdx],al
 891:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 894:	02 00                	add    al,BYTE PTR [rax]
 896:	02 00                	add    al,BYTE PTR [rax]
 898:	02 00                	add    al,BYTE PTR [rax]
 89a:	02 00                	add    al,BYTE PTR [rax]
 89c:	02 00                	add    al,BYTE PTR [rax]
 89e:	02 00                	add    al,BYTE PTR [rax]
 8a0:	03 00                	add    eax,DWORD PTR [rax]
 8a2:	02 00                	add    al,BYTE PTR [rax]
 8a4:	02 00                	add    al,BYTE PTR [rax]
 8a6:	02 00                	add    al,BYTE PTR [rax]
 8a8:	02 00                	add    al,BYTE PTR [rax]
 8aa:	00 00                	add    BYTE PTR [rax],al
 8ac:	02 00                	add    al,BYTE PTR [rax]
 8ae:	02 00                	add    al,BYTE PTR [rax]
 8b0:	00 00                	add    BYTE PTR [rax],al
 8b2:	00 00                	add    BYTE PTR [rax],al
 8b4:	03 00                	add    eax,DWORD PTR [rax]
 8b6:	02 00                	add    al,BYTE PTR [rax]
 8b8:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

00000000000008c0 <.gnu.version_r>:
 8c0:	01 00                	add    DWORD PTR [rax],eax
 8c2:	02 00                	add    al,BYTE PTR [rax]
 8c4:	69 00 00 00 10 00    	imul   eax,DWORD PTR [rax],0x100000
 8ca:	00 00                	add    BYTE PTR [rax],al
 8cc:	30 00                	xor    BYTE PTR [rax],al
 8ce:	00 00                	add    BYTE PTR [rax],al
 8d0:	74 29                	je     8fb <tbuf+0x8bb>
 8d2:	92                   	xchg   edx,eax
 8d3:	08 00                	or     BYTE PTR [rax],al
 8d5:	00 05 00 9f 01 00    	add    BYTE PTR [rip+0x19f00],al        # 1a7db <__FRAME_END__+0x16cbf>
 8db:	00 10                	add    BYTE PTR [rax],dl
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	00 d3                	add    bl,dl
 8e1:	af                   	scas   eax,DWORD PTR es:[rdi]
 8e2:	6b 05 00 00 04 00 ab 	imul   eax,DWORD PTR [rip+0x40000],0xffffffab        # 408e9 <__FRAME_END__+0x3cdcd>
 8e9:	01 00                	add    DWORD PTR [rax],eax
 8eb:	00 00                	add    BYTE PTR [rax],al
 8ed:	00 00                	add    BYTE PTR [rax],al
 8ef:	00 01                	add    BYTE PTR [rcx],al
 8f1:	00 01                	add    BYTE PTR [rcx],al
 8f3:	00 01                	add    BYTE PTR [rcx],al
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 10                	add    BYTE PTR [rax],dl
 8f9:	00 00                	add    BYTE PTR [rax],al
 8fb:	00 20                	add    BYTE PTR [rax],ah
 8fd:	00 00                	add    BYTE PTR [rax],al
 8ff:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 902:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 908:	b6 01                	mov    dh,0x1
 90a:	00 00                	add    BYTE PTR [rax],al
 90c:	00 00                	add    BYTE PTR [rax],al
 90e:	00 00                	add    BYTE PTR [rax],al
 910:	01 00                	add    DWORD PTR [rax],eax
 912:	02 00                	add    al,BYTE PTR [rax]
 914:	dc 00                	fadd   QWORD PTR [rax]
 916:	00 00                	add    BYTE PTR [rax],al
 918:	10 00                	adc    BYTE PTR [rax],al
 91a:	00 00                	add    BYTE PTR [rax],al
 91c:	00 00                	add    BYTE PTR [rax],al
 91e:	00 00                	add    BYTE PTR [rax],al
 920:	14 69                	adc    al,0x69
 922:	69 0d 00 00 06 00 c2 	imul   ecx,DWORD PTR [rip+0x60000],0x1c2        # 6092c <__FRAME_END__+0x5ce10>
 929:	01 00 00 
 92c:	10 00                	adc    BYTE PTR [rax],al
 92e:	00 00                	add    BYTE PTR [rax],al
 930:	75 1a                	jne    94c <tbuf+0x90c>
 932:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 938:	b6 01                	mov    dh,0x1
 93a:	00 00                	add    BYTE PTR [rax],al
 93c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000940 <.rela.dyn>:
 940:	c0 3b 20             	sar    BYTE PTR [rbx],0x20
 943:	00 00                	add    BYTE PTR [rax],al
 945:	00 00                	add    BYTE PTR [rax],al
 947:	00 08                	add    BYTE PTR [rax],cl
 949:	00 00                	add    BYTE PTR [rax],al
 94b:	00 00                	add    BYTE PTR [rax],al
 94d:	00 00                	add    BYTE PTR [rax],al
 94f:	00 c0                	add    al,al
 951:	12 00                	adc    al,BYTE PTR [rax]
 953:	00 00                	add    BYTE PTR [rax],al
 955:	00 00                	add    BYTE PTR [rax],al
 957:	00 c8                	add    al,cl
 959:	3b 20                	cmp    esp,DWORD PTR [rax]
 95b:	00 00                	add    BYTE PTR [rax],al
 95d:	00 00                	add    BYTE PTR [rax],al
 95f:	00 08                	add    BYTE PTR [rax],cl
 961:	00 00                	add    BYTE PTR [rax],al
 963:	00 00                	add    BYTE PTR [rax],al
 965:	00 00                	add    BYTE PTR [rax],al
 967:	00 4a 29             	add    BYTE PTR [rdx+0x29],cl
 96a:	00 00                	add    BYTE PTR [rax],al
 96c:	00 00                	add    BYTE PTR [rax],al
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	d0 3b                	sar    BYTE PTR [rbx],1
 972:	20 00                	and    BYTE PTR [rax],al
 974:	00 00                	add    BYTE PTR [rax],al
 976:	00 00                	add    BYTE PTR [rax],al
 978:	08 00                	or     BYTE PTR [rax],al
 97a:	00 00                	add    BYTE PTR [rax],al
 97c:	00 00                	add    BYTE PTR [rax],al
 97e:	00 00                	add    BYTE PTR [rax],al
 980:	80 12 00             	adc    BYTE PTR [rdx],0x0
 983:	00 00                	add    BYTE PTR [rax],al
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 e0                	add    al,ah
 989:	3b 20                	cmp    esp,DWORD PTR [rax]
 98b:	00 00                	add    BYTE PTR [rax],al
 98d:	00 00                	add    BYTE PTR [rax],al
 98f:	00 08                	add    BYTE PTR [rax],cl
 991:	00 00                	add    BYTE PTR [rax],al
 993:	00 00                	add    BYTE PTR [rax],al
 995:	00 00                	add    BYTE PTR [rax],al
 997:	00 80 3c 20 00 00    	add    BYTE PTR [rax+0x203c],al
 99d:	00 00                	add    BYTE PTR [rax],al
 99f:	00 e8                	add    al,ch
 9a1:	3b 20                	cmp    esp,DWORD PTR [rax]
 9a3:	00 00                	add    BYTE PTR [rax],al
 9a5:	00 00                	add    BYTE PTR [rax],al
 9a7:	00 08                	add    BYTE PTR [rax],cl
 9a9:	00 00                	add    BYTE PTR [rax],al
 9ab:	00 00                	add    BYTE PTR [rax],al
 9ad:	00 00                	add    BYTE PTR [rax],al
 9af:	00 ce                	add    dh,cl
 9b1:	2b 00                	sub    eax,DWORD PTR [rax]
 9b3:	00 00                	add    BYTE PTR [rax],al
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 f0                	add    al,dh
 9b9:	3b 20                	cmp    esp,DWORD PTR [rax]
 9bb:	00 00                	add    BYTE PTR [rax],al
 9bd:	00 00                	add    BYTE PTR [rax],al
 9bf:	00 08                	add    BYTE PTR [rax],cl
 9c1:	00 00                	add    BYTE PTR [rax],al
 9c3:	00 00                	add    BYTE PTR [rax],al
 9c5:	00 00                	add    BYTE PTR [rax],al
 9c7:	00 ee                	add    dh,ch
 9c9:	2b 00                	sub    eax,DWORD PTR [rax]
 9cb:	00 00                	add    BYTE PTR [rax],al
 9cd:	00 00                	add    BYTE PTR [rax],al
 9cf:	00 f8                	add    al,bh
 9d1:	3b 20                	cmp    esp,DWORD PTR [rax]
 9d3:	00 00                	add    BYTE PTR [rax],al
 9d5:	00 00                	add    BYTE PTR [rax],al
 9d7:	00 08                	add    BYTE PTR [rax],cl
 9d9:	00 00                	add    BYTE PTR [rax],al
 9db:	00 00                	add    BYTE PTR [rax],al
 9dd:	00 00                	add    BYTE PTR [rax],al
 9df:	00 0e                	add    BYTE PTR [rsi],cl
 9e1:	2c 00                	sub    al,0x0
 9e3:	00 00                	add    BYTE PTR [rax],al
 9e5:	00 00                	add    BYTE PTR [rax],al
 9e7:	00 00                	add    BYTE PTR [rax],al
 9e9:	3c 20                	cmp    al,0x20
 9eb:	00 00                	add    BYTE PTR [rax],al
 9ed:	00 00                	add    BYTE PTR [rax],al
 9ef:	00 08                	add    BYTE PTR [rax],cl
 9f1:	00 00                	add    BYTE PTR [rax],al
 9f3:	00 00                	add    BYTE PTR [rax],al
 9f5:	00 00                	add    BYTE PTR [rax],al
 9f7:	00 1a                	add    BYTE PTR [rdx],bl
 9f9:	2d 00 00 00 00       	sub    eax,0x0
 9fe:	00 00                	add    BYTE PTR [rax],al
 a00:	08 3c 20             	or     BYTE PTR [rax+riz*1],bh
 a03:	00 00                	add    BYTE PTR [rax],al
 a05:	00 00                	add    BYTE PTR [rax],al
 a07:	00 08                	add    BYTE PTR [rax],cl
 a09:	00 00                	add    BYTE PTR [rax],al
 a0b:	00 00                	add    BYTE PTR [rax],al
 a0d:	00 00                	add    BYTE PTR [rax],al
 a0f:	00 5c 2d 00          	add    BYTE PTR [rbp+rbp*1+0x0],bl
 a13:	00 00                	add    BYTE PTR [rax],al
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 18                	add    BYTE PTR [rax],bl
 a19:	3c 20                	cmp    al,0x20
 a1b:	00 00                	add    BYTE PTR [rax],al
 a1d:	00 00                	add    BYTE PTR [rax],al
 a1f:	00 08                	add    BYTE PTR [rax],cl
 a21:	00 00                	add    BYTE PTR [rax],al
 a23:	00 00                	add    BYTE PTR [rax],al
 a25:	00 00                	add    BYTE PTR [rax],al
 a27:	00 98 3c 20 00 00    	add    BYTE PTR [rax+0x203c],bl
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 20                	add    BYTE PTR [rax],ah
 a31:	3c 20                	cmp    al,0x20
 a33:	00 00                	add    BYTE PTR [rax],al
 a35:	00 00                	add    BYTE PTR [rax],al
 a37:	00 08                	add    BYTE PTR [rax],cl
 a39:	00 00                	add    BYTE PTR [rax],al
 a3b:	00 00                	add    BYTE PTR [rax],al
 a3d:	00 00                	add    BYTE PTR [rax],al
 a3f:	00 a6 29 00 00 00    	add    BYTE PTR [rsi+0x29],ah
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 28                	add    BYTE PTR [rax],ch
 a49:	3c 20                	cmp    al,0x20
 a4b:	00 00                	add    BYTE PTR [rax],al
 a4d:	00 00                	add    BYTE PTR [rax],al
 a4f:	00 08                	add    BYTE PTR [rax],cl
 a51:	00 00                	add    BYTE PTR [rax],al
 a53:	00 00                	add    BYTE PTR [rax],al
 a55:	00 00                	add    BYTE PTR [rax],al
 a57:	00 b6 29 00 00 00    	add    BYTE PTR [rsi+0x29],dh
 a5d:	00 00                	add    BYTE PTR [rax],al
 a5f:	00 30                	add    BYTE PTR [rax],dh
 a61:	3c 20                	cmp    al,0x20
 a63:	00 00                	add    BYTE PTR [rax],al
 a65:	00 00                	add    BYTE PTR [rax],al
 a67:	00 08                	add    BYTE PTR [rax],cl
 a69:	00 00                	add    BYTE PTR [rax],al
 a6b:	00 00                	add    BYTE PTR [rax],al
 a6d:	00 00                	add    BYTE PTR [rax],al
 a6f:	00 22                	add    BYTE PTR [rdx],ah
 a71:	2a 00                	sub    al,BYTE PTR [rax]
 a73:	00 00                	add    BYTE PTR [rax],al
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 38                	add    BYTE PTR [rax],bh
 a79:	3c 20                	cmp    al,0x20
 a7b:	00 00                	add    BYTE PTR [rax],al
 a7d:	00 00                	add    BYTE PTR [rax],al
 a7f:	00 08                	add    BYTE PTR [rax],cl
 a81:	00 00                	add    BYTE PTR [rax],al
 a83:	00 00                	add    BYTE PTR [rax],al
 a85:	00 00                	add    BYTE PTR [rax],al
 a87:	00 86 2b 00 00 00    	add    BYTE PTR [rsi+0x2b],al
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 40 3c             	add    BYTE PTR [rax+0x3c],al
 a92:	20 00                	and    BYTE PTR [rax],al
 a94:	00 00                	add    BYTE PTR [rax],al
 a96:	00 00                	add    BYTE PTR [rax],al
 a98:	08 00                	or     BYTE PTR [rax],al
 a9a:	00 00                	add    BYTE PTR [rax],al
 a9c:	00 00                	add    BYTE PTR [rax],al
 a9e:	00 00                	add    BYTE PTR [rax],al
 aa0:	10 2a                	adc    BYTE PTR [rdx],ch
 aa2:	00 00                	add    BYTE PTR [rax],al
 aa4:	00 00                	add    BYTE PTR [rax],al
 aa6:	00 00                	add    BYTE PTR [rax],al
 aa8:	50                   	push   rax
 aa9:	3c 20                	cmp    al,0x20
 aab:	00 00                	add    BYTE PTR [rax],al
 aad:	00 00                	add    BYTE PTR [rax],al
 aaf:	00 08                	add    BYTE PTR [rax],cl
 ab1:	00 00                	add    BYTE PTR [rax],al
 ab3:	00 00                	add    BYTE PTR [rax],al
 ab5:	00 00                	add    BYTE PTR [rax],al
 ab7:	00 b0 3c 20 00 00    	add    BYTE PTR [rax+0x203c],dh
 abd:	00 00                	add    BYTE PTR [rax],al
 abf:	00 58 3c             	add    BYTE PTR [rax+0x3c],bl
 ac2:	20 00                	and    BYTE PTR [rax],al
 ac4:	00 00                	add    BYTE PTR [rax],al
 ac6:	00 00                	add    BYTE PTR [rax],al
 ac8:	08 00                	or     BYTE PTR [rax],al
 aca:	00 00                	add    BYTE PTR [rax],al
 acc:	00 00                	add    BYTE PTR [rax],al
 ace:	00 00                	add    BYTE PTR [rax],al
 ad0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 ad1:	29 00                	sub    DWORD PTR [rax],eax
 ad3:	00 00                	add    BYTE PTR [rax],al
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 60 3c             	add    BYTE PTR [rax+0x3c],ah
 ada:	20 00                	and    BYTE PTR [rax],al
 adc:	00 00                	add    BYTE PTR [rax],al
 ade:	00 00                	add    BYTE PTR [rax],al
 ae0:	08 00                	or     BYTE PTR [rax],al
 ae2:	00 00                	add    BYTE PTR [rax],al
 ae4:	00 00                	add    BYTE PTR [rax],al
 ae6:	00 00                	add    BYTE PTR [rax],al
 ae8:	b6 29                	mov    dh,0x29
 aea:	00 00                	add    BYTE PTR [rax],al
 aec:	00 00                	add    BYTE PTR [rax],al
 aee:	00 00                	add    BYTE PTR [rax],al
 af0:	68 3c 20 00 00       	push   0x203c
 af5:	00 00                	add    BYTE PTR [rax],al
 af7:	00 08                	add    BYTE PTR [rax],cl
 af9:	00 00                	add    BYTE PTR [rax],al
 afb:	00 00                	add    BYTE PTR [rax],al
 afd:	00 00                	add    BYTE PTR [rax],al
 aff:	00 c6                	add    dh,al
 b01:	29 00                	sub    DWORD PTR [rax],eax
 b03:	00 00                	add    BYTE PTR [rax],al
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 70 3c             	add    BYTE PTR [rax+0x3c],dh
 b0a:	20 00                	and    BYTE PTR [rax],al
 b0c:	00 00                	add    BYTE PTR [rax],al
 b0e:	00 00                	add    BYTE PTR [rax],al
 b10:	08 00                	or     BYTE PTR [rax],al
 b12:	00 00                	add    BYTE PTR [rax],al
 b14:	00 00                	add    BYTE PTR [rax],al
 b16:	00 00                	add    BYTE PTR [rax],al
 b18:	00 2a                	add    BYTE PTR [rdx],ch
 b1a:	00 00                	add    BYTE PTR [rax],al
 b1c:	00 00                	add    BYTE PTR [rax],al
 b1e:	00 00                	add    BYTE PTR [rax],al
 b20:	78 3c                	js     b5e <tbuf+0xb1e>
 b22:	20 00                	and    BYTE PTR [rax],al
 b24:	00 00                	add    BYTE PTR [rax],al
 b26:	00 00                	add    BYTE PTR [rax],al
 b28:	08 00                	or     BYTE PTR [rax],al
 b2a:	00 00                	add    BYTE PTR [rax],al
 b2c:	00 00                	add    BYTE PTR [rax],al
 b2e:	00 00                	add    BYTE PTR [rax],al
 b30:	10 2a                	adc    BYTE PTR [rdx],ch
 b32:	00 00                	add    BYTE PTR [rax],al
 b34:	00 00                	add    BYTE PTR [rax],al
 b36:	00 00                	add    BYTE PTR [rax],al
 b38:	88 3c 20             	mov    BYTE PTR [rax+riz*1],bh
 b3b:	00 00                	add    BYTE PTR [rax],al
 b3d:	00 00                	add    BYTE PTR [rax],al
 b3f:	00 08                	add    BYTE PTR [rax],cl
 b41:	00 00                	add    BYTE PTR [rax],al
 b43:	00 00                	add    BYTE PTR [rax],al
 b45:	00 00                	add    BYTE PTR [rax],al
 b47:	00 90 33 00 00 00    	add    BYTE PTR [rax+0x33],dl
 b4d:	00 00                	add    BYTE PTR [rax],al
 b4f:	00 90 3c 20 00 00    	add    BYTE PTR [rax+0x203c],dl
 b55:	00 00                	add    BYTE PTR [rax],al
 b57:	00 08                	add    BYTE PTR [rax],cl
 b59:	00 00                	add    BYTE PTR [rax],al
 b5b:	00 00                	add    BYTE PTR [rax],al
 b5d:	00 00                	add    BYTE PTR [rax],al
 b5f:	00 98 3c 20 00 00    	add    BYTE PTR [rax+0x203c],bl
 b65:	00 00                	add    BYTE PTR [rax],al
 b67:	00 a0 3c 20 00 00    	add    BYTE PTR [rax+0x203c],ah
 b6d:	00 00                	add    BYTE PTR [rax],al
 b6f:	00 08                	add    BYTE PTR [rax],cl
 b71:	00 00                	add    BYTE PTR [rax],al
 b73:	00 00                	add    BYTE PTR [rax],al
 b75:	00 00                	add    BYTE PTR [rax],al
 b77:	00 98 33 00 00 00    	add    BYTE PTR [rax+0x33],bl
 b7d:	00 00                	add    BYTE PTR [rax],al
 b7f:	00 a8 3c 20 00 00    	add    BYTE PTR [rax+0x203c],ch
 b85:	00 00                	add    BYTE PTR [rax],al
 b87:	00 08                	add    BYTE PTR [rax],cl
 b89:	00 00                	add    BYTE PTR [rax],al
 b8b:	00 00                	add    BYTE PTR [rax],al
 b8d:	00 00                	add    BYTE PTR [rax],al
 b8f:	00 b0 3c 20 00 00    	add    BYTE PTR [rax+0x203c],dh
 b95:	00 00                	add    BYTE PTR [rax],al
 b97:	00 b8 3c 20 00 00    	add    BYTE PTR [rax+0x203c],bh
 b9d:	00 00                	add    BYTE PTR [rax],al
 b9f:	00 08                	add    BYTE PTR [rax],cl
 ba1:	00 00                	add    BYTE PTR [rax],al
 ba3:	00 00                	add    BYTE PTR [rax],al
 ba5:	00 00                	add    BYTE PTR [rax],al
 ba7:	00 a8 33 00 00 00    	add    BYTE PTR [rax+0x33],ch
 bad:	00 00                	add    BYTE PTR [rax],al
 baf:	00 08                	add    BYTE PTR [rax],cl
 bb1:	40 20 00             	and    BYTE PTR [rax],al
 bb4:	00 00                	add    BYTE PTR [rax],al
 bb6:	00 00                	add    BYTE PTR [rax],al
 bb8:	08 00                	or     BYTE PTR [rax],al
 bba:	00 00                	add    BYTE PTR [rax],al
 bbc:	00 00                	add    BYTE PTR [rax],al
 bbe:	00 00                	add    BYTE PTR [rax],al
 bc0:	08 40 20             	or     BYTE PTR [rax+0x20],al
 bc3:	00 00                	add    BYTE PTR [rax],al
 bc5:	00 00                	add    BYTE PTR [rax],al
 bc7:	00 10                	add    BYTE PTR [rax],dl
 bc9:	40 20 00             	and    BYTE PTR [rax],al
 bcc:	00 00                	add    BYTE PTR [rax],al
 bce:	00 00                	add    BYTE PTR [rax],al
 bd0:	08 00                	or     BYTE PTR [rax],al
 bd2:	00 00                	add    BYTE PTR [rax],al
 bd4:	00 00                	add    BYTE PTR [rax],al
 bd6:	00 00                	add    BYTE PTR [rax],al
 bd8:	00 31                	add    BYTE PTR [rcx],dh
 bda:	00 00                	add    BYTE PTR [rax],al
 bdc:	00 00                	add    BYTE PTR [rax],al
 bde:	00 00                	add    BYTE PTR [rax],al
 be0:	18 40 20             	sbb    BYTE PTR [rax+0x20],al
 be3:	00 00                	add    BYTE PTR [rax],al
 be5:	00 00                	add    BYTE PTR [rax],al
 be7:	00 08                	add    BYTE PTR [rax],cl
 be9:	00 00                	add    BYTE PTR [rax],al
 beb:	00 00                	add    BYTE PTR [rax],al
 bed:	00 00                	add    BYTE PTR [rax],al
 bef:	00 30                	add    BYTE PTR [rax],dh
 bf1:	31 00                	xor    DWORD PTR [rax],eax
 bf3:	00 00                	add    BYTE PTR [rax],al
 bf5:	00 00                	add    BYTE PTR [rax],al
 bf7:	00 20                	add    BYTE PTR [rax],ah
 bf9:	40 20 00             	and    BYTE PTR [rax],al
 bfc:	00 00                	add    BYTE PTR [rax],al
 bfe:	00 00                	add    BYTE PTR [rax],al
 c00:	08 00                	or     BYTE PTR [rax],al
 c02:	00 00                	add    BYTE PTR [rax],al
 c04:	00 00                	add    BYTE PTR [rax],al
 c06:	00 00                	add    BYTE PTR [rax],al
 c08:	5a                   	pop    rdx
 c09:	31 00                	xor    DWORD PTR [rax],eax
 c0b:	00 00                	add    BYTE PTR [rax],al
 c0d:	00 00                	add    BYTE PTR [rax],al
 c0f:	00 80 3c 20 00 00    	add    BYTE PTR [rax+0x203c],al
 c15:	00 00                	add    BYTE PTR [rax],al
 c17:	00 01                	add    BYTE PTR [rcx],al
 c19:	00 00                	add    BYTE PTR [rax],al
 c1b:	00 13                	add    BYTE PTR [rbx],dl
 c1d:	00 00                	add    BYTE PTR [rax],al
 c1f:	00 10                	add    BYTE PTR [rax],dl
 c21:	00 00                	add    BYTE PTR [rax],al
 c23:	00 00                	add    BYTE PTR [rax],al
 c25:	00 00                	add    BYTE PTR [rax],al
 c27:	00 98 3c 20 00 00    	add    BYTE PTR [rax+0x203c],bl
 c2d:	00 00                	add    BYTE PTR [rax],al
 c2f:	00 01                	add    BYTE PTR [rcx],al
 c31:	00 00                	add    BYTE PTR [rax],al
 c33:	00 13                	add    BYTE PTR [rbx],dl
 c35:	00 00                	add    BYTE PTR [rax],al
 c37:	00 10                	add    BYTE PTR [rax],dl
 c39:	00 00                	add    BYTE PTR [rax],al
 c3b:	00 00                	add    BYTE PTR [rax],al
 c3d:	00 00                	add    BYTE PTR [rax],al
 c3f:	00 b0 3c 20 00 00    	add    BYTE PTR [rax+0x203c],dh
 c45:	00 00                	add    BYTE PTR [rax],al
 c47:	00 01                	add    BYTE PTR [rcx],al
 c49:	00 00                	add    BYTE PTR [rax],al
 c4b:	00 0b                	add    BYTE PTR [rbx],cl
 c4d:	00 00                	add    BYTE PTR [rax],al
 c4f:	00 10                	add    BYTE PTR [rax],dl
 c51:	00 00                	add    BYTE PTR [rax],al
 c53:	00 00                	add    BYTE PTR [rax],al
 c55:	00 00                	add    BYTE PTR [rax],al
 c57:	00 d0                	add    al,dl
 c59:	3f                   	(bad)  
 c5a:	20 00                	and    BYTE PTR [rax],al
 c5c:	00 00                	add    BYTE PTR [rax],al
 c5e:	00 00                	add    BYTE PTR [rax],al
 c60:	06                   	(bad)  
 c61:	00 00                	add    BYTE PTR [rax],al
 c63:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # c69 <tbuf+0xc29>
 c69:	00 00                	add    BYTE PTR [rax],al
 c6b:	00 00                	add    BYTE PTR [rax],al
 c6d:	00 00                	add    BYTE PTR [rax],al
 c6f:	00 d8                	add    al,bl
 c71:	3f                   	(bad)  
 c72:	20 00                	and    BYTE PTR [rax],al
 c74:	00 00                	add    BYTE PTR [rax],al
 c76:	00 00                	add    BYTE PTR [rax],al
 c78:	06                   	(bad)  
 c79:	00 00                	add    BYTE PTR [rax],al
 c7b:	00 1f                	add    BYTE PTR [rdi],bl
	...
 c85:	00 00                	add    BYTE PTR [rax],al
 c87:	00 e0                	add    al,ah
 c89:	3f                   	(bad)  
 c8a:	20 00                	and    BYTE PTR [rax],al
 c8c:	00 00                	add    BYTE PTR [rax],al
 c8e:	00 00                	add    BYTE PTR [rax],al
 c90:	06                   	(bad)  
 c91:	00 00                	add    BYTE PTR [rax],al
 c93:	00 21                	add    BYTE PTR [rcx],ah
	...
 c9d:	00 00                	add    BYTE PTR [rax],al
 c9f:	00 e8                	add    al,ch
 ca1:	3f                   	(bad)  
 ca2:	20 00                	and    BYTE PTR [rax],al
 ca4:	00 00                	add    BYTE PTR [rax],al
 ca6:	00 00                	add    BYTE PTR [rax],al
 ca8:	06                   	(bad)  
 ca9:	00 00                	add    BYTE PTR [rax],al
 cab:	00 22                	add    BYTE PTR [rdx],ah
	...
 cb5:	00 00                	add    BYTE PTR [rax],al
 cb7:	00 f0                	add    al,dh
 cb9:	3f                   	(bad)  
 cba:	20 00                	and    BYTE PTR [rax],al
 cbc:	00 00                	add    BYTE PTR [rax],al
 cbe:	00 00                	add    BYTE PTR [rax],al
 cc0:	06                   	(bad)  
 cc1:	00 00                	add    BYTE PTR [rax],al
 cc3:	00 23                	add    BYTE PTR [rbx],ah
	...
 ccd:	00 00                	add    BYTE PTR [rax],al
 ccf:	00 40 40             	add    BYTE PTR [rax+0x40],al
 cd2:	20 00                	and    BYTE PTR [rax],al
 cd4:	00 00                	add    BYTE PTR [rax],al
 cd6:	00 00                	add    BYTE PTR [rax],al
 cd8:	05 00 00 00 25       	add    eax,0x25000000
	...
 ce5:	00 00                	add    BYTE PTR [rax],al
 ce7:	00 50 40             	add    BYTE PTR [rax+0x40],dl
 cea:	20 00                	and    BYTE PTR [rax],al
 cec:	00 00                	add    BYTE PTR [rax],al
 cee:	00 00                	add    BYTE PTR [rax],al
 cf0:	05 00 00 00 26       	add    eax,0x26000000
	...

Disassembly of section .rela.plt:

0000000000000d00 <.rela.plt>:
 d00:	e8 3e 20 00 00       	call   2d43 <_ZN3You3askEv+0x29>
 d05:	00 00                	add    BYTE PTR [rax],al
 d07:	00 07                	add    BYTE PTR [rdi],al
 d09:	00 00                	add    BYTE PTR [rax],al
 d0b:	00 01                	add    BYTE PTR [rcx],al
	...
 d15:	00 00                	add    BYTE PTR [rax],al
 d17:	00 f0                	add    al,dh
 d19:	3e 20 00             	and    BYTE PTR ds:[rax],al
 d1c:	00 00                	add    BYTE PTR [rax],al
 d1e:	00 00                	add    BYTE PTR [rax],al
 d20:	07                   	(bad)  
 d21:	00 00                	add    BYTE PTR [rax],al
 d23:	00 02                	add    BYTE PTR [rdx],al
	...
 d2d:	00 00                	add    BYTE PTR [rax],al
 d2f:	00 f8                	add    al,bh
 d31:	3e 20 00             	and    BYTE PTR ds:[rax],al
 d34:	00 00                	add    BYTE PTR [rax],al
 d36:	00 00                	add    BYTE PTR [rax],al
 d38:	07                   	(bad)  
 d39:	00 00                	add    BYTE PTR [rax],al
 d3b:	00 03                	add    BYTE PTR [rbx],al
	...
 d49:	3f                   	(bad)  
 d4a:	20 00                	and    BYTE PTR [rax],al
 d4c:	00 00                	add    BYTE PTR [rax],al
 d4e:	00 00                	add    BYTE PTR [rax],al
 d50:	07                   	(bad)  
 d51:	00 00                	add    BYTE PTR [rax],al
 d53:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 d5e:	00 00                	add    BYTE PTR [rax],al
 d60:	08 3f                	or     BYTE PTR [rdi],bh
 d62:	20 00                	and    BYTE PTR [rax],al
 d64:	00 00                	add    BYTE PTR [rax],al
 d66:	00 00                	add    BYTE PTR [rax],al
 d68:	07                   	(bad)  
 d69:	00 00                	add    BYTE PTR [rax],al
 d6b:	00 06                	add    BYTE PTR [rsi],al
	...
 d75:	00 00                	add    BYTE PTR [rax],al
 d77:	00 10                	add    BYTE PTR [rax],dl
 d79:	3f                   	(bad)  
 d7a:	20 00                	and    BYTE PTR [rax],al
 d7c:	00 00                	add    BYTE PTR [rax],al
 d7e:	00 00                	add    BYTE PTR [rax],al
 d80:	07                   	(bad)  
 d81:	00 00                	add    BYTE PTR [rax],al
 d83:	00 07                	add    BYTE PTR [rdi],al
	...
 d8d:	00 00                	add    BYTE PTR [rax],al
 d8f:	00 18                	add    BYTE PTR [rax],bl
 d91:	3f                   	(bad)  
 d92:	20 00                	and    BYTE PTR [rax],al
 d94:	00 00                	add    BYTE PTR [rax],al
 d96:	00 00                	add    BYTE PTR [rax],al
 d98:	07                   	(bad)  
 d99:	00 00                	add    BYTE PTR [rax],al
 d9b:	00 08                	add    BYTE PTR [rax],cl
	...
 da5:	00 00                	add    BYTE PTR [rax],al
 da7:	00 20                	add    BYTE PTR [rax],ah
 da9:	3f                   	(bad)  
 daa:	20 00                	and    BYTE PTR [rax],al
 dac:	00 00                	add    BYTE PTR [rax],al
 dae:	00 00                	add    BYTE PTR [rax],al
 db0:	07                   	(bad)  
 db1:	00 00                	add    BYTE PTR [rax],al
 db3:	00 09                	add    BYTE PTR [rcx],cl
	...
 dbd:	00 00                	add    BYTE PTR [rax],al
 dbf:	00 28                	add    BYTE PTR [rax],ch
 dc1:	3f                   	(bad)  
 dc2:	20 00                	and    BYTE PTR [rax],al
 dc4:	00 00                	add    BYTE PTR [rax],al
 dc6:	00 00                	add    BYTE PTR [rax],al
 dc8:	07                   	(bad)  
 dc9:	00 00                	add    BYTE PTR [rax],al
 dcb:	00 0a                	add    BYTE PTR [rdx],cl
	...
 dd5:	00 00                	add    BYTE PTR [rax],al
 dd7:	00 30                	add    BYTE PTR [rax],dh
 dd9:	3f                   	(bad)  
 dda:	20 00                	and    BYTE PTR [rax],al
 ddc:	00 00                	add    BYTE PTR [rax],al
 dde:	00 00                	add    BYTE PTR [rax],al
 de0:	07                   	(bad)  
 de1:	00 00                	add    BYTE PTR [rax],al
 de3:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 dee:	00 00                	add    BYTE PTR [rax],al
 df0:	38 3f                	cmp    BYTE PTR [rdi],bh
 df2:	20 00                	and    BYTE PTR [rax],al
 df4:	00 00                	add    BYTE PTR [rax],al
 df6:	00 00                	add    BYTE PTR [rax],al
 df8:	07                   	(bad)  
 df9:	00 00                	add    BYTE PTR [rax],al
 dfb:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # e01 <tbuf+0xdc1>
 e01:	00 00                	add    BYTE PTR [rax],al
 e03:	00 00                	add    BYTE PTR [rax],al
 e05:	00 00                	add    BYTE PTR [rax],al
 e07:	00 40 3f             	add    BYTE PTR [rax+0x3f],al
 e0a:	20 00                	and    BYTE PTR [rax],al
 e0c:	00 00                	add    BYTE PTR [rax],al
 e0e:	00 00                	add    BYTE PTR [rax],al
 e10:	07                   	(bad)  
 e11:	00 00                	add    BYTE PTR [rax],al
 e13:	00 0e                	add    BYTE PTR [rsi],cl
	...
 e1d:	00 00                	add    BYTE PTR [rax],al
 e1f:	00 48 3f             	add    BYTE PTR [rax+0x3f],cl
 e22:	20 00                	and    BYTE PTR [rax],al
 e24:	00 00                	add    BYTE PTR [rax],al
 e26:	00 00                	add    BYTE PTR [rax],al
 e28:	07                   	(bad)  
 e29:	00 00                	add    BYTE PTR [rax],al
 e2b:	00 0f                	add    BYTE PTR [rdi],cl
	...
 e35:	00 00                	add    BYTE PTR [rax],al
 e37:	00 50 3f             	add    BYTE PTR [rax+0x3f],dl
 e3a:	20 00                	and    BYTE PTR [rax],al
 e3c:	00 00                	add    BYTE PTR [rax],al
 e3e:	00 00                	add    BYTE PTR [rax],al
 e40:	07                   	(bad)  
 e41:	00 00                	add    BYTE PTR [rax],al
 e43:	00 10                	add    BYTE PTR [rax],dl
	...
 e4d:	00 00                	add    BYTE PTR [rax],al
 e4f:	00 58 3f             	add    BYTE PTR [rax+0x3f],bl
 e52:	20 00                	and    BYTE PTR [rax],al
 e54:	00 00                	add    BYTE PTR [rax],al
 e56:	00 00                	add    BYTE PTR [rax],al
 e58:	07                   	(bad)  
 e59:	00 00                	add    BYTE PTR [rax],al
 e5b:	00 11                	add    BYTE PTR [rcx],dl
	...
 e65:	00 00                	add    BYTE PTR [rax],al
 e67:	00 60 3f             	add    BYTE PTR [rax+0x3f],ah
 e6a:	20 00                	and    BYTE PTR [rax],al
 e6c:	00 00                	add    BYTE PTR [rax],al
 e6e:	00 00                	add    BYTE PTR [rax],al
 e70:	07                   	(bad)  
 e71:	00 00                	add    BYTE PTR [rax],al
 e73:	00 12                	add    BYTE PTR [rdx],dl
	...
 e7d:	00 00                	add    BYTE PTR [rax],al
 e7f:	00 68 3f             	add    BYTE PTR [rax+0x3f],ch
 e82:	20 00                	and    BYTE PTR [rax],al
 e84:	00 00                	add    BYTE PTR [rax],al
 e86:	00 00                	add    BYTE PTR [rax],al
 e88:	07                   	(bad)  
 e89:	00 00                	add    BYTE PTR [rax],al
 e8b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
 e96:	00 00                	add    BYTE PTR [rax],al
 e98:	70 3f                	jo     ed9 <tbuf+0xe99>
 e9a:	20 00                	and    BYTE PTR [rax],al
 e9c:	00 00                	add    BYTE PTR [rax],al
 e9e:	00 00                	add    BYTE PTR [rax],al
 ea0:	07                   	(bad)  
 ea1:	00 00                	add    BYTE PTR [rax],al
 ea3:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # ea9 <tbuf+0xe69>
 ea9:	00 00                	add    BYTE PTR [rax],al
 eab:	00 00                	add    BYTE PTR [rax],al
 ead:	00 00                	add    BYTE PTR [rax],al
 eaf:	00 78 3f             	add    BYTE PTR [rax+0x3f],bh
 eb2:	20 00                	and    BYTE PTR [rax],al
 eb4:	00 00                	add    BYTE PTR [rax],al
 eb6:	00 00                	add    BYTE PTR [rax],al
 eb8:	07                   	(bad)  
 eb9:	00 00                	add    BYTE PTR [rax],al
 ebb:	00 16                	add    BYTE PTR [rsi],dl
	...
 ec5:	00 00                	add    BYTE PTR [rax],al
 ec7:	00 80 3f 20 00 00    	add    BYTE PTR [rax+0x203f],al
 ecd:	00 00                	add    BYTE PTR [rax],al
 ecf:	00 07                	add    BYTE PTR [rdi],al
 ed1:	00 00                	add    BYTE PTR [rax],al
 ed3:	00 17                	add    BYTE PTR [rdi],dl
	...
 edd:	00 00                	add    BYTE PTR [rax],al
 edf:	00 88 3f 20 00 00    	add    BYTE PTR [rax+0x203f],cl
 ee5:	00 00                	add    BYTE PTR [rax],al
 ee7:	00 07                	add    BYTE PTR [rdi],al
 ee9:	00 00                	add    BYTE PTR [rax],al
 eeb:	00 18                	add    BYTE PTR [rax],bl
	...
 ef5:	00 00                	add    BYTE PTR [rax],al
 ef7:	00 90 3f 20 00 00    	add    BYTE PTR [rax+0x203f],dl
 efd:	00 00                	add    BYTE PTR [rax],al
 eff:	00 07                	add    BYTE PTR [rdi],al
 f01:	00 00                	add    BYTE PTR [rax],al
 f03:	00 19                	add    BYTE PTR [rcx],bl
	...
 f0d:	00 00                	add    BYTE PTR [rax],al
 f0f:	00 98 3f 20 00 00    	add    BYTE PTR [rax+0x203f],bl
 f15:	00 00                	add    BYTE PTR [rax],al
 f17:	00 07                	add    BYTE PTR [rdi],al
 f19:	00 00                	add    BYTE PTR [rax],al
 f1b:	00 1a                	add    BYTE PTR [rdx],bl
	...
 f25:	00 00                	add    BYTE PTR [rax],al
 f27:	00 a0 3f 20 00 00    	add    BYTE PTR [rax+0x203f],ah
 f2d:	00 00                	add    BYTE PTR [rax],al
 f2f:	00 07                	add    BYTE PTR [rdi],al
 f31:	00 00                	add    BYTE PTR [rax],al
 f33:	00 1b                	add    BYTE PTR [rbx],bl
	...
 f3d:	00 00                	add    BYTE PTR [rax],al
 f3f:	00 a8 3f 20 00 00    	add    BYTE PTR [rax+0x203f],ch
 f45:	00 00                	add    BYTE PTR [rax],al
 f47:	00 07                	add    BYTE PTR [rdi],al
 f49:	00 00                	add    BYTE PTR [rax],al
 f4b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
 f56:	00 00                	add    BYTE PTR [rax],al
 f58:	b0 3f                	mov    al,0x3f
 f5a:	20 00                	and    BYTE PTR [rax],al
 f5c:	00 00                	add    BYTE PTR [rax],al
 f5e:	00 00                	add    BYTE PTR [rax],al
 f60:	07                   	(bad)  
 f61:	00 00                	add    BYTE PTR [rax],al
 f63:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # f69 <tbuf+0xf29>
 f69:	00 00                	add    BYTE PTR [rax],al
 f6b:	00 00                	add    BYTE PTR [rax],al
 f6d:	00 00                	add    BYTE PTR [rax],al
 f6f:	00 b8 3f 20 00 00    	add    BYTE PTR [rax+0x203f],bh
 f75:	00 00                	add    BYTE PTR [rax],al
 f77:	00 07                	add    BYTE PTR [rdi],al
 f79:	00 00                	add    BYTE PTR [rax],al
 f7b:	00 1e                	add    BYTE PTR [rsi],bl
	...
 f85:	00 00                	add    BYTE PTR [rax],al
 f87:	00 c0                	add    al,al
 f89:	3f                   	(bad)  
 f8a:	20 00                	and    BYTE PTR [rax],al
 f8c:	00 00                	add    BYTE PTR [rax],al
 f8e:	00 00                	add    BYTE PTR [rax],al
 f90:	07                   	(bad)  
 f91:	00 00                	add    BYTE PTR [rax],al
 f93:	00 20                	add    BYTE PTR [rax],ah
	...
 f9d:	00 00                	add    BYTE PTR [rax],al
 f9f:	00 c8                	add    al,cl
 fa1:	3f                   	(bad)  
 fa2:	20 00                	and    BYTE PTR [rax],al
 fa4:	00 00                	add    BYTE PTR [rax],al
 fa6:	00 00                	add    BYTE PTR [rax],al
 fa8:	07                   	(bad)  
 fa9:	00 00                	add    BYTE PTR [rax],al
 fab:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...

Disassembly of section .init:

0000000000000fb8 <_init>:
 fb8:	48 83 ec 08          	sub    rsp,0x8
 fbc:	48 8b 05 25 30 20 00 	mov    rax,QWORD PTR [rip+0x203025]        # 203fe8 <_GLOBAL_OFFSET_TABLE_+0x118>
 fc3:	48 85 c0             	test   rax,rax
 fc6:	74 02                	je     fca <_init+0x12>
 fc8:	ff d0                	call   rax
 fca:	48 83 c4 08          	add    rsp,0x8
 fce:	c3                   	ret    

Disassembly of section .plt:

0000000000000fd0 <printf@plt-0x10>:
     fd0:	ff 35 02 2f 20 00    	push   QWORD PTR [rip+0x202f02]        # 203ed8 <_GLOBAL_OFFSET_TABLE_+0x8>
     fd6:	ff 25 04 2f 20 00    	jmp    QWORD PTR [rip+0x202f04]        # 203ee0 <_GLOBAL_OFFSET_TABLE_+0x10>
     fdc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000fe0 <printf@plt>:
     fe0:	ff 25 02 2f 20 00    	jmp    QWORD PTR [rip+0x202f02]        # 203ee8 <_GLOBAL_OFFSET_TABLE_+0x18>
     fe6:	68 00 00 00 00       	push   0x0
     feb:	e9 e0 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000000ff0 <sprintf@plt>:
     ff0:	ff 25 fa 2e 20 00    	jmp    QWORD PTR [rip+0x202efa]        # 203ef0 <_GLOBAL_OFFSET_TABLE_+0x20>
     ff6:	68 01 00 00 00       	push   0x1
     ffb:	e9 d0 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001000 <rand@plt>:
    1000:	ff 25 f2 2e 20 00    	jmp    QWORD PTR [rip+0x202ef2]        # 203ef8 <_GLOBAL_OFFSET_TABLE_+0x28>
    1006:	68 02 00 00 00       	push   0x2
    100b:	e9 c0 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001010 <strchr@plt>:
    1010:	ff 25 ea 2e 20 00    	jmp    QWORD PTR [rip+0x202eea]        # 203f00 <_GLOBAL_OFFSET_TABLE_+0x30>
    1016:	68 03 00 00 00       	push   0x3
    101b:	e9 b0 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001020 <strlen@plt>:
    1020:	ff 25 e2 2e 20 00    	jmp    QWORD PTR [rip+0x202ee2]        # 203f08 <_GLOBAL_OFFSET_TABLE_+0x38>
    1026:	68 04 00 00 00       	push   0x4
    102b:	e9 a0 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001030 <pthread_join@plt>:
    1030:	ff 25 da 2e 20 00    	jmp    QWORD PTR [rip+0x202eda]        # 203f10 <_GLOBAL_OFFSET_TABLE_+0x40>
    1036:	68 05 00 00 00       	push   0x5
    103b:	e9 90 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001040 <strncpy@plt>:
    1040:	ff 25 d2 2e 20 00    	jmp    QWORD PTR [rip+0x202ed2]        # 203f18 <_GLOBAL_OFFSET_TABLE_+0x48>
    1046:	68 06 00 00 00       	push   0x6
    104b:	e9 80 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001050 <memset@plt>:
    1050:	ff 25 ca 2e 20 00    	jmp    QWORD PTR [rip+0x202eca]        # 203f20 <_GLOBAL_OFFSET_TABLE_+0x50>
    1056:	68 07 00 00 00       	push   0x7
    105b:	e9 70 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001060 <pthread_create@plt>:
    1060:	ff 25 c2 2e 20 00    	jmp    QWORD PTR [rip+0x202ec2]        # 203f28 <_GLOBAL_OFFSET_TABLE_+0x58>
    1066:	68 08 00 00 00       	push   0x8
    106b:	e9 60 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001070 <open@plt>:
    1070:	ff 25 ba 2e 20 00    	jmp    QWORD PTR [rip+0x202eba]        # 203f30 <_GLOBAL_OFFSET_TABLE_+0x60>
    1076:	68 09 00 00 00       	push   0x9
    107b:	e9 50 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001080 <sleep@plt>:
    1080:	ff 25 b2 2e 20 00    	jmp    QWORD PTR [rip+0x202eb2]        # 203f38 <_GLOBAL_OFFSET_TABLE_+0x68>
    1086:	68 0a 00 00 00       	push   0xa
    108b:	e9 40 ff ff ff       	jmp    fd0 <_init+0x18>

0000000000001090 <srand@plt>:
    1090:	ff 25 aa 2e 20 00    	jmp    QWORD PTR [rip+0x202eaa]        # 203f40 <_GLOBAL_OFFSET_TABLE_+0x70>
    1096:	68 0b 00 00 00       	push   0xb
    109b:	e9 30 ff ff ff       	jmp    fd0 <_init+0x18>

00000000000010a0 <_Znwm@plt>:
    10a0:	ff 25 a2 2e 20 00    	jmp    QWORD PTR [rip+0x202ea2]        # 203f48 <_GLOBAL_OFFSET_TABLE_+0x78>
    10a6:	68 0c 00 00 00       	push   0xc
    10ab:	e9 20 ff ff ff       	jmp    fd0 <_init+0x18>

00000000000010b0 <__stack_chk_fail@plt>:
    10b0:	ff 25 9a 2e 20 00    	jmp    QWORD PTR [rip+0x202e9a]        # 203f50 <_GLOBAL_OFFSET_TABLE_+0x80>
    10b6:	68 0d 00 00 00       	push   0xd
    10bb:	e9 10 ff ff ff       	jmp    fd0 <_init+0x18>

00000000000010c0 <fopen@plt>:
    10c0:	ff 25 92 2e 20 00    	jmp    QWORD PTR [rip+0x202e92]        # 203f58 <_GLOBAL_OFFSET_TABLE_+0x88>
    10c6:	68 0e 00 00 00       	push   0xe
    10cb:	e9 00 ff ff ff       	jmp    fd0 <_init+0x18>

00000000000010d0 <exit@plt>:
    10d0:	ff 25 8a 2e 20 00    	jmp    QWORD PTR [rip+0x202e8a]        # 203f60 <_GLOBAL_OFFSET_TABLE_+0x90>
    10d6:	68 0f 00 00 00       	push   0xf
    10db:	e9 f0 fe ff ff       	jmp    fd0 <_init+0x18>

00000000000010e0 <scanf@plt>:
    10e0:	ff 25 82 2e 20 00    	jmp    QWORD PTR [rip+0x202e82]        # 203f68 <_GLOBAL_OFFSET_TABLE_+0x98>
    10e6:	68 10 00 00 00       	push   0x10
    10eb:	e9 e0 fe ff ff       	jmp    fd0 <_init+0x18>

00000000000010f0 <getchar@plt>:
    10f0:	ff 25 7a 2e 20 00    	jmp    QWORD PTR [rip+0x202e7a]        # 203f70 <_GLOBAL_OFFSET_TABLE_+0xa0>
    10f6:	68 11 00 00 00       	push   0x11
    10fb:	e9 d0 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001100 <putchar@plt>:
    1100:	ff 25 72 2e 20 00    	jmp    QWORD PTR [rip+0x202e72]        # 203f78 <_GLOBAL_OFFSET_TABLE_+0xa8>
    1106:	68 12 00 00 00       	push   0x12
    110b:	e9 c0 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001110 <strcmp@plt>:
    1110:	ff 25 6a 2e 20 00    	jmp    QWORD PTR [rip+0x202e6a]        # 203f80 <_GLOBAL_OFFSET_TABLE_+0xb0>
    1116:	68 13 00 00 00       	push   0x13
    111b:	e9 b0 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001120 <usleep@plt>:
    1120:	ff 25 62 2e 20 00    	jmp    QWORD PTR [rip+0x202e62]        # 203f88 <_GLOBAL_OFFSET_TABLE_+0xb8>
    1126:	68 14 00 00 00       	push   0x14
    112b:	e9 a0 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001130 <setbuf@plt>:
    1130:	ff 25 5a 2e 20 00    	jmp    QWORD PTR [rip+0x202e5a]        # 203f90 <_GLOBAL_OFFSET_TABLE_+0xc0>
    1136:	68 15 00 00 00       	push   0x15
    113b:	e9 90 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001140 <read@plt>:
    1140:	ff 25 52 2e 20 00    	jmp    QWORD PTR [rip+0x202e52]        # 203f98 <_GLOBAL_OFFSET_TABLE_+0xc8>
    1146:	68 16 00 00 00       	push   0x16
    114b:	e9 80 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001150 <fread@plt>:
    1150:	ff 25 4a 2e 20 00    	jmp    QWORD PTR [rip+0x202e4a]        # 203fa0 <_GLOBAL_OFFSET_TABLE_+0xd0>
    1156:	68 17 00 00 00       	push   0x17
    115b:	e9 70 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001160 <puts@plt>:
    1160:	ff 25 42 2e 20 00    	jmp    QWORD PTR [rip+0x202e42]        # 203fa8 <_GLOBAL_OFFSET_TABLE_+0xd8>
    1166:	68 18 00 00 00       	push   0x18
    116b:	e9 60 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001170 <fgets@plt>:
    1170:	ff 25 3a 2e 20 00    	jmp    QWORD PTR [rip+0x202e3a]        # 203fb0 <_GLOBAL_OFFSET_TABLE_+0xe0>
    1176:	68 19 00 00 00       	push   0x19
    117b:	e9 50 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001180 <_exit@plt>:
    1180:	ff 25 32 2e 20 00    	jmp    QWORD PTR [rip+0x202e32]        # 203fb8 <_GLOBAL_OFFSET_TABLE_+0xe8>
    1186:	68 1a 00 00 00       	push   0x1a
    118b:	e9 40 fe ff ff       	jmp    fd0 <_init+0x18>

0000000000001190 <strdup@plt>:
    1190:	ff 25 2a 2e 20 00    	jmp    QWORD PTR [rip+0x202e2a]        # 203fc0 <_GLOBAL_OFFSET_TABLE_+0xf0>
    1196:	68 1b 00 00 00       	push   0x1b
    119b:	e9 30 fe ff ff       	jmp    fd0 <_init+0x18>

00000000000011a0 <close@plt>:
    11a0:	ff 25 22 2e 20 00    	jmp    QWORD PTR [rip+0x202e22]        # 203fc8 <_GLOBAL_OFFSET_TABLE_+0xf8>
    11a6:	68 1c 00 00 00       	push   0x1c
    11ab:	e9 20 fe ff ff       	jmp    fd0 <_init+0x18>

Disassembly of section .plt.got:

00000000000011b0 <.plt.got>:
    11b0:	ff 25 1a 2e 20 00    	jmp    QWORD PTR [rip+0x202e1a]        # 203fd0 <_GLOBAL_OFFSET_TABLE_+0x100>
    11b6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000011c0 <_start>:
    11c0:	31 ed                	xor    ebp,ebp
    11c2:	49 89 d1             	mov    r9,rdx
    11c5:	5e                   	pop    rsi
    11c6:	48 89 e2             	mov    rdx,rsp
    11c9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    11cd:	50                   	push   rax
    11ce:	54                   	push   rsp
    11cf:	4c 8d 05 da 1c 00 00 	lea    r8,[rip+0x1cda]        # 2eb0 <__libc_csu_fini>
    11d6:	48 8d 0d 63 1c 00 00 	lea    rcx,[rip+0x1c63]        # 2e40 <__libc_csu_init>
    11dd:	48 8d 3d 45 16 00 00 	lea    rdi,[rip+0x1645]        # 2829 <main>
    11e4:	ff 15 f6 2d 20 00    	call   QWORD PTR [rip+0x202df6]        # 203fe0 <_GLOBAL_OFFSET_TABLE_+0x110>
    11ea:	f4                   	hlt    
    11eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011f0 <deregister_tm_clones>:
    11f0:	48 8d 3d 31 2e 20 00 	lea    rdi,[rip+0x202e31]        # 204028 <__TMC_END__>
    11f7:	55                   	push   rbp
    11f8:	48 8d 05 29 2e 20 00 	lea    rax,[rip+0x202e29]        # 204028 <__TMC_END__>
    11ff:	48 39 f8             	cmp    rax,rdi
    1202:	48 89 e5             	mov    rbp,rsp
    1205:	74 19                	je     1220 <deregister_tm_clones+0x30>
    1207:	48 8b 05 ca 2d 20 00 	mov    rax,QWORD PTR [rip+0x202dca]        # 203fd8 <_GLOBAL_OFFSET_TABLE_+0x108>
    120e:	48 85 c0             	test   rax,rax
    1211:	74 0d                	je     1220 <deregister_tm_clones+0x30>
    1213:	5d                   	pop    rbp
    1214:	ff e0                	jmp    rax
    1216:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    121d:	00 00 00 
    1220:	5d                   	pop    rbp
    1221:	c3                   	ret    
    1222:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1226:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    122d:	00 00 00 

0000000000001230 <register_tm_clones>:
    1230:	48 8d 3d f1 2d 20 00 	lea    rdi,[rip+0x202df1]        # 204028 <__TMC_END__>
    1237:	48 8d 35 ea 2d 20 00 	lea    rsi,[rip+0x202dea]        # 204028 <__TMC_END__>
    123e:	55                   	push   rbp
    123f:	48 29 fe             	sub    rsi,rdi
    1242:	48 89 e5             	mov    rbp,rsp
    1245:	48 c1 fe 03          	sar    rsi,0x3
    1249:	48 89 f0             	mov    rax,rsi
    124c:	48 c1 e8 3f          	shr    rax,0x3f
    1250:	48 01 c6             	add    rsi,rax
    1253:	48 d1 fe             	sar    rsi,1
    1256:	74 18                	je     1270 <register_tm_clones+0x40>
    1258:	48 8b 05 91 2d 20 00 	mov    rax,QWORD PTR [rip+0x202d91]        # 203ff0 <_GLOBAL_OFFSET_TABLE_+0x120>
    125f:	48 85 c0             	test   rax,rax
    1262:	74 0c                	je     1270 <register_tm_clones+0x40>
    1264:	5d                   	pop    rbp
    1265:	ff e0                	jmp    rax
    1267:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    126e:	00 00 
    1270:	5d                   	pop    rbp
    1271:	c3                   	ret    
    1272:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1276:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    127d:	00 00 00 

0000000000001280 <__do_global_dtors_aux>:
    1280:	80 3d d1 2d 20 00 00 	cmp    BYTE PTR [rip+0x202dd1],0x0        # 204058 <completed.7696>
    1287:	75 2f                	jne    12b8 <__do_global_dtors_aux+0x38>
    1289:	48 83 3d 3f 2d 20 00 	cmp    QWORD PTR [rip+0x202d3f],0x0        # 203fd0 <_GLOBAL_OFFSET_TABLE_+0x100>
    1290:	00 
    1291:	55                   	push   rbp
    1292:	48 89 e5             	mov    rbp,rsp
    1295:	74 0c                	je     12a3 <__do_global_dtors_aux+0x23>
    1297:	48 8b 3d 6a 2d 20 00 	mov    rdi,QWORD PTR [rip+0x202d6a]        # 204008 <__dso_handle>
    129e:	e8 0d ff ff ff       	call   11b0 <close@plt+0x10>
    12a3:	e8 48 ff ff ff       	call   11f0 <deregister_tm_clones>
    12a8:	c6 05 a9 2d 20 00 01 	mov    BYTE PTR [rip+0x202da9],0x1        # 204058 <completed.7696>
    12af:	5d                   	pop    rbp
    12b0:	c3                   	ret    
    12b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    12b8:	f3 c3                	repz ret 
    12ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000012c0 <frame_dummy>:
    12c0:	55                   	push   rbp
    12c1:	48 89 e5             	mov    rbp,rsp
    12c4:	5d                   	pop    rbp
    12c5:	e9 66 ff ff ff       	jmp    1230 <register_tm_clones>

00000000000012ca <_Z7contactv>:
    12ca:	55                   	push   rbp
    12cb:	48 89 e5             	mov    rbp,rsp
    12ce:	48 8d 3d fc 1b 00 00 	lea    rdi,[rip+0x1bfc]        # 2ed1 <_ZStL19piecewise_construct+0x1>
    12d5:	e8 86 fe ff ff       	call   1160 <puts@plt>
    12da:	bf 7f 00 00 00       	mov    edi,0x7f
    12df:	e8 ec fd ff ff       	call   10d0 <exit@plt>

00000000000012e4 <_Z8readlineP8_IO_FILE>:
    12e4:	55                   	push   rbp
    12e5:	48 89 e5             	mov    rbp,rsp
    12e8:	48 81 ec 10 04 00 00 	sub    rsp,0x410
    12ef:	48 89 bd f8 fb ff ff 	mov    QWORD PTR [rbp-0x408],rdi
    12f6:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    12fd:	00 00 
    12ff:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1303:	31 c0                	xor    eax,eax
    1305:	48 8b 95 f8 fb ff ff 	mov    rdx,QWORD PTR [rbp-0x408]
    130c:	48 8d 85 10 fc ff ff 	lea    rax,[rbp-0x3f0]
    1313:	be e8 03 00 00       	mov    esi,0x3e8
    1318:	48 89 c7             	mov    rdi,rax
    131b:	e8 50 fe ff ff       	call   1170 <fgets@plt>
    1320:	48 85 c0             	test   rax,rax
    1323:	0f 94 c0             	sete   al
    1326:	84 c0                	test   al,al
    1328:	74 05                	je     132f <_Z8readlineP8_IO_FILE+0x4b>
    132a:	e8 9b ff ff ff       	call   12ca <_Z7contactv>
    132f:	48 8d 85 10 fc ff ff 	lea    rax,[rbp-0x3f0]
    1336:	48 89 c7             	mov    rdi,rax
    1339:	e8 e2 fc ff ff       	call   1020 <strlen@plt>
    133e:	89 85 0c fc ff ff    	mov    DWORD PTR [rbp-0x3f4],eax
    1344:	8b 85 0c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3f4]
    134a:	83 e8 01             	sub    eax,0x1
    134d:	48 98                	cdqe   
    134f:	0f b6 84 05 10 fc ff 	movzx  eax,BYTE PTR [rbp+rax*1-0x3f0]
    1356:	ff 
    1357:	3c 0a                	cmp    al,0xa
    1359:	75 13                	jne    136e <_Z8readlineP8_IO_FILE+0x8a>
    135b:	8b 85 0c fc ff ff    	mov    eax,DWORD PTR [rbp-0x3f4]
    1361:	83 e8 01             	sub    eax,0x1
    1364:	48 98                	cdqe   
    1366:	c6 84 05 10 fc ff ff 	mov    BYTE PTR [rbp+rax*1-0x3f0],0x0
    136d:	00 
    136e:	48 8d 85 10 fc ff ff 	lea    rax,[rbp-0x3f0]
    1375:	48 89 c7             	mov    rdi,rax
    1378:	e8 13 fe ff ff       	call   1190 <strdup@plt>
    137d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    1381:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    1388:	00 00 
    138a:	74 05                	je     1391 <_Z8readlineP8_IO_FILE+0xad>
    138c:	e8 1f fd ff ff       	call   10b0 <__stack_chk_fail@plt>
    1391:	c9                   	leave  
    1392:	c3                   	ret    

0000000000001393 <_Z11init_papersv>:
    1393:	55                   	push   rbp
    1394:	48 89 e5             	mov    rbp,rsp
    1397:	48 83 ec 50          	sub    rsp,0x50
    139b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    13a2:	00 00 
    13a4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    13a8:	31 c0                	xor    eax,eax
    13aa:	48 8d 35 3b 1b 00 00 	lea    rsi,[rip+0x1b3b]        # 2eec <_ZL2PN+0x4>
    13b1:	48 8d 3d 37 1b 00 00 	lea    rdi,[rip+0x1b37]        # 2eef <_ZL2PN+0x7>
    13b8:	e8 03 fd ff ff       	call   10c0 <fopen@plt>
    13bd:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
    13c1:	48 83 7d c0 00       	cmp    QWORD PTR [rbp-0x40],0x0
    13c6:	75 05                	jne    13cd <_Z11init_papersv+0x3a>
    13c8:	e8 fd fe ff ff       	call   12ca <_Z7contactv>
    13cd:	48 8d 05 26 1b 00 00 	lea    rax,[rip+0x1b26]        # 2efa <_ZL2PN+0x12>
    13d4:	48 89 05 85 2c 20 00 	mov    QWORD PTR [rip+0x202c85],rax        # 204060 <papers>
    13db:	c7 45 bc 01 00 00 00 	mov    DWORD PTR [rbp-0x44],0x1
    13e2:	83 7d bc 09          	cmp    DWORD PTR [rbp-0x44],0x9
    13e6:	0f 8f a5 00 00 00    	jg     1491 <_Z11init_papersv+0xfe>
    13ec:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    13f0:	48 89 c7             	mov    rdi,rax
    13f3:	e8 ec fe ff ff       	call   12e4 <_Z8readlineP8_IO_FILE>
    13f8:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    13fc:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    1400:	48 89 c7             	mov    rdi,rax
    1403:	e8 dc fe ff ff       	call   12e4 <_Z8readlineP8_IO_FILE>
    1408:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    140c:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
    1410:	48 89 c7             	mov    rdi,rax
    1413:	e8 cc fe ff ff       	call   12e4 <_Z8readlineP8_IO_FILE>
    1418:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
    141c:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
    1420:	48 8d 45 bb          	lea    rax,[rbp-0x45]
    1424:	48 89 d1             	mov    rcx,rdx
    1427:	ba 01 00 00 00       	mov    edx,0x1
    142c:	be 01 00 00 00       	mov    esi,0x1
    1431:	48 89 c7             	mov    rdi,rax
    1434:	e8 17 fd ff ff       	call   1150 <fread@plt>
    1439:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    143d:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    1441:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
    1445:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    1449:	48 89 c7             	mov    rdi,rax
    144c:	e8 1b 15 00 00       	call   296c <_ZN5PaperC1EPcS0_S0_>
    1451:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
    1454:	48 63 d0             	movsxd rdx,eax
    1457:	48 89 d0             	mov    rax,rdx
    145a:	48 01 c0             	add    rax,rax
    145d:	48 01 d0             	add    rax,rdx
    1460:	48 c1 e0 03          	shl    rax,0x3
    1464:	48 89 c6             	mov    rsi,rax
    1467:	48 8d 0d f2 2b 20 00 	lea    rcx,[rip+0x202bf2]        # 204060 <papers>
    146e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    1472:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    1476:	48 89 04 0e          	mov    QWORD PTR [rsi+rcx*1],rax
    147a:	48 89 54 0e 08       	mov    QWORD PTR [rsi+rcx*1+0x8],rdx
    147f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1483:	48 89 44 0e 10       	mov    QWORD PTR [rsi+rcx*1+0x10],rax
    1488:	83 45 bc 01          	add    DWORD PTR [rbp-0x44],0x1
    148c:	e9 51 ff ff ff       	jmp    13e2 <_Z11init_papersv+0x4f>
    1491:	90                   	nop
    1492:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1496:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    149d:	00 00 
    149f:	74 05                	je     14a6 <_Z11init_papersv+0x113>
    14a1:	e8 0a fc ff ff       	call   10b0 <__stack_chk_fail@plt>
    14a6:	c9                   	leave  
    14a7:	c3                   	ret    

00000000000014a8 <_Z7welcomev>:
    14a8:	55                   	push   rbp
    14a9:	48 89 e5             	mov    rbp,rsp
    14ac:	48 8d 3d 4d 1a 00 00 	lea    rdi,[rip+0x1a4d]        # 2f00 <_ZL2PN+0x18>
    14b3:	e8 a8 fc ff ff       	call   1160 <puts@plt>
    14b8:	90                   	nop
    14b9:	5d                   	pop    rbp
    14ba:	c3                   	ret    

00000000000014bb <_Z11show_papersv>:
    14bb:	55                   	push   rbp
    14bc:	48 89 e5             	mov    rbp,rsp
    14bf:	48 83 ec 10          	sub    rsp,0x10
    14c3:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [rbp-0x4],0x1
    14ca:	83 7d fc 09          	cmp    DWORD PTR [rbp-0x4],0x9
    14ce:	7f 5e                	jg     152e <_Z11show_papersv+0x73>
    14d0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    14d3:	48 63 d0             	movsxd rdx,eax
    14d6:	48 89 d0             	mov    rax,rdx
    14d9:	48 01 c0             	add    rax,rax
    14dc:	48 01 d0             	add    rax,rdx
    14df:	48 c1 e0 03          	shl    rax,0x3
    14e3:	48 89 c2             	mov    rdx,rax
    14e6:	48 8d 05 7b 2b 20 00 	lea    rax,[rip+0x202b7b]        # 204068 <papers+0x8>
    14ed:	48 8b 0c 02          	mov    rcx,QWORD PTR [rdx+rax*1]
    14f1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    14f4:	48 63 d0             	movsxd rdx,eax
    14f7:	48 89 d0             	mov    rax,rdx
    14fa:	48 01 c0             	add    rax,rax
    14fd:	48 01 d0             	add    rax,rdx
    1500:	48 c1 e0 03          	shl    rax,0x3
    1504:	48 89 c2             	mov    rdx,rax
    1507:	48 8d 05 52 2b 20 00 	lea    rax,[rip+0x202b52]        # 204060 <papers>
    150e:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    1512:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1515:	89 c6                	mov    esi,eax
    1517:	48 8d 3d 52 1a 00 00 	lea    rdi,[rip+0x1a52]        # 2f70 <_ZL2PN+0x88>
    151e:	b8 00 00 00 00       	mov    eax,0x0
    1523:	e8 b8 fa ff ff       	call   fe0 <printf@plt>
    1528:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    152c:	eb 9c                	jmp    14ca <_Z11show_papersv+0xf>
    152e:	90                   	nop
    152f:	c9                   	leave  
    1530:	c3                   	ret    

0000000000001531 <_Z11show_agendav>:
    1531:	55                   	push   rbp
    1532:	48 89 e5             	mov    rbp,rsp
    1535:	41 57                	push   r15
    1537:	41 56                	push   r14
    1539:	41 55                	push   r13
    153b:	41 54                	push   r12
    153d:	53                   	push   rbx
    153e:	48 83 ec 78          	sub    rsp,0x78
    1542:	0f b6 05 10 2c 20 00 	movzx  eax,BYTE PTR [rip+0x202c10]        # 204159 <matching+0x9>
    1549:	0f be c0             	movsx  eax,al
    154c:	48 63 d0             	movsxd rdx,eax
    154f:	48 89 d0             	mov    rax,rdx
    1552:	48 01 c0             	add    rax,rax
    1555:	48 01 d0             	add    rax,rdx
    1558:	48 c1 e0 03          	shl    rax,0x3
    155c:	48 89 c2             	mov    rdx,rax
    155f:	48 8d 05 fa 2a 20 00 	lea    rax,[rip+0x202afa]        # 204060 <papers>
    1566:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    156a:	48 89 c7             	mov    rdi,rax
    156d:	e8 ae fa ff ff       	call   1020 <strlen@plt>
    1572:	48 d1 e8             	shr    rax,1
    1575:	ba 05 00 00 00       	mov    edx,0x5
    157a:	29 c2                	sub    edx,eax
    157c:	89 d0                	mov    eax,edx
    157e:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    1581:	0f b6 05 d1 2b 20 00 	movzx  eax,BYTE PTR [rip+0x202bd1]        # 204159 <matching+0x9>
    1588:	0f be c0             	movsx  eax,al
    158b:	48 63 d0             	movsxd rdx,eax
    158e:	48 89 d0             	mov    rax,rdx
    1591:	48 01 c0             	add    rax,rax
    1594:	48 01 d0             	add    rax,rdx
    1597:	48 c1 e0 03          	shl    rax,0x3
    159b:	48 89 c2             	mov    rdx,rax
    159e:	48 8d 05 bb 2a 20 00 	lea    rax,[rip+0x202abb]        # 204060 <papers>
    15a5:	48 8b 0c 02          	mov    rcx,QWORD PTR [rdx+rax*1]
    15a9:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
    15ad:	0f b6 05 a5 2b 20 00 	movzx  eax,BYTE PTR [rip+0x202ba5]        # 204159 <matching+0x9>
    15b4:	0f be c0             	movsx  eax,al
    15b7:	48 63 d0             	movsxd rdx,eax
    15ba:	48 89 d0             	mov    rax,rdx
    15bd:	48 01 c0             	add    rax,rax
    15c0:	48 01 d0             	add    rax,rdx
    15c3:	48 c1 e0 03          	shl    rax,0x3
    15c7:	48 89 c2             	mov    rdx,rax
    15ca:	48 8d 05 8f 2a 20 00 	lea    rax,[rip+0x202a8f]        # 204060 <papers>
    15d1:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    15d5:	48 89 c7             	mov    rdi,rax
    15d8:	e8 43 fa ff ff       	call   1020 <strlen@plt>
    15dd:	48 d1 e8             	shr    rax,1
    15e0:	83 c0 05             	add    eax,0x5
    15e3:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
    15e6:	0f b6 05 6b 2b 20 00 	movzx  eax,BYTE PTR [rip+0x202b6b]        # 204158 <matching+0x8>
    15ed:	0f be c0             	movsx  eax,al
    15f0:	48 63 d0             	movsxd rdx,eax
    15f3:	48 89 d0             	mov    rax,rdx
    15f6:	48 01 c0             	add    rax,rax
    15f9:	48 01 d0             	add    rax,rdx
    15fc:	48 c1 e0 03          	shl    rax,0x3
    1600:	48 89 c2             	mov    rdx,rax
    1603:	48 8d 05 56 2a 20 00 	lea    rax,[rip+0x202a56]        # 204060 <papers>
    160a:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    160e:	48 89 c7             	mov    rdi,rax
    1611:	e8 0a fa ff ff       	call   1020 <strlen@plt>
    1616:	48 d1 e8             	shr    rax,1
    1619:	ba 05 00 00 00       	mov    edx,0x5
    161e:	29 c2                	sub    edx,eax
    1620:	89 d0                	mov    eax,edx
    1622:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
    1625:	0f b6 05 2c 2b 20 00 	movzx  eax,BYTE PTR [rip+0x202b2c]        # 204158 <matching+0x8>
    162c:	0f be c0             	movsx  eax,al
    162f:	48 63 d0             	movsxd rdx,eax
    1632:	48 89 d0             	mov    rax,rdx
    1635:	48 01 c0             	add    rax,rax
    1638:	48 01 d0             	add    rax,rdx
    163b:	48 c1 e0 03          	shl    rax,0x3
    163f:	48 89 c2             	mov    rdx,rax
    1642:	48 8d 05 17 2a 20 00 	lea    rax,[rip+0x202a17]        # 204060 <papers>
    1649:	48 8b 34 02          	mov    rsi,QWORD PTR [rdx+rax*1]
    164d:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
    1651:	0f b6 05 00 2b 20 00 	movzx  eax,BYTE PTR [rip+0x202b00]        # 204158 <matching+0x8>
    1658:	0f be c0             	movsx  eax,al
    165b:	48 63 d0             	movsxd rdx,eax
    165e:	48 89 d0             	mov    rax,rdx
    1661:	48 01 c0             	add    rax,rax
    1664:	48 01 d0             	add    rax,rdx
    1667:	48 c1 e0 03          	shl    rax,0x3
    166b:	48 89 c2             	mov    rdx,rax
    166e:	48 8d 05 eb 29 20 00 	lea    rax,[rip+0x2029eb]        # 204060 <papers>
    1675:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    1679:	48 89 c7             	mov    rdi,rax
    167c:	e8 9f f9 ff ff       	call   1020 <strlen@plt>
    1681:	48 d1 e8             	shr    rax,1
    1684:	83 c0 05             	add    eax,0x5
    1687:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
    168a:	0f b6 05 c6 2a 20 00 	movzx  eax,BYTE PTR [rip+0x202ac6]        # 204157 <matching+0x7>
    1691:	0f be c0             	movsx  eax,al
    1694:	48 63 d0             	movsxd rdx,eax
    1697:	48 89 d0             	mov    rax,rdx
    169a:	48 01 c0             	add    rax,rax
    169d:	48 01 d0             	add    rax,rdx
    16a0:	48 c1 e0 03          	shl    rax,0x3
    16a4:	48 89 c2             	mov    rdx,rax
    16a7:	48 8d 05 b2 29 20 00 	lea    rax,[rip+0x2029b2]        # 204060 <papers>
    16ae:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    16b2:	48 89 c7             	mov    rdi,rax
    16b5:	e8 66 f9 ff ff       	call   1020 <strlen@plt>
    16ba:	48 d1 e8             	shr    rax,1
    16bd:	ba 05 00 00 00       	mov    edx,0x5
    16c2:	29 c2                	sub    edx,eax
    16c4:	89 d0                	mov    eax,edx
    16c6:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
    16c9:	0f b6 05 87 2a 20 00 	movzx  eax,BYTE PTR [rip+0x202a87]        # 204157 <matching+0x7>
    16d0:	0f be c0             	movsx  eax,al
    16d3:	48 63 d0             	movsxd rdx,eax
    16d6:	48 89 d0             	mov    rax,rdx
    16d9:	48 01 c0             	add    rax,rax
    16dc:	48 01 d0             	add    rax,rdx
    16df:	48 c1 e0 03          	shl    rax,0x3
    16e3:	48 89 c2             	mov    rdx,rax
    16e6:	48 8d 05 73 29 20 00 	lea    rax,[rip+0x202973]        # 204060 <papers>
    16ed:	48 8b 1c 02          	mov    rbx,QWORD PTR [rdx+rax*1]
    16f1:	48 89 5d a0          	mov    QWORD PTR [rbp-0x60],rbx
    16f5:	0f b6 05 5b 2a 20 00 	movzx  eax,BYTE PTR [rip+0x202a5b]        # 204157 <matching+0x7>
    16fc:	0f be c0             	movsx  eax,al
    16ff:	48 63 d0             	movsxd rdx,eax
    1702:	48 89 d0             	mov    rax,rdx
    1705:	48 01 c0             	add    rax,rax
    1708:	48 01 d0             	add    rax,rdx
    170b:	48 c1 e0 03          	shl    rax,0x3
    170f:	48 89 c2             	mov    rdx,rax
    1712:	48 8d 05 47 29 20 00 	lea    rax,[rip+0x202947]        # 204060 <papers>
    1719:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    171d:	48 89 c7             	mov    rdi,rax
    1720:	e8 fb f8 ff ff       	call   1020 <strlen@plt>
    1725:	48 d1 e8             	shr    rax,1
    1728:	83 c0 05             	add    eax,0x5
    172b:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
    172e:	0f b6 05 21 2a 20 00 	movzx  eax,BYTE PTR [rip+0x202a21]        # 204156 <matching+0x6>
    1735:	0f be c0             	movsx  eax,al
    1738:	48 63 d0             	movsxd rdx,eax
    173b:	48 89 d0             	mov    rax,rdx
    173e:	48 01 c0             	add    rax,rax
    1741:	48 01 d0             	add    rax,rdx
    1744:	48 c1 e0 03          	shl    rax,0x3
    1748:	48 89 c2             	mov    rdx,rax
    174b:	48 8d 05 0e 29 20 00 	lea    rax,[rip+0x20290e]        # 204060 <papers>
    1752:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    1756:	48 89 c7             	mov    rdi,rax
    1759:	e8 c2 f8 ff ff       	call   1020 <strlen@plt>
    175e:	48 d1 e8             	shr    rax,1
    1761:	ba 05 00 00 00       	mov    edx,0x5
    1766:	29 c2                	sub    edx,eax
    1768:	89 d0                	mov    eax,edx
    176a:	89 45 9c             	mov    DWORD PTR [rbp-0x64],eax
    176d:	0f b6 05 e2 29 20 00 	movzx  eax,BYTE PTR [rip+0x2029e2]        # 204156 <matching+0x6>
    1774:	0f be c0             	movsx  eax,al
    1777:	48 63 d0             	movsxd rdx,eax
    177a:	48 89 d0             	mov    rax,rdx
    177d:	48 01 c0             	add    rax,rax
    1780:	48 01 d0             	add    rax,rdx
    1783:	48 c1 e0 03          	shl    rax,0x3
    1787:	48 89 c2             	mov    rdx,rax
    178a:	48 8d 05 cf 28 20 00 	lea    rax,[rip+0x2028cf]        # 204060 <papers>
    1791:	48 8b 3c 02          	mov    rdi,QWORD PTR [rdx+rax*1]
    1795:	48 89 7d 90          	mov    QWORD PTR [rbp-0x70],rdi
    1799:	0f b6 05 b6 29 20 00 	movzx  eax,BYTE PTR [rip+0x2029b6]        # 204156 <matching+0x6>
    17a0:	0f be c0             	movsx  eax,al
    17a3:	48 63 d0             	movsxd rdx,eax
    17a6:	48 89 d0             	mov    rax,rdx
    17a9:	48 01 c0             	add    rax,rax
    17ac:	48 01 d0             	add    rax,rdx
    17af:	48 c1 e0 03          	shl    rax,0x3
    17b3:	48 89 c2             	mov    rdx,rax
    17b6:	48 8d 05 a3 28 20 00 	lea    rax,[rip+0x2028a3]        # 204060 <papers>
    17bd:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    17c1:	48 89 c7             	mov    rdi,rax
    17c4:	e8 57 f8 ff ff       	call   1020 <strlen@plt>
    17c9:	48 d1 e8             	shr    rax,1
    17cc:	83 c0 05             	add    eax,0x5
    17cf:	89 45 98             	mov    DWORD PTR [rbp-0x68],eax
    17d2:	0f b6 05 7c 29 20 00 	movzx  eax,BYTE PTR [rip+0x20297c]        # 204155 <matching+0x5>
    17d9:	0f be c0             	movsx  eax,al
    17dc:	48 63 d0             	movsxd rdx,eax
    17df:	48 89 d0             	mov    rax,rdx
    17e2:	48 01 c0             	add    rax,rax
    17e5:	48 01 d0             	add    rax,rdx
    17e8:	48 c1 e0 03          	shl    rax,0x3
    17ec:	48 89 c2             	mov    rdx,rax
    17ef:	48 8d 05 6a 28 20 00 	lea    rax,[rip+0x20286a]        # 204060 <papers>
    17f6:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    17fa:	48 89 c7             	mov    rdi,rax
    17fd:	e8 1e f8 ff ff       	call   1020 <strlen@plt>
    1802:	48 d1 e8             	shr    rax,1
    1805:	ba 05 00 00 00       	mov    edx,0x5
    180a:	29 c2                	sub    edx,eax
    180c:	89 d0                	mov    eax,edx
    180e:	89 45 8c             	mov    DWORD PTR [rbp-0x74],eax
    1811:	0f b6 05 3d 29 20 00 	movzx  eax,BYTE PTR [rip+0x20293d]        # 204155 <matching+0x5>
    1818:	0f be c0             	movsx  eax,al
    181b:	48 63 d0             	movsxd rdx,eax
    181e:	48 89 d0             	mov    rax,rdx
    1821:	48 01 c0             	add    rax,rax
    1824:	48 01 d0             	add    rax,rdx
    1827:	48 c1 e0 03          	shl    rax,0x3
    182b:	48 89 c2             	mov    rdx,rax
    182e:	48 8d 05 2b 28 20 00 	lea    rax,[rip+0x20282b]        # 204060 <papers>
    1835:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    1839:	48 89 55 80          	mov    QWORD PTR [rbp-0x80],rdx
    183d:	0f b6 05 11 29 20 00 	movzx  eax,BYTE PTR [rip+0x202911]        # 204155 <matching+0x5>
    1844:	0f be c0             	movsx  eax,al
    1847:	48 63 d0             	movsxd rdx,eax
    184a:	48 89 d0             	mov    rax,rdx
    184d:	48 01 c0             	add    rax,rax
    1850:	48 01 d0             	add    rax,rdx
    1853:	48 c1 e0 03          	shl    rax,0x3
    1857:	48 89 c2             	mov    rdx,rax
    185a:	48 8d 05 ff 27 20 00 	lea    rax,[rip+0x2027ff]        # 204060 <papers>
    1861:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    1865:	48 89 c7             	mov    rdi,rax
    1868:	e8 b3 f7 ff ff       	call   1020 <strlen@plt>
    186d:	48 d1 e8             	shr    rax,1
    1870:	83 c0 05             	add    eax,0x5
    1873:	89 45 88             	mov    DWORD PTR [rbp-0x78],eax
    1876:	0f b6 05 d7 28 20 00 	movzx  eax,BYTE PTR [rip+0x2028d7]        # 204154 <matching+0x4>
    187d:	0f be c0             	movsx  eax,al
    1880:	48 63 d0             	movsxd rdx,eax
    1883:	48 89 d0             	mov    rax,rdx
    1886:	48 01 c0             	add    rax,rax
    1889:	48 01 d0             	add    rax,rdx
    188c:	48 c1 e0 03          	shl    rax,0x3
    1890:	48 89 c2             	mov    rdx,rax
    1893:	48 8d 05 c6 27 20 00 	lea    rax,[rip+0x2027c6]        # 204060 <papers>
    189a:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    189e:	48 89 c7             	mov    rdi,rax
    18a1:	e8 7a f7 ff ff       	call   1020 <strlen@plt>
    18a6:	48 d1 e8             	shr    rax,1
    18a9:	89 c2                	mov    edx,eax
    18ab:	b8 05 00 00 00       	mov    eax,0x5
    18b0:	29 d0                	sub    eax,edx
    18b2:	89 85 7c ff ff ff    	mov    DWORD PTR [rbp-0x84],eax
    18b8:	0f b6 05 95 28 20 00 	movzx  eax,BYTE PTR [rip+0x202895]        # 204154 <matching+0x4>
    18bf:	0f be c0             	movsx  eax,al
    18c2:	48 63 d0             	movsxd rdx,eax
    18c5:	48 89 d0             	mov    rax,rdx
    18c8:	48 01 c0             	add    rax,rax
    18cb:	48 01 d0             	add    rax,rdx
    18ce:	48 c1 e0 03          	shl    rax,0x3
    18d2:	48 89 c2             	mov    rdx,rax
    18d5:	48 8d 05 84 27 20 00 	lea    rax,[rip+0x202784]        # 204060 <papers>
    18dc:	4c 8b 14 02          	mov    r10,QWORD PTR [rdx+rax*1]
    18e0:	4c 89 95 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r10
    18e7:	0f b6 05 66 28 20 00 	movzx  eax,BYTE PTR [rip+0x202866]        # 204154 <matching+0x4>
    18ee:	0f be c0             	movsx  eax,al
    18f1:	48 63 d0             	movsxd rdx,eax
    18f4:	48 89 d0             	mov    rax,rdx
    18f7:	48 01 c0             	add    rax,rax
    18fa:	48 01 d0             	add    rax,rdx
    18fd:	48 c1 e0 03          	shl    rax,0x3
    1901:	48 89 c2             	mov    rdx,rax
    1904:	48 8d 05 55 27 20 00 	lea    rax,[rip+0x202755]        # 204060 <papers>
    190b:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    190f:	48 89 c7             	mov    rdi,rax
    1912:	e8 09 f7 ff ff       	call   1020 <strlen@plt>
    1917:	48 d1 e8             	shr    rax,1
    191a:	83 c0 05             	add    eax,0x5
    191d:	89 85 78 ff ff ff    	mov    DWORD PTR [rbp-0x88],eax
    1923:	0f b6 05 29 28 20 00 	movzx  eax,BYTE PTR [rip+0x202829]        # 204153 <matching+0x3>
    192a:	0f be c0             	movsx  eax,al
    192d:	48 63 d0             	movsxd rdx,eax
    1930:	48 89 d0             	mov    rax,rdx
    1933:	48 01 c0             	add    rax,rax
    1936:	48 01 d0             	add    rax,rdx
    1939:	48 c1 e0 03          	shl    rax,0x3
    193d:	48 89 c2             	mov    rdx,rax
    1940:	48 8d 05 19 27 20 00 	lea    rax,[rip+0x202719]        # 204060 <papers>
    1947:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    194b:	48 89 c7             	mov    rdi,rax
    194e:	e8 cd f6 ff ff       	call   1020 <strlen@plt>
    1953:	48 d1 e8             	shr    rax,1
    1956:	89 c2                	mov    edx,eax
    1958:	b8 05 00 00 00       	mov    eax,0x5
    195d:	29 d0                	sub    eax,edx
    195f:	89 85 6c ff ff ff    	mov    DWORD PTR [rbp-0x94],eax
    1965:	0f b6 05 e7 27 20 00 	movzx  eax,BYTE PTR [rip+0x2027e7]        # 204153 <matching+0x3>
    196c:	0f be c0             	movsx  eax,al
    196f:	48 63 d0             	movsxd rdx,eax
    1972:	48 89 d0             	mov    rax,rdx
    1975:	48 01 c0             	add    rax,rax
    1978:	48 01 d0             	add    rax,rdx
    197b:	48 c1 e0 03          	shl    rax,0x3
    197f:	48 89 c2             	mov    rdx,rax
    1982:	48 8d 05 d7 26 20 00 	lea    rax,[rip+0x2026d7]        # 204060 <papers>
    1989:	4c 8b 3c 02          	mov    r15,QWORD PTR [rdx+rax*1]
    198d:	0f b6 05 bf 27 20 00 	movzx  eax,BYTE PTR [rip+0x2027bf]        # 204153 <matching+0x3>
    1994:	0f be c0             	movsx  eax,al
    1997:	48 63 d0             	movsxd rdx,eax
    199a:	48 89 d0             	mov    rax,rdx
    199d:	48 01 c0             	add    rax,rax
    19a0:	48 01 d0             	add    rax,rdx
    19a3:	48 c1 e0 03          	shl    rax,0x3
    19a7:	48 89 c2             	mov    rdx,rax
    19aa:	48 8d 05 af 26 20 00 	lea    rax,[rip+0x2026af]        # 204060 <papers>
    19b1:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    19b5:	48 89 c7             	mov    rdi,rax
    19b8:	e8 63 f6 ff ff       	call   1020 <strlen@plt>
    19bd:	48 d1 e8             	shr    rax,1
    19c0:	83 c0 05             	add    eax,0x5
    19c3:	89 85 68 ff ff ff    	mov    DWORD PTR [rbp-0x98],eax
    19c9:	0f b6 05 82 27 20 00 	movzx  eax,BYTE PTR [rip+0x202782]        # 204152 <matching+0x2>
    19d0:	0f be c0             	movsx  eax,al
    19d3:	48 63 d0             	movsxd rdx,eax
    19d6:	48 89 d0             	mov    rax,rdx
    19d9:	48 01 c0             	add    rax,rax
    19dc:	48 01 d0             	add    rax,rdx
    19df:	48 c1 e0 03          	shl    rax,0x3
    19e3:	48 89 c2             	mov    rdx,rax
    19e6:	48 8d 05 73 26 20 00 	lea    rax,[rip+0x202673]        # 204060 <papers>
    19ed:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    19f1:	48 89 c7             	mov    rdi,rax
    19f4:	e8 27 f6 ff ff       	call   1020 <strlen@plt>
    19f9:	48 d1 e8             	shr    rax,1
    19fc:	89 c2                	mov    edx,eax
    19fe:	b8 05 00 00 00       	mov    eax,0x5
    1a03:	29 d0                	sub    eax,edx
    1a05:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
    1a0b:	0f b6 05 40 27 20 00 	movzx  eax,BYTE PTR [rip+0x202740]        # 204152 <matching+0x2>
    1a12:	0f be c0             	movsx  eax,al
    1a15:	48 63 d0             	movsxd rdx,eax
    1a18:	48 89 d0             	mov    rax,rdx
    1a1b:	48 01 c0             	add    rax,rax
    1a1e:	48 01 d0             	add    rax,rdx
    1a21:	48 c1 e0 03          	shl    rax,0x3
    1a25:	48 89 c2             	mov    rdx,rax
    1a28:	48 8d 05 31 26 20 00 	lea    rax,[rip+0x202631]        # 204060 <papers>
    1a2f:	4c 8b 2c 02          	mov    r13,QWORD PTR [rdx+rax*1]
    1a33:	0f b6 05 18 27 20 00 	movzx  eax,BYTE PTR [rip+0x202718]        # 204152 <matching+0x2>
    1a3a:	0f be c0             	movsx  eax,al
    1a3d:	48 63 d0             	movsxd rdx,eax
    1a40:	48 89 d0             	mov    rax,rdx
    1a43:	48 01 c0             	add    rax,rax
    1a46:	48 01 d0             	add    rax,rdx
    1a49:	48 c1 e0 03          	shl    rax,0x3
    1a4d:	48 89 c2             	mov    rdx,rax
    1a50:	48 8d 05 09 26 20 00 	lea    rax,[rip+0x202609]        # 204060 <papers>
    1a57:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    1a5b:	48 89 c7             	mov    rdi,rax
    1a5e:	e8 bd f5 ff ff       	call   1020 <strlen@plt>
    1a63:	48 d1 e8             	shr    rax,1
    1a66:	83 c0 05             	add    eax,0x5
    1a69:	41 89 c6             	mov    r14d,eax
    1a6c:	0f b6 05 de 26 20 00 	movzx  eax,BYTE PTR [rip+0x2026de]        # 204151 <matching+0x1>
    1a73:	0f be c0             	movsx  eax,al
    1a76:	48 63 d0             	movsxd rdx,eax
    1a79:	48 89 d0             	mov    rax,rdx
    1a7c:	48 01 c0             	add    rax,rax
    1a7f:	48 01 d0             	add    rax,rdx
    1a82:	48 c1 e0 03          	shl    rax,0x3
    1a86:	48 89 c2             	mov    rdx,rax
    1a89:	48 8d 05 d0 25 20 00 	lea    rax,[rip+0x2025d0]        # 204060 <papers>
    1a90:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    1a94:	48 89 c7             	mov    rdi,rax
    1a97:	e8 84 f5 ff ff       	call   1020 <strlen@plt>
    1a9c:	48 d1 e8             	shr    rax,1
    1a9f:	89 c2                	mov    edx,eax
    1aa1:	b8 05 00 00 00       	mov    eax,0x5
    1aa6:	29 d0                	sub    eax,edx
    1aa8:	41 89 c4             	mov    r12d,eax
    1aab:	0f b6 05 9f 26 20 00 	movzx  eax,BYTE PTR [rip+0x20269f]        # 204151 <matching+0x1>
    1ab2:	0f be c0             	movsx  eax,al
    1ab5:	48 63 d0             	movsxd rdx,eax
    1ab8:	48 89 d0             	mov    rax,rdx
    1abb:	48 01 c0             	add    rax,rax
    1abe:	48 01 d0             	add    rax,rdx
    1ac1:	48 c1 e0 03          	shl    rax,0x3
    1ac5:	48 89 c2             	mov    rdx,rax
    1ac8:	48 8d 05 91 25 20 00 	lea    rax,[rip+0x202591]        # 204060 <papers>
    1acf:	48 8b 1c 02          	mov    rbx,QWORD PTR [rdx+rax*1]
    1ad3:	0f b6 05 77 26 20 00 	movzx  eax,BYTE PTR [rip+0x202677]        # 204151 <matching+0x1>
    1ada:	0f be c0             	movsx  eax,al
    1add:	48 63 d0             	movsxd rdx,eax
    1ae0:	48 89 d0             	mov    rax,rdx
    1ae3:	48 01 c0             	add    rax,rax
    1ae6:	48 01 d0             	add    rax,rdx
    1ae9:	48 c1 e0 03          	shl    rax,0x3
    1aed:	48 89 c2             	mov    rdx,rax
    1af0:	48 8d 05 69 25 20 00 	lea    rax,[rip+0x202569]        # 204060 <papers>
    1af7:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    1afb:	48 89 c7             	mov    rdi,rax
    1afe:	e8 1d f5 ff ff       	call   1020 <strlen@plt>
    1b03:	48 d1 e8             	shr    rax,1
    1b06:	83 c0 05             	add    eax,0x5
    1b09:	89 c2                	mov    edx,eax
    1b0b:	48 83 ec 08          	sub    rsp,0x8
    1b0f:	48 8d 05 7e 14 00 00 	lea    rax,[rip+0x147e]        # 2f94 <_ZL6BUFLEN+0x4>
    1b16:	50                   	push   rax
    1b17:	44 8b 5d cc          	mov    r11d,DWORD PTR [rbp-0x34]
    1b1b:	41 53                	push   r11
    1b1d:	ff 75 c0             	push   QWORD PTR [rbp-0x40]
    1b20:	8b 4d c8             	mov    ecx,DWORD PTR [rbp-0x38]
    1b23:	51                   	push   rcx
    1b24:	48 8d 05 69 14 00 00 	lea    rax,[rip+0x1469]        # 2f94 <_ZL6BUFLEN+0x4>
    1b2b:	50                   	push   rax
    1b2c:	8b 4d bc             	mov    ecx,DWORD PTR [rbp-0x44]
    1b2f:	51                   	push   rcx
    1b30:	ff 75 b0             	push   QWORD PTR [rbp-0x50]
    1b33:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    1b36:	56                   	push   rsi
    1b37:	48 8d 05 56 14 00 00 	lea    rax,[rip+0x1456]        # 2f94 <_ZL6BUFLEN+0x4>
    1b3e:	50                   	push   rax
    1b3f:	8b 75 ac             	mov    esi,DWORD PTR [rbp-0x54]
    1b42:	56                   	push   rsi
    1b43:	ff 75 a0             	push   QWORD PTR [rbp-0x60]
    1b46:	8b 4d a8             	mov    ecx,DWORD PTR [rbp-0x58]
    1b49:	51                   	push   rcx
    1b4a:	48 8d 05 43 14 00 00 	lea    rax,[rip+0x1443]        # 2f94 <_ZL6BUFLEN+0x4>
    1b51:	50                   	push   rax
    1b52:	8b 75 9c             	mov    esi,DWORD PTR [rbp-0x64]
    1b55:	56                   	push   rsi
    1b56:	ff 75 90             	push   QWORD PTR [rbp-0x70]
    1b59:	8b 4d 98             	mov    ecx,DWORD PTR [rbp-0x68]
    1b5c:	51                   	push   rcx
    1b5d:	48 8d 05 30 14 00 00 	lea    rax,[rip+0x1430]        # 2f94 <_ZL6BUFLEN+0x4>
    1b64:	50                   	push   rax
    1b65:	8b 75 8c             	mov    esi,DWORD PTR [rbp-0x74]
    1b68:	56                   	push   rsi
    1b69:	ff 75 80             	push   QWORD PTR [rbp-0x80]
    1b6c:	8b 4d 88             	mov    ecx,DWORD PTR [rbp-0x78]
    1b6f:	51                   	push   rcx
    1b70:	48 8d 05 1d 14 00 00 	lea    rax,[rip+0x141d]        # 2f94 <_ZL6BUFLEN+0x4>
    1b77:	50                   	push   rax
    1b78:	8b b5 7c ff ff ff    	mov    esi,DWORD PTR [rbp-0x84]
    1b7e:	56                   	push   rsi
    1b7f:	ff b5 70 ff ff ff    	push   QWORD PTR [rbp-0x90]
    1b85:	8b 8d 78 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x88]
    1b8b:	51                   	push   rcx
    1b8c:	48 8d 05 01 14 00 00 	lea    rax,[rip+0x1401]        # 2f94 <_ZL6BUFLEN+0x4>
    1b93:	50                   	push   rax
    1b94:	8b b5 6c ff ff ff    	mov    esi,DWORD PTR [rbp-0x94]
    1b9a:	56                   	push   rsi
    1b9b:	41 57                	push   r15
    1b9d:	8b 8d 68 ff ff ff    	mov    ecx,DWORD PTR [rbp-0x98]
    1ba3:	51                   	push   rcx
    1ba4:	48 8d 05 e9 13 00 00 	lea    rax,[rip+0x13e9]        # 2f94 <_ZL6BUFLEN+0x4>
    1bab:	50                   	push   rax
    1bac:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
    1bb2:	50                   	push   rax
    1bb3:	41 55                	push   r13
    1bb5:	41 56                	push   r14
    1bb7:	48 8d 05 d6 13 00 00 	lea    rax,[rip+0x13d6]        # 2f94 <_ZL6BUFLEN+0x4>
    1bbe:	50                   	push   rax
    1bbf:	41 54                	push   r12
    1bc1:	53                   	push   rbx
    1bc2:	52                   	push   rdx
    1bc3:	48 8d 05 ca 13 00 00 	lea    rax,[rip+0x13ca]        # 2f94 <_ZL6BUFLEN+0x4>
    1bca:	50                   	push   rax
    1bcb:	6a 04                	push   0x4
    1bcd:	48 8d 05 07 15 00 00 	lea    rax,[rip+0x1507]        # 30db <_ZL6BUFLEN+0x14b>
    1bd4:	50                   	push   rax
    1bd5:	6a 06                	push   0x6
    1bd7:	48 8d 05 b6 13 00 00 	lea    rax,[rip+0x13b6]        # 2f94 <_ZL6BUFLEN+0x4>
    1bde:	50                   	push   rax
    1bdf:	6a 04                	push   0x4
    1be1:	48 8d 05 f6 14 00 00 	lea    rax,[rip+0x14f6]        # 30de <_ZL6BUFLEN+0x14e>
    1be8:	50                   	push   rax
    1be9:	41 b9 06 00 00 00    	mov    r9d,0x6
    1bef:	4c 8d 05 9e 13 00 00 	lea    r8,[rip+0x139e]        # 2f94 <_ZL6BUFLEN+0x4>
    1bf6:	b9 04 00 00 00       	mov    ecx,0x4
    1bfb:	48 8d 15 93 13 00 00 	lea    rdx,[rip+0x1393]        # 2f95 <_ZL6BUFLEN+0x5>
    1c02:	be 06 00 00 00       	mov    esi,0x6
    1c07:	48 8d 3d 8a 13 00 00 	lea    rdi,[rip+0x138a]        # 2f98 <_ZL6BUFLEN+0x8>
    1c0e:	b8 00 00 00 00       	mov    eax,0x0
    1c13:	e8 c8 f3 ff ff       	call   fe0 <printf@plt>
    1c18:	48 81 c4 60 01 00 00 	add    rsp,0x160
    1c1f:	90                   	nop
    1c20:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    1c24:	5b                   	pop    rbx
    1c25:	41 5c                	pop    r12
    1c27:	41 5d                	pop    r13
    1c29:	41 5e                	pop    r14
    1c2b:	41 5f                	pop    r15
    1c2d:	5d                   	pop    rbp
    1c2e:	c3                   	ret    

0000000000001c2f <_Z11schedule_okv>:
    1c2f:	55                   	push   rbp
    1c30:	48 89 e5             	mov    rbp,rsp
    1c33:	48 83 ec 40          	sub    rsp,0x40
    1c37:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1c3e:	00 00 
    1c40:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1c44:	31 c0                	xor    eax,eax
    1c46:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
    1c4d:	00 
    1c4e:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
    1c55:	00 
    1c56:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
    1c5d:	00 
    1c5e:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
    1c65:	00 
    1c66:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
    1c6d:	00 
    1c6e:	c7 45 c8 01 00 00 00 	mov    DWORD PTR [rbp-0x38],0x1
    1c75:	83 7d c8 09          	cmp    DWORD PTR [rbp-0x38],0x9
    1c79:	7f 46                	jg     1cc1 <_Z11schedule_okv+0x92>
    1c7b:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
    1c7e:	48 63 d0             	movsxd rdx,eax
    1c81:	48 8d 05 c8 24 20 00 	lea    rax,[rip+0x2024c8]        # 204150 <matching>
    1c88:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
    1c8c:	84 c0                	test   al,al
    1c8e:	75 07                	jne    1c97 <_Z11schedule_okv+0x68>
    1c90:	b8 00 00 00 00       	mov    eax,0x0
    1c95:	eb 57                	jmp    1cee <_Z11schedule_okv+0xbf>
    1c97:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
    1c9a:	48 63 d0             	movsxd rdx,eax
    1c9d:	48 8d 05 ac 24 20 00 	lea    rax,[rip+0x2024ac]        # 204150 <matching>
    1ca4:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
    1ca8:	0f be c0             	movsx  eax,al
    1cab:	48 63 d0             	movsxd rdx,eax
    1cae:	8b 54 95 d0          	mov    edx,DWORD PTR [rbp+rdx*4-0x30]
    1cb2:	83 c2 01             	add    edx,0x1
    1cb5:	48 98                	cdqe   
    1cb7:	89 54 85 d0          	mov    DWORD PTR [rbp+rax*4-0x30],edx
    1cbb:	83 45 c8 01          	add    DWORD PTR [rbp-0x38],0x1
    1cbf:	eb b4                	jmp    1c75 <_Z11schedule_okv+0x46>
    1cc1:	c7 45 cc 01 00 00 00 	mov    DWORD PTR [rbp-0x34],0x1
    1cc8:	83 7d cc 09          	cmp    DWORD PTR [rbp-0x34],0x9
    1ccc:	7f 1b                	jg     1ce9 <_Z11schedule_okv+0xba>
    1cce:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    1cd1:	48 98                	cdqe   
    1cd3:	8b 44 85 d0          	mov    eax,DWORD PTR [rbp+rax*4-0x30]
    1cd7:	83 f8 01             	cmp    eax,0x1
    1cda:	74 07                	je     1ce3 <_Z11schedule_okv+0xb4>
    1cdc:	b8 00 00 00 00       	mov    eax,0x0
    1ce1:	eb 0b                	jmp    1cee <_Z11schedule_okv+0xbf>
    1ce3:	83 45 cc 01          	add    DWORD PTR [rbp-0x34],0x1
    1ce7:	eb df                	jmp    1cc8 <_Z11schedule_okv+0x99>
    1ce9:	b8 01 00 00 00       	mov    eax,0x1
    1cee:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    1cf2:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    1cf9:	00 00 
    1cfb:	74 05                	je     1d02 <_Z11schedule_okv+0xd3>
    1cfd:	e8 ae f3 ff ff       	call   10b0 <__stack_chk_fail@plt>
    1d02:	c9                   	leave  
    1d03:	c3                   	ret    

0000000000001d04 <_Z8schedulev>:
    1d04:	55                   	push   rbp
    1d05:	48 89 e5             	mov    rbp,rsp
    1d08:	48 83 ec 10          	sub    rsp,0x10
    1d0c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1d13:	00 00 
    1d15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1d19:	31 c0                	xor    eax,eax
    1d1b:	c7 45 f0 ff ff ff ff 	mov    DWORD PTR [rbp-0x10],0xffffffff
    1d22:	c7 45 f4 ff ff ff ff 	mov    DWORD PTR [rbp-0xc],0xffffffff
    1d29:	e8 03 f8 ff ff       	call   1531 <_Z11show_agendav>
    1d2e:	48 8d 55 f4          	lea    rdx,[rbp-0xc]
    1d32:	48 8d 45 f0          	lea    rax,[rbp-0x10]
    1d36:	48 89 c6             	mov    rsi,rax
    1d39:	48 8d 3d a1 13 00 00 	lea    rdi,[rip+0x13a1]        # 30e1 <_ZL6BUFLEN+0x151>
    1d40:	b8 00 00 00 00       	mov    eax,0x0
    1d45:	e8 96 f3 ff ff       	call   10e0 <scanf@plt>
    1d4a:	83 f8 02             	cmp    eax,0x2
    1d4d:	0f 94 c0             	sete   al
    1d50:	84 c0                	test   al,al
    1d52:	74 44                	je     1d98 <_Z8schedulev+0x94>
    1d54:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    1d57:	85 c0                	test   eax,eax
    1d59:	7e 3d                	jle    1d98 <_Z8schedulev+0x94>
    1d5b:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    1d5e:	83 f8 09             	cmp    eax,0x9
    1d61:	7f 35                	jg     1d98 <_Z8schedulev+0x94>
    1d63:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    1d66:	85 c0                	test   eax,eax
    1d68:	78 2e                	js     1d98 <_Z8schedulev+0x94>
    1d6a:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    1d6d:	83 f8 09             	cmp    eax,0x9
    1d70:	7f 26                	jg     1d98 <_Z8schedulev+0x94>
    1d72:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
    1d75:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    1d78:	89 d1                	mov    ecx,edx
    1d7a:	48 63 d0             	movsxd rdx,eax
    1d7d:	48 8d 05 cc 23 20 00 	lea    rax,[rip+0x2023cc]        # 204150 <matching>
    1d84:	88 0c 02             	mov    BYTE PTR [rdx+rax*1],cl
    1d87:	e8 a3 fe ff ff       	call   1c2f <_Z11schedule_okv>
    1d8c:	84 c0                	test   al,al
    1d8e:	75 07                	jne    1d97 <_Z8schedulev+0x93>
    1d90:	e8 9c f7 ff ff       	call   1531 <_Z11show_agendav>
    1d95:	eb 97                	jmp    1d2e <_Z8schedulev+0x2a>
    1d97:	90                   	nop
    1d98:	90                   	nop
    1d99:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1d9d:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    1da4:	00 00 
    1da6:	74 05                	je     1dad <_Z8schedulev+0xa9>
    1da8:	e8 03 f3 ff ff       	call   10b0 <__stack_chk_fail@plt>
    1dad:	c9                   	leave  
    1dae:	c3                   	ret    

0000000000001daf <_Z13set_variablesP5Paper>:
    1daf:	55                   	push   rbp
    1db0:	48 89 e5             	mov    rbp,rsp
    1db3:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    1db7:	64 c7 04 25 60 ff ff 	mov    DWORD PTR fs:0xffffffffffffff60,0x2dc6c0
    1dbe:	ff c0 c6 2d 00 
    1dc3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    1dc7:	64 48 89 04 25 68 ff 	mov    QWORD PTR fs:0xffffffffffffff68,rax
    1dce:	ff ff 
    1dd0:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [rbp-0x8],0x1
    1dd7:	83 7d f8 09          	cmp    DWORD PTR [rbp-0x8],0x9
    1ddb:	7f 3c                	jg     1e19 <_Z13set_variablesP5Paper+0x6a>
    1ddd:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
    1de0:	48 63 d0             	movsxd rdx,eax
    1de3:	48 89 d0             	mov    rax,rdx
    1de6:	48 01 c0             	add    rax,rax
    1de9:	48 01 d0             	add    rax,rdx
    1dec:	48 c1 e0 03          	shl    rax,0x3
    1df0:	48 8d 15 69 22 20 00 	lea    rdx,[rip+0x202269]        # 204060 <papers>
    1df7:	48 01 c2             	add    rdx,rax
    1dfa:	64 48 8b 04 25 68 ff 	mov    rax,QWORD PTR fs:0xffffffffffffff68
    1e01:	ff ff 
    1e03:	48 39 c2             	cmp    rdx,rax
    1e06:	75 0b                	jne    1e13 <_Z13set_variablesP5Paper+0x64>
    1e08:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
    1e0b:	64 89 04 25 50 ff ff 	mov    DWORD PTR fs:0xffffffffffffff50,eax
    1e12:	ff 
    1e13:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
    1e17:	eb be                	jmp    1dd7 <_Z13set_variablesP5Paper+0x28>
    1e19:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    1e20:	83 7d fc 02          	cmp    DWORD PTR [rbp-0x4],0x2
    1e24:	7f 42                	jg     1e68 <_Z13set_variablesP5Paper+0xb9>
    1e26:	8b 15 30 23 20 00    	mov    edx,DWORD PTR [rip+0x202330]        # 20415c <cur_time>
    1e2c:	89 d0                	mov    eax,edx
    1e2e:	01 c0                	add    eax,eax
    1e30:	01 c2                	add    edx,eax
    1e32:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1e35:	01 d0                	add    eax,edx
    1e37:	83 c0 01             	add    eax,0x1
    1e3a:	48 63 d0             	movsxd rdx,eax
    1e3d:	48 8d 05 0c 23 20 00 	lea    rax,[rip+0x20230c]        # 204150 <matching>
    1e44:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
    1e48:	0f be d0             	movsx  edx,al
    1e4b:	64 8b 04 25 50 ff ff 	mov    eax,DWORD PTR fs:0xffffffffffffff50
    1e52:	ff 
    1e53:	39 c2                	cmp    edx,eax
    1e55:	75 0b                	jne    1e62 <_Z13set_variablesP5Paper+0xb3>
    1e57:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1e5a:	64 89 04 25 54 ff ff 	mov    DWORD PTR fs:0xffffffffffffff54,eax
    1e61:	ff 
    1e62:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    1e66:	eb b8                	jmp    1e20 <_Z13set_variablesP5Paper+0x71>
    1e68:	90                   	nop
    1e69:	5d                   	pop    rbp
    1e6a:	c3                   	ret    

0000000000001e6b <_Z9a_putcharc>:
    1e6b:	55                   	push   rbp
    1e6c:	48 89 e5             	mov    rbp,rsp
    1e6f:	48 83 ec 20          	sub    rsp,0x20
    1e73:	89 f8                	mov    eax,edi
    1e75:	88 45 ec             	mov    BYTE PTR [rbp-0x14],al
    1e78:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    1e7f:	81 7d fc e7 03 00 00 	cmp    DWORD PTR [rbp-0x4],0x3e7
    1e86:	7f 6e                	jg     1ef6 <_Z9a_putcharc+0x8b>
    1e88:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1e8b:	48 98                	cdqe   
    1e8d:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    1e94:	00 
    1e95:	48 8d 05 44 23 20 00 	lea    rax,[rip+0x202344]        # 2041e0 <aud>
    1e9c:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    1ea0:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    1ea3:	64 8b 04 25 54 ff ff 	mov    eax,DWORD PTR fs:0xffffffffffffff54
    1eaa:	ff 
    1eab:	39 c2                	cmp    edx,eax
    1ead:	75 41                	jne    1ef0 <_Z9a_putcharc+0x85>
    1eaf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1eb2:	48 98                	cdqe   
    1eb4:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    1ebb:	00 
    1ebc:	48 8d 05 1d 23 20 00 	lea    rax,[rip+0x20231d]        # 2041e0 <aud>
    1ec3:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    1ec7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1eca:	48 98                	cdqe   
    1ecc:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    1ed3:	00 
    1ed4:	48 8d 05 05 23 20 00 	lea    rax,[rip+0x202305]        # 2041e0 <aud>
    1edb:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    1edf:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1ee2:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1ee5:	0f be 4d ec          	movsx  ecx,BYTE PTR [rbp-0x14]
    1ee9:	89 ce                	mov    esi,ecx
    1eeb:	48 89 d7             	mov    rdi,rdx
    1eee:	ff d0                	call   rax
    1ef0:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    1ef4:	eb 89                	jmp    1e7f <_Z9a_putcharc+0x14>
    1ef6:	90                   	nop
    1ef7:	c9                   	leave  
    1ef8:	c3                   	ret    

0000000000001ef9 <_Z6a_putsPKc>:
    1ef9:	55                   	push   rbp
    1efa:	48 89 e5             	mov    rbp,rsp
    1efd:	48 83 ec 20          	sub    rsp,0x20
    1f01:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    1f05:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    1f0c:	81 7d fc e7 03 00 00 	cmp    DWORD PTR [rbp-0x4],0x3e7
    1f13:	7f 73                	jg     1f88 <_Z6a_putsPKc+0x8f>
    1f15:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1f18:	48 98                	cdqe   
    1f1a:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    1f21:	00 
    1f22:	48 8d 05 b7 22 20 00 	lea    rax,[rip+0x2022b7]        # 2041e0 <aud>
    1f29:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    1f2d:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    1f30:	64 8b 04 25 54 ff ff 	mov    eax,DWORD PTR fs:0xffffffffffffff54
    1f37:	ff 
    1f38:	39 c2                	cmp    edx,eax
    1f3a:	75 46                	jne    1f82 <_Z6a_putsPKc+0x89>
    1f3c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1f3f:	48 98                	cdqe   
    1f41:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    1f48:	00 
    1f49:	48 8d 05 90 22 20 00 	lea    rax,[rip+0x202290]        # 2041e0 <aud>
    1f50:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    1f54:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1f57:	48 98                	cdqe   
    1f59:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    1f60:	00 
    1f61:	48 8d 05 78 22 20 00 	lea    rax,[rip+0x202278]        # 2041e0 <aud>
    1f68:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    1f6c:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1f6f:	48 83 c0 08          	add    rax,0x8
    1f73:	48 8b 00             	mov    rax,QWORD PTR [rax]
    1f76:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
    1f7a:	48 89 ce             	mov    rsi,rcx
    1f7d:	48 89 d7             	mov    rdi,rdx
    1f80:	ff d0                	call   rax
    1f82:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    1f86:	eb 84                	jmp    1f0c <_Z6a_putsPKc+0x13>
    1f88:	90                   	nop
    1f89:	c9                   	leave  
    1f8a:	c3                   	ret    

0000000000001f8b <_Z7do_talkv>:
    1f8b:	55                   	push   rbp
    1f8c:	48 89 e5             	mov    rbp,rsp
    1f8f:	48 83 ec 10          	sub    rsp,0x10
    1f93:	64 48 8b 04 25 68 ff 	mov    rax,QWORD PTR fs:0xffffffffffffff68
    1f9a:	ff ff 
    1f9c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
    1fa0:	48 89 c7             	mov    rdi,rax
    1fa3:	e8 78 f0 ff ff       	call   1020 <strlen@plt>
    1fa8:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
    1fab:	64 8b 04 25 60 ff ff 	mov    eax,DWORD PTR fs:0xffffffffffffff60
    1fb2:	ff 
    1fb3:	99                   	cdq    
    1fb4:	f7 7d f8             	idiv   DWORD PTR [rbp-0x8]
    1fb7:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
    1fba:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    1fc1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    1fc4:	3b 45 f8             	cmp    eax,DWORD PTR [rbp-0x8]
    1fc7:	7d 45                	jge    200e <_Z7do_talkv+0x83>
    1fc9:	64 48 8b 04 25 68 ff 	mov    rax,QWORD PTR fs:0xffffffffffffff68
    1fd0:	ff ff 
    1fd2:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    1fd6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    1fd9:	48 98                	cdqe   
    1fdb:	48 01 d0             	add    rax,rdx
    1fde:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    1fe1:	0f be c0             	movsx  eax,al
    1fe4:	89 c7                	mov    edi,eax
    1fe6:	e8 80 fe ff ff       	call   1e6b <_Z9a_putcharc>
    1feb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    1fee:	89 c7                	mov    edi,eax
    1ff0:	e8 2b f1 ff ff       	call   1120 <usleep@plt>
    1ff5:	64 8b 04 25 60 ff ff 	mov    eax,DWORD PTR fs:0xffffffffffffff60
    1ffc:	ff 
    1ffd:	2b 45 fc             	sub    eax,DWORD PTR [rbp-0x4]
    2000:	64 89 04 25 60 ff ff 	mov    DWORD PTR fs:0xffffffffffffff60,eax
    2007:	ff 
    2008:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    200c:	eb b3                	jmp    1fc1 <_Z7do_talkv+0x36>
    200e:	bf 0a 00 00 00       	mov    edi,0xa
    2013:	e8 53 fe ff ff       	call   1e6b <_Z9a_putcharc>
    2018:	90                   	nop
    2019:	c9                   	leave  
    201a:	c3                   	ret    

000000000000201b <_Z8times_upv>:
    201b:	55                   	push   rbp
    201c:	48 89 e5             	mov    rbp,rsp
    201f:	64 8b 04 25 60 ff ff 	mov    eax,DWORD PTR fs:0xffffffffffffff60
    2026:	ff 
    2027:	85 c0                	test   eax,eax
    2029:	0f 9e c0             	setle  al
    202c:	5d                   	pop    rbp
    202d:	c3                   	ret    

000000000000202e <_Z8responseP8AudiencePc>:
    202e:	55                   	push   rbp
    202f:	48 89 e5             	mov    rbp,rsp
    2032:	48 83 ec 20          	sub    rsp,0x20
    2036:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    203a:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    203e:	66 0f 6f 05 3a 13 00 	movdqa xmm0,XMMWORD PTR [rip+0x133a]        # 3380 <_ZL6BUFLEN+0x3f0>
    2045:	00 
    2046:	64 0f 11 04 25 90 ff 	movups XMMWORD PTR fs:0xffffffffffffff90,xmm0
    204d:	ff ff 
    204f:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    2056:	00 00 
    2058:	48 05 a0 ff ff ff    	add    rax,0xffffffffffffffa0
    205e:	c7 00 20 69 73 3a    	mov    DWORD PTR [rax],0x3a736920
    2064:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    206b:	00 00 
    206d:	48 05 a4 ff ff ff    	add    rax,0xffffffffffffffa4
    2073:	66 c7 00 20 00       	mov    WORD PTR [rax],0x20
    2078:	64 48 8b 04 25 00 00 	mov    rax,QWORD PTR fs:0x0
    207f:	00 00 
    2081:	48 05 90 ff ff ff    	add    rax,0xffffffffffffff90
    2087:	48 83 c0 15          	add    rax,0x15
    208b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    208f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    2093:	48 89 c7             	mov    rdi,rax
    2096:	e8 85 ef ff ff       	call   1020 <strlen@plt>
    209b:	48 8d 50 ff          	lea    rdx,[rax-0x1]
    209f:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
    20a3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    20a7:	48 89 ce             	mov    rsi,rcx
    20aa:	48 89 c7             	mov    rdi,rax
    20ad:	e8 8e ef ff ff       	call   1040 <strncpy@plt>
    20b2:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    20b9:	81 7d f4 e7 03 00 00 	cmp    DWORD PTR [rbp-0xc],0x3e7
    20c0:	0f 8f 10 02 00 00    	jg     22d6 <_Z8responseP8AudiencePc+0x2a8>
    20c6:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    20c9:	48 98                	cdqe   
    20cb:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    20d2:	00 
    20d3:	48 8d 05 06 21 20 00 	lea    rax,[rip+0x202106]        # 2041e0 <aud>
    20da:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    20de:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    20e1:	64 8b 04 25 54 ff ff 	mov    eax,DWORD PTR fs:0xffffffffffffff54
    20e8:	ff 
    20e9:	39 c2                	cmp    edx,eax
    20eb:	0f 85 dc 01 00 00    	jne    22cd <_Z8responseP8AudiencePc+0x29f>
    20f1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    20f4:	48 98                	cdqe   
    20f6:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    20fd:	00 
    20fe:	48 8d 05 db 20 20 00 	lea    rax,[rip+0x2020db]        # 2041e0 <aud>
    2105:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    2109:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    210c:	48 98                	cdqe   
    210e:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2115:	00 
    2116:	48 8d 05 c3 20 20 00 	lea    rax,[rip+0x2020c3]        # 2041e0 <aud>
    211d:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    2121:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2124:	48 83 c0 08          	add    rax,0x8
    2128:	48 8b 00             	mov    rax,QWORD PTR [rax]
    212b:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    2132:	00 00 
    2134:	48 81 c1 90 ff ff ff 	add    rcx,0xffffffffffffff90
    213b:	48 89 ce             	mov    rsi,rcx
    213e:	48 89 d7             	mov    rdi,rdx
    2141:	ff d0                	call   rax
    2143:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    2146:	48 98                	cdqe   
    2148:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    214f:	00 
    2150:	48 8d 05 89 20 20 00 	lea    rax,[rip+0x202089]        # 2041e0 <aud>
    2157:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    215b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    215e:	48 98                	cdqe   
    2160:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2167:	00 
    2168:	48 8d 05 71 20 20 00 	lea    rax,[rip+0x202071]        # 2041e0 <aud>
    216f:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    2173:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2176:	48 83 c0 08          	add    rax,0x8
    217a:	48 8b 00             	mov    rax,QWORD PTR [rax]
    217d:	48 8d 35 46 10 00 00 	lea    rsi,[rip+0x1046]        # 31ca <_ZL6BUFLEN+0x23a>
    2184:	48 89 d7             	mov    rdi,rdx
    2187:	ff d0                	call   rax
    2189:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    218c:	48 98                	cdqe   
    218e:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    2195:	00 
    2196:	48 8d 05 43 20 20 00 	lea    rax,[rip+0x202043]        # 2041e0 <aud>
    219d:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    21a1:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    21a4:	48 98                	cdqe   
    21a6:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    21ad:	00 
    21ae:	48 8d 05 2b 20 20 00 	lea    rax,[rip+0x20202b]        # 2041e0 <aud>
    21b5:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    21b9:	48 8b 00             	mov    rax,QWORD PTR [rax]
    21bc:	48 83 c0 08          	add    rax,0x8
    21c0:	48 8b 00             	mov    rax,QWORD PTR [rax]
    21c3:	48 8d 35 1e 10 00 00 	lea    rsi,[rip+0x101e]        # 31e8 <_ZL6BUFLEN+0x258>
    21ca:	48 89 d7             	mov    rdi,rdx
    21cd:	ff d0                	call   rax
    21cf:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    21d2:	48 98                	cdqe   
    21d4:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    21db:	00 
    21dc:	48 8d 05 fd 1f 20 00 	lea    rax,[rip+0x201ffd]        # 2041e0 <aud>
    21e3:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    21e7:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    21ea:	48 98                	cdqe   
    21ec:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    21f3:	00 
    21f4:	48 8d 05 e5 1f 20 00 	lea    rax,[rip+0x201fe5]        # 2041e0 <aud>
    21fb:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    21ff:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2202:	48 83 c0 08          	add    rax,0x8
    2206:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2209:	48 8d 35 08 10 00 00 	lea    rsi,[rip+0x1008]        # 3218 <_ZL6BUFLEN+0x288>
    2210:	48 89 d7             	mov    rdi,rdx
    2213:	ff d0                	call   rax
    2215:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    2218:	48 98                	cdqe   
    221a:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    2221:	00 
    2222:	48 8d 05 b7 1f 20 00 	lea    rax,[rip+0x201fb7]        # 2041e0 <aud>
    2229:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    222d:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
    2231:	75 54                	jne    2287 <_Z8responseP8AudiencePc+0x259>
    2233:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    2236:	48 98                	cdqe   
    2238:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    223f:	00 
    2240:	48 8d 05 99 1f 20 00 	lea    rax,[rip+0x201f99]        # 2041e0 <aud>
    2247:	48 8b 0c 02          	mov    rcx,QWORD PTR [rdx+rax*1]
    224b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    224e:	48 98                	cdqe   
    2250:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    2257:	00 
    2258:	48 8d 05 81 1f 20 00 	lea    rax,[rip+0x201f81]        # 2041e0 <aud>
    225f:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    2263:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2266:	48 83 c0 20          	add    rax,0x20
    226a:	48 8b 00             	mov    rax,QWORD PTR [rax]
    226d:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    2274:	00 00 
    2276:	48 8d b2 70 ff ff ff 	lea    rsi,[rdx-0x90]
    227d:	ba 20 00 00 00       	mov    edx,0x20
    2282:	48 89 cf             	mov    rdi,rcx
    2285:	ff d0                	call   rax
    2287:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    228a:	48 98                	cdqe   
    228c:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    2293:	00 
    2294:	48 8d 05 45 1f 20 00 	lea    rax,[rip+0x201f45]        # 2041e0 <aud>
    229b:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    229f:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    22a2:	48 98                	cdqe   
    22a4:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    22ab:	00 
    22ac:	48 8d 05 2d 1f 20 00 	lea    rax,[rip+0x201f2d]        # 2041e0 <aud>
    22b3:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    22b7:	48 8b 00             	mov    rax,QWORD PTR [rax]
    22ba:	48 83 c0 08          	add    rax,0x8
    22be:	48 8b 00             	mov    rax,QWORD PTR [rax]
    22c1:	48 8d 35 70 0f 00 00 	lea    rsi,[rip+0xf70]        # 3238 <_ZL6BUFLEN+0x2a8>
    22c8:	48 89 d7             	mov    rdi,rdx
    22cb:	ff d0                	call   rax
    22cd:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    22d1:	e9 e3 fd ff ff       	jmp    20b9 <_Z8responseP8AudiencePc+0x8b>
    22d6:	bf 01 00 00 00       	mov    edi,0x1
    22db:	e8 a0 ed ff ff       	call   1080 <sleep@plt>
    22e0:	90                   	nop
    22e1:	c9                   	leave  
    22e2:	c3                   	ret    

00000000000022e3 <_Z7qa_timev>:
    22e3:	55                   	push   rbp
    22e4:	48 89 e5             	mov    rbp,rsp
    22e7:	48 83 ec 10          	sub    rsp,0x10
    22eb:	e8 2b fd ff ff       	call   201b <_Z8times_upv>
    22f0:	84 c0                	test   al,al
    22f2:	0f 85 df 00 00 00    	jne    23d7 <_Z7qa_timev+0xf4>
    22f8:	48 8d 3d 5c 0f 00 00 	lea    rdi,[rip+0xf5c]        # 325b <_ZL6BUFLEN+0x2cb>
    22ff:	e8 f5 fb ff ff       	call   1ef9 <_Z6a_putsPKc>
    2304:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    230b:	81 7d f4 e7 03 00 00 	cmp    DWORD PTR [rbp-0xc],0x3e7
    2312:	0f 8f c0 00 00 00    	jg     23d8 <_Z7qa_timev+0xf5>
    2318:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    231b:	48 98                	cdqe   
    231d:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    2324:	00 
    2325:	48 8d 05 b4 1e 20 00 	lea    rax,[rip+0x201eb4]        # 2041e0 <aud>
    232c:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    2330:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    2333:	64 8b 04 25 54 ff ff 	mov    eax,DWORD PTR fs:0xffffffffffffff54
    233a:	ff 
    233b:	39 c2                	cmp    edx,eax
    233d:	0f 85 8b 00 00 00    	jne    23ce <_Z7qa_timev+0xeb>
    2343:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    2346:	48 98                	cdqe   
    2348:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    234f:	00 
    2350:	48 8d 05 89 1e 20 00 	lea    rax,[rip+0x201e89]        # 2041e0 <aud>
    2357:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    235b:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    235e:	48 98                	cdqe   
    2360:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2367:	00 
    2368:	48 8d 05 71 1e 20 00 	lea    rax,[rip+0x201e71]        # 2041e0 <aud>
    236f:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    2373:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2376:	48 83 c0 18          	add    rax,0x18
    237a:	48 8b 00             	mov    rax,QWORD PTR [rax]
    237d:	48 89 d7             	mov    rdi,rdx
    2380:	ff d0                	call   rax
    2382:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2386:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    238b:	74 40                	je     23cd <_Z7qa_timev+0xea>
    238d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2391:	48 8d 35 d2 0e 00 00 	lea    rsi,[rip+0xed2]        # 326a <_ZL6BUFLEN+0x2da>
    2398:	48 89 c7             	mov    rdi,rax
    239b:	e8 70 ed ff ff       	call   1110 <strcmp@plt>
    23a0:	85 c0                	test   eax,eax
    23a2:	74 29                	je     23cd <_Z7qa_timev+0xea>
    23a4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    23a7:	48 98                	cdqe   
    23a9:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    23b0:	00 
    23b1:	48 8d 05 28 1e 20 00 	lea    rax,[rip+0x201e28]        # 2041e0 <aud>
    23b8:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    23bc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    23c0:	48 89 d6             	mov    rsi,rdx
    23c3:	48 89 c7             	mov    rdi,rax
    23c6:	e8 63 fc ff ff       	call   202e <_Z8responseP8AudiencePc>
    23cb:	eb 0b                	jmp    23d8 <_Z7qa_timev+0xf5>
    23cd:	90                   	nop
    23ce:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    23d2:	e9 34 ff ff ff       	jmp    230b <_Z7qa_timev+0x28>
    23d7:	90                   	nop
    23d8:	c9                   	leave  
    23d9:	c3                   	ret    

00000000000023da <_Z4talkPv>:
    23da:	55                   	push   rbp
    23db:	48 89 e5             	mov    rbp,rsp
    23de:	48 83 ec 20          	sub    rsp,0x20
    23e2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    23e6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    23ea:	48 89 c7             	mov    rdi,rax
    23ed:	e8 bd f9 ff ff       	call   1daf <_Z13set_variablesP5Paper>
    23f2:	e8 94 fb ff ff       	call   1f8b <_Z7do_talkv>
    23f7:	e8 e7 fe ff ff       	call   22e3 <_Z7qa_timev>
    23fc:	64 48 8b 04 25 68 ff 	mov    rax,QWORD PTR fs:0xffffffffffffff68
    2403:	ff ff 
    2405:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2408:	64 48 8b 14 25 00 00 	mov    rdx,QWORD PTR fs:0x0
    240f:	00 00 
    2411:	48 8d 8a 90 ff ff ff 	lea    rcx,[rdx-0x70]
    2418:	48 89 c2             	mov    rdx,rax
    241b:	48 8d 35 4e 0e 00 00 	lea    rsi,[rip+0xe4e]        # 3270 <_ZL6BUFLEN+0x2e0>
    2422:	48 89 cf             	mov    rdi,rcx
    2425:	b8 00 00 00 00       	mov    eax,0x0
    242a:	e8 c1 eb ff ff       	call   ff0 <sprintf@plt>
    242f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
    2436:	81 7d fc e7 03 00 00 	cmp    DWORD PTR [rbp-0x4],0x3e7
    243d:	0f 8f 82 00 00 00    	jg     24c5 <_Z4talkPv+0xeb>
    2443:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    2446:	48 98                	cdqe   
    2448:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    244f:	00 
    2450:	48 8d 05 89 1d 20 00 	lea    rax,[rip+0x201d89]        # 2041e0 <aud>
    2457:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    245b:	8b 50 08             	mov    edx,DWORD PTR [rax+0x8]
    245e:	64 8b 04 25 54 ff ff 	mov    eax,DWORD PTR fs:0xffffffffffffff54
    2465:	ff 
    2466:	39 c2                	cmp    edx,eax
    2468:	75 52                	jne    24bc <_Z4talkPv+0xe2>
    246a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    246d:	48 98                	cdqe   
    246f:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    2476:	00 
    2477:	48 8d 05 62 1d 20 00 	lea    rax,[rip+0x201d62]        # 2041e0 <aud>
    247e:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    2482:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
    2485:	48 98                	cdqe   
    2487:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    248e:	00 
    248f:	48 8d 05 4a 1d 20 00 	lea    rax,[rip+0x201d4a]        # 2041e0 <aud>
    2496:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    249a:	48 8b 00             	mov    rax,QWORD PTR [rax]
    249d:	48 83 c0 08          	add    rax,0x8
    24a1:	48 8b 00             	mov    rax,QWORD PTR [rax]
    24a4:	64 48 8b 0c 25 00 00 	mov    rcx,QWORD PTR fs:0x0
    24ab:	00 00 
    24ad:	48 81 c1 90 ff ff ff 	add    rcx,0xffffffffffffff90
    24b4:	48 89 ce             	mov    rsi,rcx
    24b7:	48 89 d7             	mov    rdi,rdx
    24ba:	ff d0                	call   rax
    24bc:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
    24c0:	e9 71 ff ff ff       	jmp    2436 <_Z4talkPv+0x5c>
    24c5:	b8 00 00 00 00       	mov    eax,0x0
    24ca:	c9                   	leave  
    24cb:	c3                   	ret    

00000000000024cc <_Z13init_audiencev>:
    24cc:	55                   	push   rbp
    24cd:	48 89 e5             	mov    rbp,rsp
    24d0:	53                   	push   rbx
    24d1:	48 83 ec 18          	sub    rsp,0x18
    24d5:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
    24dc:	81 7d e8 e4 03 00 00 	cmp    DWORD PTR [rbp-0x18],0x3e4
    24e3:	7f 33                	jg     2518 <_Z13init_audiencev+0x4c>
    24e5:	bf 10 00 00 00       	mov    edi,0x10
    24ea:	e8 b1 eb ff ff       	call   10a0 <_Znwm@plt>
    24ef:	48 89 c3             	mov    rbx,rax
    24f2:	48 89 df             	mov    rdi,rbx
    24f5:	e8 d8 08 00 00       	call   2dd2 <_ZN8AudienceC1Ev>
    24fa:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
    24fd:	48 98                	cdqe   
    24ff:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    2506:	00 
    2507:	48 8d 05 d2 1c 20 00 	lea    rax,[rip+0x201cd2]        # 2041e0 <aud>
    250e:	48 89 1c 02          	mov    QWORD PTR [rdx+rax*1],rbx
    2512:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
    2516:	eb c4                	jmp    24dc <_Z13init_audiencev+0x10>
    2518:	c7 45 ec e5 03 00 00 	mov    DWORD PTR [rbp-0x14],0x3e5
    251f:	81 7d ec e6 03 00 00 	cmp    DWORD PTR [rbp-0x14],0x3e6
    2526:	7f 33                	jg     255b <_Z13init_audiencev+0x8f>
    2528:	bf 10 00 00 00       	mov    edi,0x10
    252d:	e8 6e eb ff ff       	call   10a0 <_Znwm@plt>
    2532:	48 89 c3             	mov    rbx,rax
    2535:	48 89 df             	mov    rdi,rbx
    2538:	e8 af 08 00 00       	call   2dec <_ZN12NiceAudienceC1Ev>
    253d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    2540:	48 98                	cdqe   
    2542:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    2549:	00 
    254a:	48 8d 05 8f 1c 20 00 	lea    rax,[rip+0x201c8f]        # 2041e0 <aud>
    2551:	48 89 1c 02          	mov    QWORD PTR [rdx+rax*1],rbx
    2555:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    2559:	eb c4                	jmp    251f <_Z13init_audiencev+0x53>
    255b:	bf 10 00 00 00       	mov    edi,0x10
    2560:	e8 3b eb ff ff       	call   10a0 <_Znwm@plt>
    2565:	48 89 c3             	mov    rbx,rax
    2568:	48 89 df             	mov    rdi,rbx
    256b:	e8 a6 08 00 00       	call   2e16 <_ZN3YouC1Ev>
    2570:	48 89 1d a1 3b 20 00 	mov    QWORD PTR [rip+0x203ba1],rbx        # 206118 <aud+0x1f38>
    2577:	90                   	nop
    2578:	48 83 c4 18          	add    rsp,0x18
    257c:	5b                   	pop    rbx
    257d:	5d                   	pop    rbp
    257e:	c3                   	ret    

000000000000257f <_Z5startv>:
    257f:	55                   	push   rbp
    2580:	48 89 e5             	mov    rbp,rsp
    2583:	48 83 ec 30          	sub    rsp,0x30
    2587:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    258e:	00 00 
    2590:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2594:	31 c0                	xor    eax,eax
    2596:	e8 94 f6 ff ff       	call   1c2f <_Z11schedule_okv>
    259b:	83 f0 01             	xor    eax,0x1
    259e:	84 c0                	test   al,al
    25a0:	74 11                	je     25b3 <_Z5startv+0x34>
    25a2:	48 8d 3d e6 0c 00 00 	lea    rdi,[rip+0xce6]        # 328f <_ZL6BUFLEN+0x2ff>
    25a9:	e8 b2 eb ff ff       	call   1160 <puts@plt>
    25ae:	e9 83 01 00 00       	jmp    2736 <_Z5startv+0x1b7>
    25b3:	e8 14 ff ff ff       	call   24cc <_Z13init_audiencev>
    25b8:	c7 05 9a 1b 20 00 00 	mov    DWORD PTR [rip+0x201b9a],0x0        # 20415c <cur_time>
    25bf:	00 00 00 
    25c2:	8b 05 94 1b 20 00    	mov    eax,DWORD PTR [rip+0x201b94]        # 20415c <cur_time>
    25c8:	83 f8 02             	cmp    eax,0x2
    25cb:	0f 8f 59 01 00 00    	jg     272a <_Z5startv+0x1ab>
    25d1:	c7 45 d0 00 00 00 00 	mov    DWORD PTR [rbp-0x30],0x0
    25d8:	81 7d d0 e7 03 00 00 	cmp    DWORD PTR [rbp-0x30],0x3e7
    25df:	7f 45                	jg     2626 <_Z5startv+0xa7>
    25e1:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    25e4:	48 98                	cdqe   
    25e6:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    25ed:	00 
    25ee:	48 8d 05 eb 1b 20 00 	lea    rax,[rip+0x201beb]        # 2041e0 <aud>
    25f5:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
    25f9:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
    25fc:	48 98                	cdqe   
    25fe:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
    2605:	00 
    2606:	48 8d 05 d3 1b 20 00 	lea    rax,[rip+0x201bd3]        # 2041e0 <aud>
    260d:	48 8b 04 01          	mov    rax,QWORD PTR [rcx+rax*1]
    2611:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2614:	48 83 c0 10          	add    rax,0x10
    2618:	48 8b 00             	mov    rax,QWORD PTR [rax]
    261b:	48 89 d7             	mov    rdi,rdx
    261e:	ff d0                	call   rax
    2620:	83 45 d0 01          	add    DWORD PTR [rbp-0x30],0x1
    2624:	eb b2                	jmp    25d8 <_Z5startv+0x59>
    2626:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
    262d:	83 7d d4 02          	cmp    DWORD PTR [rbp-0x2c],0x2
    2631:	7f 6d                	jg     26a0 <_Z5startv+0x121>
    2633:	8b 15 23 1b 20 00    	mov    edx,DWORD PTR [rip+0x201b23]        # 20415c <cur_time>
    2639:	89 d0                	mov    eax,edx
    263b:	01 c0                	add    eax,eax
    263d:	01 c2                	add    edx,eax
    263f:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
    2642:	01 d0                	add    eax,edx
    2644:	83 c0 01             	add    eax,0x1
    2647:	48 63 d0             	movsxd rdx,eax
    264a:	48 8d 05 ff 1a 20 00 	lea    rax,[rip+0x201aff]        # 204150 <matching>
    2651:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
    2655:	0f be c0             	movsx  eax,al
    2658:	48 63 d0             	movsxd rdx,eax
    265b:	48 89 d0             	mov    rax,rdx
    265e:	48 01 c0             	add    rax,rax
    2661:	48 01 d0             	add    rax,rdx
    2664:	48 c1 e0 03          	shl    rax,0x3
    2668:	48 8d 15 f1 19 20 00 	lea    rdx,[rip+0x2019f1]        # 204060 <papers>
    266f:	48 01 c2             	add    rdx,rax
    2672:	48 8d 45 e0          	lea    rax,[rbp-0x20]
    2676:	8b 4d d4             	mov    ecx,DWORD PTR [rbp-0x2c]
    2679:	48 63 c9             	movsxd rcx,ecx
    267c:	48 c1 e1 03          	shl    rcx,0x3
    2680:	48 01 c8             	add    rax,rcx
    2683:	48 89 d1             	mov    rcx,rdx
    2686:	48 8d 15 4d fd ff ff 	lea    rdx,[rip+0xfffffffffffffd4d]        # 23da <_Z4talkPv>
    268d:	be 00 00 00 00       	mov    esi,0x0
    2692:	48 89 c7             	mov    rdi,rax
    2695:	e8 c6 e9 ff ff       	call   1060 <pthread_create@plt>
    269a:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
    269e:	eb 8d                	jmp    262d <_Z5startv+0xae>
    26a0:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [rbp-0x28],0x0
    26a7:	83 7d d8 02          	cmp    DWORD PTR [rbp-0x28],0x2
    26ab:	7f 1d                	jg     26ca <_Z5startv+0x14b>
    26ad:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    26b0:	48 98                	cdqe   
    26b2:	48 8b 44 c5 e0       	mov    rax,QWORD PTR [rbp+rax*8-0x20]
    26b7:	be 00 00 00 00       	mov    esi,0x0
    26bc:	48 89 c7             	mov    rdi,rax
    26bf:	e8 6c e9 ff ff       	call   1030 <pthread_join@plt>
    26c4:	83 45 d8 01          	add    DWORD PTR [rbp-0x28],0x1
    26c8:	eb dd                	jmp    26a7 <_Z5startv+0x128>
    26ca:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
    26d1:	81 7d dc e7 03 00 00 	cmp    DWORD PTR [rbp-0x24],0x3e7
    26d8:	7f 3c                	jg     2716 <_Z5startv+0x197>
    26da:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    26dd:	48 98                	cdqe   
    26df:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
    26e6:	00 
    26e7:	48 8d 05 f2 1a 20 00 	lea    rax,[rip+0x201af2]        # 2041e0 <aud>
    26ee:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    26f2:	0f b6 40 0c          	movzx  eax,BYTE PTR [rax+0xc]
    26f6:	84 c0                	test   al,al
    26f8:	74 16                	je     2710 <_Z5startv+0x191>
    26fa:	48 8d 3d 97 0b 00 00 	lea    rdi,[rip+0xb97]        # 3298 <_ZL6BUFLEN+0x308>
    2701:	e8 5a ea ff ff       	call   1160 <puts@plt>
    2706:	bf 00 00 00 00       	mov    edi,0x0
    270b:	e8 c0 e9 ff ff       	call   10d0 <exit@plt>
    2710:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
    2714:	eb bb                	jmp    26d1 <_Z5startv+0x152>
    2716:	8b 05 40 1a 20 00    	mov    eax,DWORD PTR [rip+0x201a40]        # 20415c <cur_time>
    271c:	83 c0 01             	add    eax,0x1
    271f:	89 05 37 1a 20 00    	mov    DWORD PTR [rip+0x201a37],eax        # 20415c <cur_time>
    2725:	e9 98 fe ff ff       	jmp    25c2 <_Z5startv+0x43>
    272a:	48 8d 3d a7 0b 00 00 	lea    rdi,[rip+0xba7]        # 32d8 <_ZL6BUFLEN+0x348>
    2731:	e8 2a ea ff ff       	call   1160 <puts@plt>
    2736:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    273a:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2741:	00 00 
    2743:	74 05                	je     274a <_Z5startv+0x1cb>
    2745:	e8 66 e9 ff ff       	call   10b0 <__stack_chk_fail@plt>
    274a:	c9                   	leave  
    274b:	c3                   	ret    

000000000000274c <_Z4menuv>:
    274c:	55                   	push   rbp
    274d:	48 89 e5             	mov    rbp,rsp
    2750:	48 8d 3d a9 0b 00 00 	lea    rdi,[rip+0xba9]        # 3300 <_ZL6BUFLEN+0x370>
    2757:	e8 04 ea ff ff       	call   1160 <puts@plt>
    275c:	e8 ce f4 ff ff       	call   1c2f <_Z11schedule_okv>
    2761:	84 c0                	test   al,al
    2763:	74 0c                	je     2771 <_Z4menuv+0x25>
    2765:	48 8d 3d c1 0b 00 00 	lea    rdi,[rip+0xbc1]        # 332d <_ZL6BUFLEN+0x39d>
    276c:	e8 ef e9 ff ff       	call   1160 <puts@plt>
    2771:	48 8d 3d bf 0b 00 00 	lea    rdi,[rip+0xbbf]        # 3337 <_ZL6BUFLEN+0x3a7>
    2778:	e8 e3 e9 ff ff       	call   1160 <puts@plt>
    277d:	90                   	nop
    277e:	5d                   	pop    rbp
    277f:	c3                   	ret    

0000000000002780 <_Z5setupv>:
    2780:	55                   	push   rbp
    2781:	48 89 e5             	mov    rbp,rsp
    2784:	48 83 ec 10          	sub    rsp,0x10
    2788:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    278f:	00 00 
    2791:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2795:	31 c0                	xor    eax,eax
    2797:	48 8b 05 a2 18 20 00 	mov    rax,QWORD PTR [rip+0x2018a2]        # 204040 <stdout@@GLIBC_2.2.5>
    279e:	be 00 00 00 00       	mov    esi,0x0
    27a3:	48 89 c7             	mov    rdi,rax
    27a6:	e8 85 e9 ff ff       	call   1130 <setbuf@plt>
    27ab:	48 8b 05 9e 18 20 00 	mov    rax,QWORD PTR [rip+0x20189e]        # 204050 <stdin@@GLIBC_2.2.5>
    27b2:	be 00 00 00 00       	mov    esi,0x0
    27b7:	48 89 c7             	mov    rdi,rax
    27ba:	e8 71 e9 ff ff       	call   1130 <setbuf@plt>
    27bf:	be 00 00 00 00       	mov    esi,0x0
    27c4:	48 8d 3d 75 0b 00 00 	lea    rdi,[rip+0xb75]        # 3340 <_ZL6BUFLEN+0x3b0>
    27cb:	b8 00 00 00 00       	mov    eax,0x0
    27d0:	e8 9b e8 ff ff       	call   1070 <open@plt>
    27d5:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    27d8:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    27dc:	79 0a                	jns    27e8 <_Z5setupv+0x68>
    27de:	bf 01 00 00 00       	mov    edi,0x1
    27e3:	e8 98 e9 ff ff       	call   1180 <_exit@plt>
    27e8:	48 8d 4d f0          	lea    rcx,[rbp-0x10]
    27ec:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    27ef:	ba 04 00 00 00       	mov    edx,0x4
    27f4:	48 89 ce             	mov    rsi,rcx
    27f7:	89 c7                	mov    edi,eax
    27f9:	e8 42 e9 ff ff       	call   1140 <read@plt>
    27fe:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    2801:	89 c7                	mov    edi,eax
    2803:	e8 98 e9 ff ff       	call   11a0 <close@plt>
    2808:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
    280b:	89 c7                	mov    edi,eax
    280d:	e8 7e e8 ff ff       	call   1090 <srand@plt>
    2812:	90                   	nop
    2813:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2817:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    281e:	00 00 
    2820:	74 05                	je     2827 <_Z5setupv+0xa7>
    2822:	e8 89 e8 ff ff       	call   10b0 <__stack_chk_fail@plt>
    2827:	c9                   	leave  
    2828:	c3                   	ret    

0000000000002829 <main>:
    2829:	55                   	push   rbp
    282a:	48 89 e5             	mov    rbp,rsp
    282d:	48 83 ec 10          	sub    rsp,0x10
    2831:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2838:	00 00 
    283a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    283e:	31 c0                	xor    eax,eax
    2840:	e8 3b ff ff ff       	call   2780 <_Z5setupv>
    2845:	e8 49 eb ff ff       	call   1393 <_Z11init_papersv>
    284a:	e8 59 ec ff ff       	call   14a8 <_Z7welcomev>
    284f:	e8 f8 fe ff ff       	call   274c <_Z4menuv>
    2854:	48 8d 45 f4          	lea    rax,[rbp-0xc]
    2858:	48 89 c6             	mov    rsi,rax
    285b:	48 8d 3d 65 09 00 00 	lea    rdi,[rip+0x965]        # 31c7 <_ZL6BUFLEN+0x237>
    2862:	b8 00 00 00 00       	mov    eax,0x0
    2867:	e8 74 e8 ff ff       	call   10e0 <scanf@plt>
    286c:	83 f8 01             	cmp    eax,0x1
    286f:	0f 95 c0             	setne  al
    2872:	84 c0                	test   al,al
    2874:	74 07                	je     287d <main+0x54>
    2876:	b8 00 00 00 00       	mov    eax,0x0
    287b:	eb 67                	jmp    28e4 <main+0xbb>
    287d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    2880:	83 c0 01             	add    eax,0x1
    2883:	83 f8 05             	cmp    eax,0x5
    2886:	77 c7                	ja     284f <main+0x26>
    2888:	89 c0                	mov    eax,eax
    288a:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    2891:	00 
    2892:	48 8d 05 cf 0a 00 00 	lea    rax,[rip+0xacf]        # 3368 <_ZL6BUFLEN+0x3d8>
    2899:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
    289c:	48 63 d0             	movsxd rdx,eax
    289f:	48 8d 05 c2 0a 00 00 	lea    rax,[rip+0xac2]        # 3368 <_ZL6BUFLEN+0x3d8>
    28a6:	48 01 d0             	add    rax,rdx
    28a9:	ff e0                	jmp    rax
    28ab:	e8 0b ec ff ff       	call   14bb <_Z11show_papersv>
    28b0:	eb 2d                	jmp    28df <main+0xb6>
    28b2:	e8 7a ec ff ff       	call   1531 <_Z11show_agendav>
    28b7:	eb 26                	jmp    28df <main+0xb6>
    28b9:	e8 46 f4 ff ff       	call   1d04 <_Z8schedulev>
    28be:	eb 1f                	jmp    28df <main+0xb6>
    28c0:	e8 ba fc ff ff       	call   257f <_Z5startv>
    28c5:	b8 00 00 00 00       	mov    eax,0x0
    28ca:	eb 18                	jmp    28e4 <main+0xbb>
    28cc:	48 8d 3d 7a 0a 00 00 	lea    rdi,[rip+0xa7a]        # 334d <_ZL6BUFLEN+0x3bd>
    28d3:	e8 88 e8 ff ff       	call   1160 <puts@plt>
    28d8:	b8 00 00 00 00       	mov    eax,0x0
    28dd:	eb 05                	jmp    28e4 <main+0xbb>
    28df:	e9 6b ff ff ff       	jmp    284f <main+0x26>
    28e4:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
    28e8:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
    28ef:	00 00 
    28f1:	74 05                	je     28f8 <main+0xcf>
    28f3:	e8 b8 e7 ff ff       	call   10b0 <__stack_chk_fail@plt>
    28f8:	c9                   	leave  
    28f9:	c3                   	ret    

00000000000028fa <_Z41__static_initialization_and_destruction_0ii>:
    28fa:	55                   	push   rbp
    28fb:	48 89 e5             	mov    rbp,rsp
    28fe:	41 54                	push   r12
    2900:	53                   	push   rbx
    2901:	48 83 ec 10          	sub    rsp,0x10
    2905:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    2908:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
    290b:	83 7d ec 01          	cmp    DWORD PTR [rbp-0x14],0x1
    290f:	75 2f                	jne    2940 <_Z41__static_initialization_and_destruction_0ii+0x46>
    2911:	81 7d e8 ff ff 00 00 	cmp    DWORD PTR [rbp-0x18],0xffff
    2918:	75 26                	jne    2940 <_Z41__static_initialization_and_destruction_0ii+0x46>
    291a:	48 8d 05 3f 17 20 00 	lea    rax,[rip+0x20173f]        # 204060 <papers>
    2921:	bb 09 00 00 00       	mov    ebx,0x9
    2926:	49 89 c4             	mov    r12,rax
    2929:	48 85 db             	test   rbx,rbx
    292c:	78 12                	js     2940 <_Z41__static_initialization_and_destruction_0ii+0x46>
    292e:	4c 89 e7             	mov    rdi,r12
    2931:	e8 2a 00 00 00       	call   2960 <_ZN5PaperC1Ev>
    2936:	49 83 c4 18          	add    r12,0x18
    293a:	48 83 eb 01          	sub    rbx,0x1
    293e:	eb e9                	jmp    2929 <_Z41__static_initialization_and_destruction_0ii+0x2f>
    2940:	90                   	nop
    2941:	48 83 c4 10          	add    rsp,0x10
    2945:	5b                   	pop    rbx
    2946:	41 5c                	pop    r12
    2948:	5d                   	pop    rbp
    2949:	c3                   	ret    

000000000000294a <_GLOBAL__sub_I__Z7contactv>:
    294a:	55                   	push   rbp
    294b:	48 89 e5             	mov    rbp,rsp
    294e:	be ff ff 00 00       	mov    esi,0xffff
    2953:	bf 01 00 00 00       	mov    edi,0x1
    2958:	e8 9d ff ff ff       	call   28fa <_Z41__static_initialization_and_destruction_0ii>
    295d:	5d                   	pop    rbp
    295e:	c3                   	ret    
    295f:	90                   	nop

0000000000002960 <_ZN5PaperC1Ev>:
    2960:	55                   	push   rbp
    2961:	48 89 e5             	mov    rbp,rsp
    2964:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2968:	90                   	nop
    2969:	5d                   	pop    rbp
    296a:	c3                   	ret    
    296b:	90                   	nop

000000000000296c <_ZN5PaperC1EPcS0_S0_>:
    296c:	55                   	push   rbp
    296d:	48 89 e5             	mov    rbp,rsp
    2970:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2974:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    2978:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    297c:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
    2980:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2984:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    2988:	48 89 10             	mov    QWORD PTR [rax],rdx
    298b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    298f:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    2993:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
    2997:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    299b:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    299f:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
    29a3:	90                   	nop
    29a4:	5d                   	pop    rbp
    29a5:	c3                   	ret    

00000000000029a6 <_ZN8Audience7putcharEc>:
    29a6:	55                   	push   rbp
    29a7:	48 89 e5             	mov    rbp,rsp
    29aa:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    29ae:	89 f0                	mov    eax,esi
    29b0:	88 45 f4             	mov    BYTE PTR [rbp-0xc],al
    29b3:	90                   	nop
    29b4:	5d                   	pop    rbp
    29b5:	c3                   	ret    

00000000000029b6 <_ZN8Audience4putsEPKc>:
    29b6:	55                   	push   rbp
    29b7:	48 89 e5             	mov    rbp,rsp
    29ba:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    29be:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    29c2:	90                   	nop
    29c3:	5d                   	pop    rbp
    29c4:	c3                   	ret    
    29c5:	90                   	nop

00000000000029c6 <_ZN8Audience6chooseEv>:
    29c6:	55                   	push   rbp
    29c7:	48 89 e5             	mov    rbp,rsp
    29ca:	48 83 ec 10          	sub    rsp,0x10
    29ce:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    29d2:	e8 29 e6 ff ff       	call   1000 <rand@plt>
    29d7:	89 c1                	mov    ecx,eax
    29d9:	ba 56 55 55 55       	mov    edx,0x55555556
    29de:	89 c8                	mov    eax,ecx
    29e0:	f7 ea                	imul   edx
    29e2:	89 c8                	mov    eax,ecx
    29e4:	c1 f8 1f             	sar    eax,0x1f
    29e7:	29 c2                	sub    edx,eax
    29e9:	89 d0                	mov    eax,edx
    29eb:	89 c2                	mov    edx,eax
    29ed:	01 d2                	add    edx,edx
    29ef:	01 c2                	add    edx,eax
    29f1:	89 c8                	mov    eax,ecx
    29f3:	29 d0                	sub    eax,edx
    29f5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    29f9:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    29fc:	90                   	nop
    29fd:	c9                   	leave  
    29fe:	c3                   	ret    
    29ff:	90                   	nop

0000000000002a00 <_ZN8Audience3askEv>:
    2a00:	55                   	push   rbp
    2a01:	48 89 e5             	mov    rbp,rsp
    2a04:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2a08:	b8 00 00 00 00       	mov    eax,0x0
    2a0d:	5d                   	pop    rbp
    2a0e:	c3                   	ret    
    2a0f:	90                   	nop

0000000000002a10 <_ZN8Audience5readnEPci>:
    2a10:	55                   	push   rbp
    2a11:	48 89 e5             	mov    rbp,rsp
    2a14:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2a18:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    2a1c:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
    2a1f:	90                   	nop
    2a20:	5d                   	pop    rbp
    2a21:	c3                   	ret    

0000000000002a22 <_ZN12NiceAudience6chooseEv>:
    2a22:	55                   	push   rbp
    2a23:	48 89 e5             	mov    rbp,rsp
    2a26:	48 83 ec 40          	sub    rsp,0x40
    2a2a:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
    2a2e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2a35:	00 00 
    2a37:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2a3b:	31 c0                	xor    eax,eax
    2a3d:	48 c7 45 ec 00 00 00 	mov    QWORD PTR [rbp-0x14],0x0
    2a44:	00 
    2a45:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    2a4c:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [rbp-0x28],0x0
    2a53:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
    2a5a:	83 7d dc 02          	cmp    DWORD PTR [rbp-0x24],0x2
    2a5e:	0f 8f a7 00 00 00    	jg     2b0b <_ZN12NiceAudience6chooseEv+0xe9>
    2a64:	8b 15 f2 16 20 00    	mov    edx,DWORD PTR [rip+0x2016f2]        # 20415c <cur_time>
    2a6a:	89 d0                	mov    eax,edx
    2a6c:	01 c0                	add    eax,eax
    2a6e:	01 c2                	add    edx,eax
    2a70:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    2a73:	01 d0                	add    eax,edx
    2a75:	83 c0 01             	add    eax,0x1
    2a78:	48 63 d0             	movsxd rdx,eax
    2a7b:	48 8d 05 ce 16 20 00 	lea    rax,[rip+0x2016ce]        # 204150 <matching>
    2a82:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
    2a86:	0f be c0             	movsx  eax,al
    2a89:	48 63 d0             	movsxd rdx,eax
    2a8c:	48 89 d0             	mov    rax,rdx
    2a8f:	48 01 c0             	add    rax,rax
    2a92:	48 01 d0             	add    rax,rdx
    2a95:	48 c1 e0 03          	shl    rax,0x3
    2a99:	48 89 c2             	mov    rdx,rax
    2a9c:	48 8d 05 bd 15 20 00 	lea    rax,[rip+0x2015bd]        # 204060 <papers>
    2aa3:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    2aa7:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    2aab:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    2aaf:	48 8d 35 30 06 00 00 	lea    rsi,[rip+0x630]        # 30e6 <_ZL6BUFLEN+0x156>
    2ab6:	48 89 c7             	mov    rdi,rax
    2ab9:	e8 52 e6 ff ff       	call   1110 <strcmp@plt>
    2abe:	85 c0                	test   eax,eax
    2ac0:	74 2e                	je     2af0 <_ZN12NiceAudience6chooseEv+0xce>
    2ac2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    2ac6:	48 8d 35 20 06 00 00 	lea    rsi,[rip+0x620]        # 30ed <_ZL6BUFLEN+0x15d>
    2acd:	48 89 c7             	mov    rdi,rax
    2ad0:	e8 3b e6 ff ff       	call   1110 <strcmp@plt>
    2ad5:	85 c0                	test   eax,eax
    2ad7:	74 17                	je     2af0 <_ZN12NiceAudience6chooseEv+0xce>
    2ad9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    2add:	48 8d 35 12 06 00 00 	lea    rsi,[rip+0x612]        # 30f6 <_ZL6BUFLEN+0x166>
    2ae4:	48 89 c7             	mov    rdi,rax
    2ae7:	e8 24 e6 ff ff       	call   1110 <strcmp@plt>
    2aec:	85 c0                	test   eax,eax
    2aee:	75 12                	jne    2b02 <_ZN12NiceAudience6chooseEv+0xe0>
    2af0:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
    2af3:	8d 50 01             	lea    edx,[rax+0x1]
    2af6:	89 55 d8             	mov    DWORD PTR [rbp-0x28],edx
    2af9:	48 98                	cdqe   
    2afb:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
    2afe:	89 54 85 ec          	mov    DWORD PTR [rbp+rax*4-0x14],edx
    2b02:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
    2b06:	e9 4f ff ff ff       	jmp    2a5a <_ZN12NiceAudience6chooseEv+0x38>
    2b0b:	83 7d d8 00          	cmp    DWORD PTR [rbp-0x28],0x0
    2b0f:	75 2c                	jne    2b3d <_ZN12NiceAudience6chooseEv+0x11b>
    2b11:	e8 ea e4 ff ff       	call   1000 <rand@plt>
    2b16:	89 c1                	mov    ecx,eax
    2b18:	ba 56 55 55 55       	mov    edx,0x55555556
    2b1d:	89 c8                	mov    eax,ecx
    2b1f:	f7 ea                	imul   edx
    2b21:	89 c8                	mov    eax,ecx
    2b23:	c1 f8 1f             	sar    eax,0x1f
    2b26:	29 c2                	sub    edx,eax
    2b28:	89 d0                	mov    eax,edx
    2b2a:	89 c2                	mov    edx,eax
    2b2c:	01 d2                	add    edx,edx
    2b2e:	01 c2                	add    edx,eax
    2b30:	89 c8                	mov    eax,ecx
    2b32:	29 d0                	sub    eax,edx
    2b34:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
    2b38:	89 42 08             	mov    DWORD PTR [rdx+0x8],eax
    2b3b:	eb 32                	jmp    2b6f <_ZN12NiceAudience6chooseEv+0x14d>
    2b3d:	83 7d d8 01          	cmp    DWORD PTR [rbp-0x28],0x1
    2b41:	7e 22                	jle    2b65 <_ZN12NiceAudience6chooseEv+0x143>
    2b43:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b47:	c6 40 0c 01          	mov    BYTE PTR [rax+0xc],0x1
    2b4b:	e8 b0 e4 ff ff       	call   1000 <rand@plt>
    2b50:	99                   	cdq    
    2b51:	f7 7d d8             	idiv   DWORD PTR [rbp-0x28]
    2b54:	89 d0                	mov    eax,edx
    2b56:	48 98                	cdqe   
    2b58:	8b 54 85 ec          	mov    edx,DWORD PTR [rbp+rax*4-0x14]
    2b5c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b60:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
    2b63:	eb 0a                	jmp    2b6f <_ZN12NiceAudience6chooseEv+0x14d>
    2b65:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    2b68:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2b6c:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
    2b6f:	90                   	nop
    2b70:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2b74:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
    2b7b:	00 00 
    2b7d:	74 05                	je     2b84 <_ZN12NiceAudience6chooseEv+0x162>
    2b7f:	e8 2c e5 ff ff       	call   10b0 <__stack_chk_fail@plt>
    2b84:	c9                   	leave  
    2b85:	c3                   	ret    

0000000000002b86 <_ZN12NiceAudience3askEv>:
    2b86:	55                   	push   rbp
    2b87:	48 89 e5             	mov    rbp,rsp
    2b8a:	48 83 ec 10          	sub    rsp,0x10
    2b8e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2b92:	e8 69 e4 ff ff       	call   1000 <rand@plt>
    2b97:	48 63 c8             	movsxd rcx,eax
    2b9a:	48 ba ab aa aa aa aa 	movabs rdx,0xaaaaaaaaaaaaaaab
    2ba1:	aa aa aa 
    2ba4:	48 89 c8             	mov    rax,rcx
    2ba7:	48 f7 e2             	mul    rdx
    2baa:	48 d1 ea             	shr    rdx,1
    2bad:	48 89 d0             	mov    rax,rdx
    2bb0:	48 01 c0             	add    rax,rax
    2bb3:	48 01 d0             	add    rax,rdx
    2bb6:	48 29 c1             	sub    rcx,rax
    2bb9:	48 89 ca             	mov    rdx,rcx
    2bbc:	48 c1 e2 03          	shl    rdx,0x3
    2bc0:	48 8d 05 49 14 20 00 	lea    rax,[rip+0x201449]        # 204010 <_ZZN12NiceAudience3askEvE3ans>
    2bc7:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
    2bcb:	c9                   	leave  
    2bcc:	c3                   	ret    
    2bcd:	90                   	nop

0000000000002bce <_ZN3You7putcharEc>:
    2bce:	55                   	push   rbp
    2bcf:	48 89 e5             	mov    rbp,rsp
    2bd2:	48 83 ec 10          	sub    rsp,0x10
    2bd6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2bda:	89 f0                	mov    eax,esi
    2bdc:	88 45 f4             	mov    BYTE PTR [rbp-0xc],al
    2bdf:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
    2be3:	89 c7                	mov    edi,eax
    2be5:	e8 16 e5 ff ff       	call   1100 <putchar@plt>
    2bea:	90                   	nop
    2beb:	c9                   	leave  
    2bec:	c3                   	ret    
    2bed:	90                   	nop

0000000000002bee <_ZN3You4putsEPKc>:
    2bee:	55                   	push   rbp
    2bef:	48 89 e5             	mov    rbp,rsp
    2bf2:	48 83 ec 10          	sub    rsp,0x10
    2bf6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2bfa:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
    2bfe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    2c02:	48 89 c7             	mov    rdi,rax
    2c05:	e8 56 e5 ff ff       	call   1160 <puts@plt>
    2c0a:	90                   	nop
    2c0b:	c9                   	leave  
    2c0c:	c3                   	ret    
    2c0d:	90                   	nop

0000000000002c0e <_ZN3You6chooseEv>:
    2c0e:	55                   	push   rbp
    2c0f:	48 89 e5             	mov    rbp,rsp
    2c12:	48 83 ec 20          	sub    rsp,0x20
    2c16:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2c1a:	8b 05 3c 15 20 00    	mov    eax,DWORD PTR [rip+0x20153c]        # 20415c <cur_time>
    2c20:	85 c0                	test   eax,eax
    2c22:	74 1d                	je     2c41 <_ZN3You6chooseEv+0x33>
    2c24:	8b 05 32 15 20 00    	mov    eax,DWORD PTR [rip+0x201532]        # 20415c <cur_time>
    2c2a:	83 f8 01             	cmp    eax,0x1
    2c2d:	75 09                	jne    2c38 <_ZN3You6chooseEv+0x2a>
    2c2f:	48 8d 05 40 05 00 00 	lea    rax,[rip+0x540]        # 3176 <_ZL6BUFLEN+0x1e6>
    2c36:	eb 10                	jmp    2c48 <_ZN3You6chooseEv+0x3a>
    2c38:	48 8d 05 3e 05 00 00 	lea    rax,[rip+0x53e]        # 317d <_ZL6BUFLEN+0x1ed>
    2c3f:	eb 07                	jmp    2c48 <_ZN3You6chooseEv+0x3a>
    2c41:	48 8d 05 3a 05 00 00 	lea    rax,[rip+0x53a]        # 3182 <_ZL6BUFLEN+0x1f2>
    2c48:	48 89 c6             	mov    rsi,rax
    2c4b:	48 8d 3d 36 05 00 00 	lea    rdi,[rip+0x536]        # 3188 <_ZL6BUFLEN+0x1f8>
    2c52:	b8 00 00 00 00       	mov    eax,0x0
    2c57:	e8 84 e3 ff ff       	call   fe0 <printf@plt>
    2c5c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2c60:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2c63:	48 83 c0 08          	add    rax,0x8
    2c67:	48 8b 00             	mov    rax,QWORD PTR [rax]
    2c6a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    2c6e:	48 8d 35 29 05 00 00 	lea    rsi,[rip+0x529]        # 319e <_ZL6BUFLEN+0x20e>
    2c75:	48 89 d7             	mov    rdi,rdx
    2c78:	ff d0                	call   rax
    2c7a:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
    2c81:	83 7d f4 02          	cmp    DWORD PTR [rbp-0xc],0x2
    2c85:	7f 6e                	jg     2cf5 <_ZN3You6chooseEv+0xe7>
    2c87:	8b 15 cf 14 20 00    	mov    edx,DWORD PTR [rip+0x2014cf]        # 20415c <cur_time>
    2c8d:	89 d0                	mov    eax,edx
    2c8f:	01 c0                	add    eax,eax
    2c91:	01 c2                	add    edx,eax
    2c93:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    2c96:	01 d0                	add    eax,edx
    2c98:	83 c0 01             	add    eax,0x1
    2c9b:	48 63 d0             	movsxd rdx,eax
    2c9e:	48 8d 05 ab 14 20 00 	lea    rax,[rip+0x2014ab]        # 204150 <matching>
    2ca5:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
    2ca9:	0f be c0             	movsx  eax,al
    2cac:	48 63 d0             	movsxd rdx,eax
    2caf:	48 89 d0             	mov    rax,rdx
    2cb2:	48 01 c0             	add    rax,rax
    2cb5:	48 01 d0             	add    rax,rdx
    2cb8:	48 c1 e0 03          	shl    rax,0x3
    2cbc:	48 8d 15 9d 13 20 00 	lea    rdx,[rip+0x20139d]        # 204060 <papers>
    2cc3:	48 01 d0             	add    rax,rdx
    2cc6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2cca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2cce:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
    2cd2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2cd6:	48 8b 10             	mov    rdx,QWORD PTR [rax]
    2cd9:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    2cdc:	89 c6                	mov    esi,eax
    2cde:	48 8d 3d d6 04 00 00 	lea    rdi,[rip+0x4d6]        # 31bb <_ZL6BUFLEN+0x22b>
    2ce5:	b8 00 00 00 00       	mov    eax,0x0
    2cea:	e8 f1 e2 ff ff       	call   fe0 <printf@plt>
    2cef:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
    2cf3:	eb 8c                	jmp    2c81 <_ZN3You6chooseEv+0x73>
    2cf5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
    2cf9:	48 83 c0 08          	add    rax,0x8
    2cfd:	48 89 c6             	mov    rsi,rax
    2d00:	48 8d 3d c0 04 00 00 	lea    rdi,[rip+0x4c0]        # 31c7 <_ZL6BUFLEN+0x237>
    2d07:	b8 00 00 00 00       	mov    eax,0x0
    2d0c:	e8 cf e3 ff ff       	call   10e0 <scanf@plt>
    2d11:	e8 da e3 ff ff       	call   10f0 <getchar@plt>
    2d16:	90                   	nop
    2d17:	c9                   	leave  
    2d18:	c3                   	ret    
    2d19:	90                   	nop

0000000000002d1a <_ZN3You3askEv>:
    2d1a:	55                   	push   rbp
    2d1b:	48 89 e5             	mov    rbp,rsp
    2d1e:	48 83 ec 10          	sub    rsp,0x10
    2d22:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2d26:	ba 65 00 00 00       	mov    edx,0x65
    2d2b:	be 00 00 00 00       	mov    esi,0x0
    2d30:	48 8d 3d 29 14 20 00 	lea    rdi,[rip+0x201429]        # 204160 <buf>
    2d37:	e8 14 e3 ff ff       	call   1050 <memset@plt>
    2d3c:	ba 64 00 00 00       	mov    edx,0x64
    2d41:	48 8d 35 18 14 20 00 	lea    rsi,[rip+0x201418]        # 204160 <buf>
    2d48:	bf 00 00 00 00       	mov    edi,0x0
    2d4d:	e8 ee e3 ff ff       	call   1140 <read@plt>
    2d52:	48 8d 05 07 14 20 00 	lea    rax,[rip+0x201407]        # 204160 <buf>
    2d59:	c9                   	leave  
    2d5a:	c3                   	ret    
    2d5b:	90                   	nop

0000000000002d5c <_ZN3You5readnEPci>:
    2d5c:	55                   	push   rbp
    2d5d:	48 89 e5             	mov    rbp,rsp
    2d60:	48 83 ec 30          	sub    rsp,0x30
    2d64:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
    2d68:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    2d6c:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
    2d6f:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    2d72:	83 e8 01             	sub    eax,0x1
    2d75:	48 63 d0             	movsxd rdx,eax
    2d78:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    2d7c:	48 89 c6             	mov    rsi,rax
    2d7f:	bf 00 00 00 00       	mov    edi,0x0
    2d84:	e8 b7 e3 ff ff       	call   1140 <read@plt>
    2d89:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
    2d8c:	83 7d f4 00          	cmp    DWORD PTR [rbp-0xc],0x0
    2d90:	7f 0a                	jg     2d9c <_ZN3You5readnEPci+0x40>
    2d92:	bf 02 00 00 00       	mov    edi,0x2
    2d97:	e8 e4 e3 ff ff       	call   1180 <_exit@plt>
    2d9c:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
    2d9f:	48 63 d0             	movsxd rdx,eax
    2da2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    2da6:	48 01 d0             	add    rax,rdx
    2da9:	c6 00 00             	mov    BYTE PTR [rax],0x0
    2dac:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    2db0:	be 0a 00 00 00       	mov    esi,0xa
    2db5:	48 89 c7             	mov    rdi,rax
    2db8:	e8 53 e2 ff ff       	call   1010 <strchr@plt>
    2dbd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    2dc1:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
    2dc6:	74 07                	je     2dcf <_ZN3You5readnEPci+0x73>
    2dc8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2dcc:	c6 00 00             	mov    BYTE PTR [rax],0x0
    2dcf:	90                   	nop
    2dd0:	c9                   	leave  
    2dd1:	c3                   	ret    

0000000000002dd2 <_ZN8AudienceC1Ev>:
    2dd2:	55                   	push   rbp
    2dd3:	48 89 e5             	mov    rbp,rsp
    2dd6:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2dda:	48 8d 15 77 0e 20 00 	lea    rdx,[rip+0x200e77]        # 203c58 <_ZTV8Audience+0x10>
    2de1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2de5:	48 89 10             	mov    QWORD PTR [rax],rdx
    2de8:	90                   	nop
    2de9:	5d                   	pop    rbp
    2dea:	c3                   	ret    
    2deb:	90                   	nop

0000000000002dec <_ZN12NiceAudienceC1Ev>:
    2dec:	55                   	push   rbp
    2ded:	48 89 e5             	mov    rbp,rsp
    2df0:	48 83 ec 10          	sub    rsp,0x10
    2df4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2df8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2dfc:	48 89 c7             	mov    rdi,rax
    2dff:	e8 ce ff ff ff       	call   2dd2 <_ZN8AudienceC1Ev>
    2e04:	48 8d 15 15 0e 20 00 	lea    rdx,[rip+0x200e15]        # 203c20 <_ZTV12NiceAudience+0x10>
    2e0b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e0f:	48 89 10             	mov    QWORD PTR [rax],rdx
    2e12:	90                   	nop
    2e13:	c9                   	leave  
    2e14:	c3                   	ret    
    2e15:	90                   	nop

0000000000002e16 <_ZN3YouC1Ev>:
    2e16:	55                   	push   rbp
    2e17:	48 89 e5             	mov    rbp,rsp
    2e1a:	48 83 ec 10          	sub    rsp,0x10
    2e1e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
    2e22:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e26:	48 89 c7             	mov    rdi,rax
    2e29:	e8 be ff ff ff       	call   2dec <_ZN12NiceAudienceC1Ev>
    2e2e:	48 8d 15 b3 0d 20 00 	lea    rdx,[rip+0x200db3]        # 203be8 <_ZTV3You+0x10>
    2e35:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    2e39:	48 89 10             	mov    QWORD PTR [rax],rdx
    2e3c:	90                   	nop
    2e3d:	c9                   	leave  
    2e3e:	c3                   	ret    
    2e3f:	90                   	nop

0000000000002e40 <__libc_csu_init>:
    2e40:	41 57                	push   r15
    2e42:	41 56                	push   r14
    2e44:	49 89 d7             	mov    r15,rdx
    2e47:	41 55                	push   r13
    2e49:	41 54                	push   r12
    2e4b:	4c 8d 25 6e 0d 20 00 	lea    r12,[rip+0x200d6e]        # 203bc0 <__frame_dummy_init_array_entry>
    2e52:	55                   	push   rbp
    2e53:	48 8d 2d 76 0d 20 00 	lea    rbp,[rip+0x200d76]        # 203bd0 <__init_array_end>
    2e5a:	53                   	push   rbx
    2e5b:	41 89 fd             	mov    r13d,edi
    2e5e:	49 89 f6             	mov    r14,rsi
    2e61:	4c 29 e5             	sub    rbp,r12
    2e64:	48 83 ec 08          	sub    rsp,0x8
    2e68:	48 c1 fd 03          	sar    rbp,0x3
    2e6c:	e8 47 e1 ff ff       	call   fb8 <_init>
    2e71:	48 85 ed             	test   rbp,rbp
    2e74:	74 20                	je     2e96 <__libc_csu_init+0x56>
    2e76:	31 db                	xor    ebx,ebx
    2e78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    2e7f:	00 
    2e80:	4c 89 fa             	mov    rdx,r15
    2e83:	4c 89 f6             	mov    rsi,r14
    2e86:	44 89 ef             	mov    edi,r13d
    2e89:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
    2e8d:	48 83 c3 01          	add    rbx,0x1
    2e91:	48 39 dd             	cmp    rbp,rbx
    2e94:	75 ea                	jne    2e80 <__libc_csu_init+0x40>
    2e96:	48 83 c4 08          	add    rsp,0x8
    2e9a:	5b                   	pop    rbx
    2e9b:	5d                   	pop    rbp
    2e9c:	41 5c                	pop    r12
    2e9e:	41 5d                	pop    r13
    2ea0:	41 5e                	pop    r14
    2ea2:	41 5f                	pop    r15
    2ea4:	c3                   	ret    
    2ea5:	90                   	nop
    2ea6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    2ead:	00 00 00 

0000000000002eb0 <__libc_csu_fini>:
    2eb0:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000002eb4 <_fini>:
    2eb4:	48 83 ec 08          	sub    rsp,0x8
    2eb8:	48 83 c4 08          	add    rsp,0x8
    2ebc:	c3                   	ret    

Disassembly of section .rodata:

0000000000002ec0 <_IO_stdin_used>:
    2ec0:	01 00                	add    DWORD PTR [rax],eax
    2ec2:	02 00                	add    al,BYTE PTR [rax]
	...

0000000000002ed0 <_ZStL19piecewise_construct>:
    2ed0:	00 45 72             	add    BYTE PTR [rbp+0x72],al
    2ed3:	72 6f                	jb     2f44 <_ZL2PN+0x5c>
    2ed5:	72 2c                	jb     2f03 <_ZL2PN+0x1b>
    2ed7:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    2eda:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2edb:	74 61                	je     2f3e <_ZL2PN+0x56>
    2edd:	63 74 20 61          	movsxd esi,DWORD PTR [rax+riz*1+0x61]
    2ee1:	64 6d                	fs ins DWORD PTR es:[rdi],dx
    2ee3:	69 6e 00 00 00 09 00 	imul   ebp,DWORD PTR [rsi+0x0],0x90000

0000000000002ee8 <_ZL2PN>:
    2ee8:	09 00                	or     DWORD PTR [rax],eax
    2eea:	00 00                	add    BYTE PTR [rax],al
    2eec:	72 62                	jb     2f50 <_ZL2PN+0x68>
    2eee:	00 70 61             	add    BYTE PTR [rax+0x61],dh
    2ef1:	70 65                	jo     2f58 <_ZL2PN+0x70>
    2ef3:	72 73                	jb     2f68 <_ZL2PN+0x80>
    2ef5:	2e 74 78             	cs je  2f70 <_ZL2PN+0x88>
    2ef8:	74 00                	je     2efa <_ZL2PN+0x12>
    2efa:	54                   	push   rsp
    2efb:	42                   	rex.X
    2efc:	44 00 00             	add    BYTE PTR [rax],r8b
    2eff:	00 48 6f             	add    BYTE PTR [rax+0x6f],cl
    2f02:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f03:	65 79 20             	gs jns 2f26 <_ZL2PN+0x3e>
    2f06:	49 73 6c             	rex.WB jae 2f75 <_ZL2PN+0x8d>
    2f09:	61                   	(bad)  
    2f0a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f0b:	64 20 54 61 69       	and    BYTE PTR fs:[rcx+riz*2+0x69],dl
    2f10:	77 61                	ja     2f73 <_ZL2PN+0x8b>
    2f12:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f13:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
    2f16:	4e                   	rex.WRX
    2f17:	66 65 72 65          	data16 gs jb 2f80 <_ZL2PN+0x98>
    2f1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f1c:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    2f1f:	69 73 20 63 6f 6d 69 	imul   esi,DWORD PTR [rbx+0x20],0x696d6f63
    2f26:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f27:	67 21 0a             	and    DWORD PTR [edx],ecx
    2f2a:	0a 57 65             	or     dl,BYTE PTR [rdi+0x65]
    2f2d:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    2f30:	76 65                	jbe    2f97 <_ZL6BUFLEN+0x7>
    2f32:	20 61 63             	and    BYTE PTR [rcx+0x63],ah
    2f35:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    2f38:	74 65                	je     2f9f <_ZL6BUFLEN+0xf>
    2f3a:	64 20 6d 61          	and    BYTE PTR fs:[rbp+0x61],ch
    2f3e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f3f:	79 20                	jns    2f61 <_ZL2PN+0x79>
    2f41:	70 61                	jo     2fa4 <_ZL6BUFLEN+0x14>
    2f43:	70 65                	jo     2faa <_ZL6BUFLEN+0x1a>
    2f45:	72 73                	jb     2fba <_ZL6BUFLEN+0x2a>
    2f47:	2c 20                	sub    al,0x20
    2f49:	70 6c                	jo     2fb7 <_ZL6BUFLEN+0x27>
    2f4b:	65 61                	gs (bad) 
    2f4d:	73 65                	jae    2fb4 <_ZL6BUFLEN+0x24>
    2f4f:	20 68 65             	and    BYTE PTR [rax+0x65],ch
    2f52:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f53:	70 20                	jo     2f75 <_ZL2PN+0x8d>
    2f55:	75 73                	jne    2fca <_ZL6BUFLEN+0x3a>
    2f57:	20 73 63             	and    BYTE PTR [rbx+0x63],dh
    2f5a:	68 65 64 75 6c       	push   0x6c756465
    2f5f:	65 20 74 68 65       	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
    2f64:	20 61 67             	and    BYTE PTR [rcx+0x67],ah
    2f67:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2f69:	64 61                	fs (bad) 
    2f6b:	21 0a                	and    DWORD PTR [rdx],ecx
    2f6d:	00 00                	add    BYTE PTR [rax],al
    2f6f:	00 25 64 3a 20 20    	add    BYTE PTR [rip+0x20203a64],ah        # 202069d9 <_end+0x200008b9>
    2f75:	41 75 74             	rex.B jne 2fec <_ZL6BUFLEN+0x5c>
    2f78:	68 6f 72 3a 20       	push   0x203a726f
    2f7d:	25 73 0a 20 20       	and    eax,0x20200a73
    2f82:	20 20                	and    BYTE PTR [rax],ah
    2f84:	54                   	push   rsp
    2f85:	69 74 6c 65 3a 20 25 	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x7325203a
    2f8c:	73 
    2f8d:	0a 0a                	or     cl,BYTE PTR [rdx]
	...

0000000000002f90 <_ZL6BUFLEN>:
    2f90:	64 00 00             	add    BYTE PTR fs:[rax],al
    2f93:	00 00                	add    BYTE PTR [rax],al
    2f95:	52                   	push   rdx
    2f96:	30 00                	xor    BYTE PTR [rax],al
    2f98:	0a 2d 2d 2d 2d 2d    	or     ch,BYTE PTR [rip+0x2d2d2d2d]        # 2d2d5ccb <_end+0x2d0cfbab>
    2f9e:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fa3:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fa8:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fad:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fb2:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fb7:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fbc:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fc1:	0a 7c 20 25          	or     bh,BYTE PTR [rax+riz*1+0x25]
    2fc5:	2a 73 25             	sub    dh,BYTE PTR [rbx+0x25]
    2fc8:	2a 73 20             	sub    dh,BYTE PTR [rbx+0x20]
    2fcb:	7c 20                	jl     2fed <_ZL6BUFLEN+0x5d>
    2fcd:	25 2a 73 25 2a       	and    eax,0x2a25732a
    2fd2:	73 20                	jae    2ff4 <_ZL6BUFLEN+0x64>
    2fd4:	7c 20                	jl     2ff6 <_ZL6BUFLEN+0x66>
    2fd6:	25 2a 73 25 2a       	and    eax,0x2a25732a
    2fdb:	73 20                	jae    2ffd <_ZL6BUFLEN+0x6d>
    2fdd:	7c 0a                	jl     2fe9 <_ZL6BUFLEN+0x59>
    2fdf:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fe4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fe9:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2fee:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2ff3:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2ff8:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    2ffd:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3002:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3007:	0a 7c 20 25          	or     bh,BYTE PTR [rax+riz*1+0x25]
    300b:	2a 73 25             	sub    dh,BYTE PTR [rbx+0x25]
    300e:	2a 73 20             	sub    dh,BYTE PTR [rbx+0x20]
    3011:	7c 20                	jl     3033 <_ZL6BUFLEN+0xa3>
    3013:	25 2a 73 25 2a       	and    eax,0x2a25732a
    3018:	73 20                	jae    303a <_ZL6BUFLEN+0xaa>
    301a:	7c 20                	jl     303c <_ZL6BUFLEN+0xac>
    301c:	25 2a 73 25 2a       	and    eax,0x2a25732a
    3021:	73 20                	jae    3043 <_ZL6BUFLEN+0xb3>
    3023:	7c 0a                	jl     302f <_ZL6BUFLEN+0x9f>
    3025:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    302a:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    302f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3034:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3039:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    303e:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3043:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3048:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    304d:	0a 7c 20 25          	or     bh,BYTE PTR [rax+riz*1+0x25]
    3051:	2a 73 25             	sub    dh,BYTE PTR [rbx+0x25]
    3054:	2a 73 20             	sub    dh,BYTE PTR [rbx+0x20]
    3057:	7c 20                	jl     3079 <_ZL6BUFLEN+0xe9>
    3059:	25 2a 73 25 2a       	and    eax,0x2a25732a
    305e:	73 20                	jae    3080 <_ZL6BUFLEN+0xf0>
    3060:	7c 20                	jl     3082 <_ZL6BUFLEN+0xf2>
    3062:	25 2a 73 25 2a       	and    eax,0x2a25732a
    3067:	73 20                	jae    3089 <_ZL6BUFLEN+0xf9>
    3069:	7c 0a                	jl     3075 <_ZL6BUFLEN+0xe5>
    306b:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3070:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3075:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    307a:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    307f:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3084:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3089:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    308e:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    3093:	0a 7c 20 25          	or     bh,BYTE PTR [rax+riz*1+0x25]
    3097:	2a 73 25             	sub    dh,BYTE PTR [rbx+0x25]
    309a:	2a 73 20             	sub    dh,BYTE PTR [rbx+0x20]
    309d:	7c 20                	jl     30bf <_ZL6BUFLEN+0x12f>
    309f:	25 2a 73 25 2a       	and    eax,0x2a25732a
    30a4:	73 20                	jae    30c6 <_ZL6BUFLEN+0x136>
    30a6:	7c 20                	jl     30c8 <_ZL6BUFLEN+0x138>
    30a8:	25 2a 73 25 2a       	and    eax,0x2a25732a
    30ad:	73 20                	jae    30cf <_ZL6BUFLEN+0x13f>
    30af:	7c 0a                	jl     30bb <_ZL6BUFLEN+0x12b>
    30b1:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    30b6:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    30bb:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    30c0:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    30c5:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    30ca:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    30cf:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    30d4:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    30d9:	0a 00                	or     al,BYTE PTR [rax]
    30db:	52                   	push   rdx
    30dc:	32 00                	xor    al,BYTE PTR [rax]
    30de:	52                   	push   rdx
    30df:	31 00                	xor    DWORD PTR [rax],eax
    30e1:	25 64 25 64 00       	and    eax,0x642564
    30e6:	4f 72 61             	rex.WRXB jb 314a <_ZL6BUFLEN+0x1ba>
    30e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30ea:	67 65 00 41 6e       	add    BYTE PTR gs:[ecx+0x6e],al
    30ef:	67 65 6c             	gs ins BYTE PTR es:[edi],dx
    30f2:	62                   	(bad)  
    30f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30f4:	79 00                	jns    30f6 <_ZL6BUFLEN+0x166>
    30f6:	64 61                	fs (bad) 
    30f8:	76 69                	jbe    3163 <_ZL6BUFLEN+0x1d3>
    30fa:	64 39 34 32          	cmp    DWORD PTR fs:[rdx+rsi*1],esi
    30fe:	6a 00                	push   0x0
    3100:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    3102:	75 6c                	jne    3170 <_ZL6BUFLEN+0x1e0>
    3104:	64 20 79 6f          	and    BYTE PTR fs:[rcx+0x6f],bh
    3108:	75 20                	jne    312a <_ZL6BUFLEN+0x19a>
    310a:	65 78 70             	gs js  317d <_ZL6BUFLEN+0x1ed>
    310d:	6c                   	ins    BYTE PTR es:[rdi],dx
    310e:	61                   	(bad)  
    310f:	69 6e 20 77 68 61 74 	imul   ebp,DWORD PTR [rsi+0x20],0x74616877
    3116:	27                   	(bad)  
    3117:	73 20                	jae    3139 <_ZL6BUFLEN+0x1a9>
    3119:	68 65 61 70 20       	push   0x20706165
    311e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    311f:	76 65                	jbe    3186 <_ZL6BUFLEN+0x1f6>
    3121:	72 66                	jb     3189 <_ZL6BUFLEN+0x1f9>
    3123:	6c                   	ins    BYTE PTR es:[rdi],dx
    3124:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3125:	77 3f                	ja     3166 <_ZL6BUFLEN+0x1d6>
    3127:	0a 00                	or     al,BYTE PTR [rax]
    3129:	00 00                	add    BYTE PTR [rax],al
    312b:	00 00                	add    BYTE PTR [rax],al
    312d:	00 00                	add    BYTE PTR [rax],al
    312f:	00 53 6f             	add    BYTE PTR [rbx+0x6f],dl
    3132:	2e 2e 20 68 6f       	cs and BYTE PTR cs:[rax+0x6f],ch
    3137:	77 20                	ja     3159 <_ZL6BUFLEN+0x1c9>
    3139:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    313c:	6c                   	ins    BYTE PTR es:[rdi],dx
    313d:	64 20 49 20          	and    BYTE PTR fs:[rcx+0x20],cl
    3141:	62                   	(bad)  
    3142:	65 63 6f 6d          	movsxd ebp,DWORD PTR gs:[rdi+0x6d]
    3146:	65 20 74 68 65       	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
    314b:	20 62 65             	and    BYTE PTR [rdx+0x65],ah
    314e:	73 74                	jae    31c4 <_ZL6BUFLEN+0x234>
    3150:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    3153:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3156:	72 3f                	jb     3197 <_ZL6BUFLEN+0x207>
    3158:	0a 00                	or     al,BYTE PTR [rax]
    315a:	44 6f                	rex.R outs dx,DWORD PTR ds:[rsi]
    315c:	20 79 6f             	and    BYTE PTR [rcx+0x6f],bh
    315f:	75 20                	jne    3181 <_ZL6BUFLEN+0x1f1>
    3161:	68 61 76 65 20       	push   0x20657661
    3166:	61                   	(bad)  
    3167:	20 67 69             	and    BYTE PTR [rdi+0x69],ah
    316a:	72 6c                	jb     31d8 <_ZL6BUFLEN+0x248>
    316c:	20 66 72             	and    BYTE PTR [rsi+0x72],ah
    316f:	69 65 6e 64 3f 0a 00 	imul   esp,DWORD PTR [rbp+0x6e],0xa3f64
    3176:	73 65                	jae    31dd <_ZL6BUFLEN+0x24d>
    3178:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    317b:	64 00 6c 61 73       	add    BYTE PTR fs:[rcx+riz*2+0x73],ch
    3180:	74 00                	je     3182 <_ZL6BUFLEN+0x1f2>
    3182:	66 69 72 73 74 00    	imul   si,WORD PTR [rdx+0x73],0x74
    3188:	54                   	push   rsp
    3189:	68 69 73 20 69       	push   0x69207369
    318e:	73 20                	jae    31b0 <_ZL6BUFLEN+0x220>
    3190:	74 68                	je     31fa <_ZL6BUFLEN+0x26a>
    3192:	65 20 25 73 20 74 61 	and    BYTE PTR gs:[rip+0x61742073],ah        # 6174520c <_end+0x6153f0ec>
    3199:	6c                   	ins    BYTE PTR es:[rdi],dx
    319a:	6b 21 0a             	imul   esp,DWORD PTR [rcx],0xa
    319d:	00 57 68             	add    BYTE PTR [rdi+0x68],dl
    31a0:	69 63 68 20 72 6f 6f 	imul   esp,DWORD PTR [rbx+0x68],0x6f6f7220
    31a7:	6d                   	ins    DWORD PTR es:[rdi],dx
    31a8:	20 79 6f             	and    BYTE PTR [rcx+0x6f],bh
    31ab:	75 27                	jne    31d4 <_ZL6BUFLEN+0x244>
    31ad:	64 20 6c 69 6b       	and    BYTE PTR fs:[rcx+rbp*2+0x6b],ch
    31b2:	65 20 74 6f 20       	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
    31b7:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    31b9:	3f                   	(bad)  
    31ba:	00 25 64 2e 20 25    	add    BYTE PTR [rip+0x25202e64],ah        # 25206024 <_end+0x24ffff04>
    31c0:	73 3a                	jae    31fc <_ZL6BUFLEN+0x26c>
    31c2:	20 25 73 0a 00 25    	and    BYTE PTR [rip+0x25000a73],ah        # 25003c3b <_end+0x24dfdb1b>
    31c8:	64 00 54 68 69       	add    BYTE PTR fs:[rax+rbp*2+0x69],dl
    31cd:	73 20                	jae    31ef <_ZL6BUFLEN+0x25f>
    31cf:	69 73 20 61 20 67 6f 	imul   esi,DWORD PTR [rbx+0x20],0x6f672061
    31d6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31d7:	64 20 71 75          	and    BYTE PTR fs:[rcx+0x75],dh
    31db:	65 73 74             	gs jae 3252 <_ZL6BUFLEN+0x2c2>
    31de:	69 6f 6e 2c 00 00 00 	imul   ebp,DWORD PTR [rdi+0x6e],0x2c
    31e5:	00 00                	add    BYTE PTR [rax],al
    31e7:	00 62 75             	add    BYTE PTR [rdx+0x75],ah
    31ea:	74 20                	je     320c <_ZL6BUFLEN+0x27c>
    31ec:	49 20 64 6f 6e       	rex.WB and BYTE PTR [r15+rbp*2+0x6e],spl
    31f1:	27                   	(bad)  
    31f2:	74 20                	je     3214 <_ZL6BUFLEN+0x284>
    31f4:	68 61 76 65 20       	push   0x20657661
    31f9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    31fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31fc:	75 67                	jne    3265 <_ZL6BUFLEN+0x2d5>
    31fe:	68 20 74 69 6d       	push   0x6d697420
    3203:	65 20 74 6f 20       	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
    3208:	61                   	(bad)  
    3209:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    320a:	73 77                	jae    3283 <_ZL6BUFLEN+0x2f3>
    320c:	65 72 20             	gs jb  322f <_ZL6BUFLEN+0x29f>
    320f:	79 6f                	jns    3280 <_ZL6BUFLEN+0x2f0>
    3211:	75 20                	jne    3233 <_ZL6BUFLEN+0x2a3>
    3213:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3214:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3215:	77 2e                	ja     3245 <_ZL6BUFLEN+0x2b5>
    3217:	00 4d 61             	add    BYTE PTR [rbp+0x61],cl
    321a:	79 20                	jns    323c <_ZL6BUFLEN+0x2ac>
    321c:	49 20 6b 6e          	rex.WB and BYTE PTR [r11+0x6e],bpl
    3220:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3221:	77 20                	ja     3243 <_ZL6BUFLEN+0x2b3>
    3223:	79 6f                	jns    3294 <_ZL6BUFLEN+0x304>
    3225:	75 72                	jne    3299 <_ZL6BUFLEN+0x309>
    3227:	20 6e 61             	and    BYTE PTR [rsi+0x61],ch
    322a:	6d                   	ins    DWORD PTR es:[rdi],dx
    322b:	65 20 70 6c          	and    BYTE PTR gs:[rax+0x6c],dh
    322f:	65 61                	gs (bad) 
    3231:	73 65                	jae    3298 <_ZL6BUFLEN+0x308>
    3233:	3f                   	(bad)  
    3234:	00 00                	add    BYTE PTR [rax],al
    3236:	00 00                	add    BYTE PTR [rax],al
    3238:	4f                   	rex.WRXB
    3239:	4b 2c 20             	rex.WXB sub al,0x20
    323c:	6c                   	ins    BYTE PTR es:[rdi],dx
    323d:	65 74 27             	gs je  3267 <_ZL6BUFLEN+0x2d7>
    3240:	73 20                	jae    3262 <_ZL6BUFLEN+0x2d2>
    3242:	64 69 73 63 75 73 73 	imul   esi,DWORD PTR fs:[rbx+0x63],0x20737375
    3249:	20 
    324a:	61                   	(bad)  
    324b:	62                   	(bad)  
    324c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    324d:	75 74                	jne    32c3 <_ZL6BUFLEN+0x333>
    324f:	20 69 74             	and    BYTE PTR [rcx+0x74],ch
    3252:	20 6c 61 74          	and    BYTE PTR [rcx+riz*2+0x74],ch
    3256:	65 72 2e             	gs jb  3287 <_ZL6BUFLEN+0x2f7>
    3259:	0a 00                	or     al,BYTE PTR [rax]
    325b:	41 6e                	rex.B outs dx,BYTE PTR ds:[rsi]
    325d:	79 20                	jns    327f <_ZL6BUFLEN+0x2ef>
    325f:	71 75                	jno    32d6 <_ZL6BUFLEN+0x346>
    3261:	65 73 74             	gs jae 32d8 <_ZL6BUFLEN+0x348>
    3264:	69 6f 6e 73 3f 00 6e 	imul   ebp,DWORD PTR [rdi+0x6e],0x6e003f73
    326b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    326c:	0a 00                	or     al,BYTE PTR [rax]
    326e:	00 00                	add    BYTE PTR [rax],al
    3270:	49 27                	rex.WB (bad) 
    3272:	6d                   	ins    DWORD PTR es:[rdi],dx
    3273:	20 25 73 2c 20 74    	and    BYTE PTR [rip+0x74202c73],ah        # 74205eec <_end+0x73fffdcc>
    3279:	68 61 6e 6b 73       	push   0x736b6e61
    327e:	20 66 6f             	and    BYTE PTR [rsi+0x6f],ah
    3281:	72 20                	jb     32a3 <_ZL6BUFLEN+0x313>
    3283:	6c                   	ins    BYTE PTR es:[rdi],dx
    3284:	69 73 74 65 6e 69 6e 	imul   esi,DWORD PTR [rbx+0x74],0x6e696e65
    328b:	67 21 0a             	and    DWORD PTR [edx],ecx
    328e:	00 e0                	add    al,ah
    3290:	b2 a0                	mov    dl,0xa0
    3292:	5f                   	pop    rdi
    3293:	e0 b2                	loopne 3247 <_ZL6BUFLEN+0x2b7>
    3295:	a0 3f 00 4f 68 20 6e 	movabs al,ds:0x216f6e20684f003f
    329c:	6f 21 
    329e:	20 41 75             	and    BYTE PTR [rcx+0x75],al
    32a1:	64 69 65 6e 63 65 20 	imul   esp,DWORD PTR fs:[rbp+0x6e],0x61206563
    32a8:	61 
    32a9:	72 65                	jb     3310 <_ZL6BUFLEN+0x380>
    32ab:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
    32ae:	67 72 79             	addr32 jb 332a <_ZL6BUFLEN+0x39a>
    32b1:	21 20                	and    DWORD PTR [rax],esp
    32b3:	57                   	push   rdi
    32b4:	65 20 68 6f          	and    BYTE PTR gs:[rax+0x6f],ch
    32b8:	73 74                	jae    332e <_ZL6BUFLEN+0x39e>
    32ba:	65 64 20 61 20       	gs and BYTE PTR fs:[rcx+0x20],ah
    32bf:	62 61 64 20 63       	(bad)  
    32c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32c6:	66 65 72 65          	data16 gs jb 332f <_ZL6BUFLEN+0x39f>
    32ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32cb:	63 65 20             	movsxd esp,DWORD PTR [rbp+0x20]
    32ce:	3a 28                	cmp    ch,BYTE PTR [rax]
    32d0:	28 00                	sub    BYTE PTR [rax],al
    32d2:	00 00                	add    BYTE PTR [rax],al
    32d4:	00 00                	add    BYTE PTR [rax],al
    32d6:	00 00                	add    BYTE PTR [rax],al
    32d8:	48                   	rex.W
    32d9:	49 54                	rex.WB push r12
    32db:	43                   	rex.XB
    32dc:	4f                   	rex.WRXB
    32dd:	4e 20 32             	rex.WRX and BYTE PTR [rdx],r14b
    32e0:	30 31                	xor    BYTE PTR [rcx],dh
    32e2:	38 20                	cmp    BYTE PTR [rax],ah
    32e4:	69 73 20 65 6e 64 21 	imul   esi,DWORD PTR [rbx+0x20],0x21646e65
    32eb:	20 53 65             	and    BYTE PTR [rbx+0x65],dl
    32ee:	65 20 79 6f          	and    BYTE PTR gs:[rcx+0x6f],bh
    32f2:	75 20                	jne    3314 <_ZL6BUFLEN+0x384>
    32f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32f5:	65 78 74             	gs js  336c <_ZL6BUFLEN+0x3dc>
    32f8:	20 79 65             	and    BYTE PTR [rcx+0x65],bh
    32fb:	61                   	(bad)  
    32fc:	72 21                	jb     331f <_ZL6BUFLEN+0x38f>
    32fe:	00 00                	add    BYTE PTR [rax],al
    3300:	31 2e                	xor    DWORD PTR [rsi],ebp
    3302:	20 20                	and    BYTE PTR [rax],ah
    3304:	53                   	push   rbx
    3305:	68 6f 77 20 70       	push   0x7020776f
    330a:	61                   	(bad)  
    330b:	70 65                	jo     3372 <_ZL6BUFLEN+0x3e2>
    330d:	72 73                	jb     3382 <_ZL6BUFLEN+0x3f2>
    330f:	0a 32                	or     dh,BYTE PTR [rdx]
    3311:	2e 20 20             	and    BYTE PTR cs:[rax],ah
    3314:	53                   	push   rbx
    3315:	68 6f 77 20 61       	push   0x6120776f
    331a:	67 65 6e             	outs   dx,BYTE PTR gs:[esi]
    331d:	64 61                	fs (bad) 
    331f:	0a 33                	or     dh,BYTE PTR [rbx]
    3321:	2e 20 20             	and    BYTE PTR cs:[rax],ah
    3324:	53                   	push   rbx
    3325:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    3328:	64 75 6c             	fs jne 3397 <_ZTS3You+0x7>
    332b:	65 00 34 2e          	add    BYTE PTR gs:[rsi+rbp*1],dh
    332f:	20 20                	and    BYTE PTR [rax],ah
    3331:	53                   	push   rbx
    3332:	74 61                	je     3395 <_ZTS3You+0x5>
    3334:	72 74                	jb     33aa <_ZTS8Audience+0x2>
    3336:	00 2d 31 2e 20 45    	add    BYTE PTR [rip+0x45202e31],ch        # 4520616d <_end+0x4500004d>
    333c:	78 69                	js     33a7 <_ZTS12NiceAudience+0xf>
    333e:	74 00                	je     3340 <_ZL6BUFLEN+0x3b0>
    3340:	2f                   	(bad)  
    3341:	64 65 76 2f          	fs gs jbe 3374 <_ZL6BUFLEN+0x3e4>
    3345:	75 72                	jne    33b9 <__GNU_EH_FRAME_HDR+0x5>
    3347:	61                   	(bad)  
    3348:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3349:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    334b:	6d                   	ins    DWORD PTR es:[rdi],dx
    334c:	00 4e 6f             	add    BYTE PTR [rsi+0x6f],cl
    334f:	20 48 49             	and    BYTE PTR [rax+0x49],cl
    3352:	54                   	push   rsp
    3353:	43                   	rex.XB
    3354:	4f                   	rex.WRXB
    3355:	4e 20 74 68 69       	rex.WRX and BYTE PTR [rax+r13*2+0x69],r14b
    335a:	73 20                	jae    337c <_ZL6BUFLEN+0x3ec>
    335c:	79 65                	jns    33c3 <__GNU_EH_FRAME_HDR+0xf>
    335e:	61                   	(bad)  
    335f:	72 20                	jb     3381 <_ZL6BUFLEN+0x3f1>
    3361:	51                   	push   rcx
    3362:	5f                   	pop    rdi
    3363:	51                   	push   rcx
    3364:	3f                   	(bad)  
    3365:	00 00                	add    BYTE PTR [rax],al
    3367:	00 64 f5 ff          	add    BYTE PTR [rbp+rsi*8-0x1],ah
    336b:	ff e7                	jmp    rdi
    336d:	f4                   	hlt    
    336e:	ff                   	(bad)  
    336f:	ff 43 f5             	inc    DWORD PTR [rbx-0xb]
    3372:	ff                   	(bad)  
    3373:	ff 4a f5             	dec    DWORD PTR [rdx-0xb]
    3376:	ff                   	(bad)  
    3377:	ff 51 f5             	call   QWORD PTR [rcx-0xb]
    337a:	ff                   	(bad)  
    337b:	ff 58 f5             	call   FWORD PTR [rax-0xb]
    337e:	ff                   	(bad)  
    337f:	ff 53 6f             	call   QWORD PTR [rbx+0x6f]
    3382:	20 79 6f             	and    BYTE PTR [rcx+0x6f],bh
    3385:	75 72                	jne    33f9 <__GNU_EH_FRAME_HDR+0x45>
    3387:	20 71 75             	and    BYTE PTR [rcx+0x75],dh
    338a:	65 73 74             	gs jae 3401 <__GNU_EH_FRAME_HDR+0x4d>
    338d:	69 6f 6e 33 59 6f 75 	imul   ebp,DWORD PTR [rdi+0x6e],0x756f5933

0000000000003390 <_ZTS3You>:
    3390:	33 59 6f             	xor    ebx,DWORD PTR [rcx+0x6f]
    3393:	75 00                	jne    3395 <_ZTS3You+0x5>
    3395:	00 00                	add    BYTE PTR [rax],al
	...

0000000000003398 <_ZTS12NiceAudience>:
    3398:	31 32                	xor    DWORD PTR [rdx],esi
    339a:	4e 69 63 65 41 75 64 	rex.WRX imul r12,QWORD PTR [rbx+0x65],0x69647541
    33a1:	69 
    33a2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    33a4:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
	...

00000000000033a8 <_ZTS8Audience>:
    33a8:	38 41 75             	cmp    BYTE PTR [rcx+0x75],al
    33ab:	64                   	fs
    33ac:	69                   	.byte 0x69
    33ad:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    33af:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]

Disassembly of section .eh_frame_hdr:

00000000000033b4 <__GNU_EH_FRAME_HDR>:
    33b4:	01 1b                	add    DWORD PTR [rbx],ebx
    33b6:	03 3b                	add    edi,DWORD PTR [rbx]
    33b8:	70 01                	jo     33bb <__GNU_EH_FRAME_HDR+0x7>
    33ba:	00 00                	add    BYTE PTR [rax],al
    33bc:	2d 00 00 00 1c       	sub    eax,0x1c000000
    33c1:	dc ff                	fdivr  st(7),st
    33c3:	ff                   	(bad)  
    33c4:	bc 01 00 00 fc       	mov    esp,0xfc000001
    33c9:	dd ff                	(bad)  
    33cb:	ff e4                	jmp    rsp
    33cd:	01 00                	add    DWORD PTR [rax],eax
    33cf:	00 0c de             	add    BYTE PTR [rsi+rbx*8],cl
    33d2:	ff                   	(bad)  
    33d3:	ff 8c 01 00 00 16 df 	dec    DWORD PTR [rcx+rax*1-0x20ea0000]
    33da:	ff                   	(bad)  
    33db:	ff                   	(bad)  
    33dc:	fc                   	cld    
    33dd:	01 00                	add    DWORD PTR [rax],eax
    33df:	00 30                	add    BYTE PTR [rax],dh
    33e1:	df ff                	(bad)  
    33e3:	ff 58 02             	call   FWORD PTR [rax+0x2]
    33e6:	00 00                	add    BYTE PTR [rax],al
    33e8:	df df                	(bad)  
    33ea:	ff                   	(bad)  
    33eb:	ff                   	(bad)  
    33ec:	78 02                	js     33f0 <__GNU_EH_FRAME_HDR+0x3c>
    33ee:	00 00                	add    BYTE PTR [rax],al
    33f0:	f4                   	hlt    
    33f1:	e0 ff                	loopne 33f2 <__GNU_EH_FRAME_HDR+0x3e>
    33f3:	ff 98 02 00 00 07    	call   FWORD PTR [rax+0x7000002]
    33f9:	e1 ff                	loope  33fa <__GNU_EH_FRAME_HDR+0x46>
    33fb:	ff                   	(bad)  
    33fc:	b8 02 00 00 7d       	mov    eax,0x7d000002
    3401:	e1 ff                	loope  3402 <__GNU_EH_FRAME_HDR+0x4e>
    3403:	ff                   	(bad)  
    3404:	d8 02                	fadd   DWORD PTR [rdx]
    3406:	00 00                	add    BYTE PTR [rax],al
    3408:	7b e8                	jnp    33f2 <__GNU_EH_FRAME_HDR+0x3e>
    340a:	ff                   	(bad)  
    340b:	ff 04 03             	inc    DWORD PTR [rbx+rax*1]
    340e:	00 00                	add    BYTE PTR [rax],al
    3410:	50                   	push   rax
    3411:	e9 ff ff 24 03       	jmp    3253415 <_end+0x304d2f5>
    3416:	00 00                	add    BYTE PTR [rax],al
    3418:	fb                   	sti    
    3419:	e9 ff ff c4 04       	jmp    4c5341d <_end+0x4a4d2fd>
    341e:	00 00                	add    BYTE PTR [rax],al
    3420:	b7 ea                	mov    bh,0xea
    3422:	ff                   	(bad)  
    3423:	ff e4                	jmp    rsp
    3425:	04 00                	add    al,0x0
    3427:	00 45 eb             	add    BYTE PTR [rbp-0x15],al
    342a:	ff                   	(bad)  
    342b:	ff 04 05 00 00 d7 eb 	inc    DWORD PTR [rax*1-0x14290000]
    3432:	ff                   	(bad)  
    3433:	ff 24 05 00 00 67 ec 	jmp    QWORD PTR [rax*1-0x13990000]
    343a:	ff                   	(bad)  
    343b:	ff 44 05 00          	inc    DWORD PTR [rbp+rax*1+0x0]
    343f:	00 7a ec             	add    BYTE PTR [rdx-0x14],bh
    3442:	ff                   	(bad)  
    3443:	ff 64 05 00          	jmp    QWORD PTR [rbp+rax*1+0x0]
    3447:	00 2f                	add    BYTE PTR [rdi],ch
    3449:	ef                   	out    dx,eax
    344a:	ff                   	(bad)  
    344b:	ff 84 05 00 00 26 f0 	inc    DWORD PTR [rbp+rax*1-0xfda0000]
    3452:	ff                   	(bad)  
    3453:	ff a4 05 00 00 18 f1 	jmp    QWORD PTR [rbp+rax*1-0xee80000]
    345a:	ff                   	(bad)  
    345b:	ff 24 06             	jmp    QWORD PTR [rsi+rax*1]
    345e:	00 00                	add    BYTE PTR [rax],al
    3460:	cb                   	retf   
    3461:	f1                   	icebp  
    3462:	ff                   	(bad)  
    3463:	ff 48 06             	dec    DWORD PTR [rax+0x6]
    3466:	00 00                	add    BYTE PTR [rax],al
    3468:	98                   	cwde   
    3469:	f3 ff                	repz (bad) 
    346b:	ff 68 06             	jmp    FWORD PTR [rax+0x6]
    346e:	00 00                	add    BYTE PTR [rax],al
    3470:	cc                   	int3   
    3471:	f3 ff                	repz (bad) 
    3473:	ff 88 06 00 00 75    	dec    DWORD PTR [rax+0x75000006]
    3479:	f4                   	hlt    
    347a:	ff                   	(bad)  
    347b:	ff a8 06 00 00 46    	jmp    FWORD PTR [rax+0x46000006]
    3481:	f5                   	cmc    
    3482:	ff                   	(bad)  
    3483:	ff c8                	dec    eax
    3485:	06                   	(bad)  
    3486:	00 00                	add    BYTE PTR [rax],al
    3488:	96                   	xchg   esi,eax
    3489:	f5                   	cmc    
    348a:	ff                   	(bad)  
    348b:	ff                   	(bad)  
    348c:	ec                   	in     al,dx
    348d:	06                   	(bad)  
    348e:	00 00                	add    BYTE PTR [rax],al
    3490:	ac                   	lods   al,BYTE PTR ds:[rsi]
    3491:	f5                   	cmc    
    3492:	ff                   	(bad)  
    3493:	ff 18                	call   FWORD PTR [rax]
    3495:	02 00                	add    al,BYTE PTR [rax]
    3497:	00 b8 f5 ff ff 38    	add    BYTE PTR [rax+0x38fffff5],bh
    349d:	02 00                	add    al,BYTE PTR [rax]
    349f:	00 f2                	add    dl,dh
    34a1:	f5                   	cmc    
    34a2:	ff                   	(bad)  
    34a3:	ff 44 03 00          	inc    DWORD PTR [rbx+rax*1+0x0]
    34a7:	00 02                	add    BYTE PTR [rdx],al
    34a9:	f6 ff                	idiv   bh
    34ab:	ff 64 03 00          	jmp    QWORD PTR [rbx+rax*1+0x0]
    34af:	00 12                	add    BYTE PTR [rdx],dl
    34b1:	f6 ff                	idiv   bh
    34b3:	ff 84 03 00 00 4c f6 	inc    DWORD PTR [rbx+rax*1-0x9b40000]
    34ba:	ff                   	(bad)  
    34bb:	ff a4 03 00 00 5c f6 	jmp    QWORD PTR [rbx+rax*1-0x9a40000]
    34c2:	ff                   	(bad)  
    34c3:	ff c4                	inc    esp
    34c5:	03 00                	add    eax,DWORD PTR [rax]
    34c7:	00 6e f6             	add    BYTE PTR [rsi-0xa],ch
    34ca:	ff                   	(bad)  
    34cb:	ff e4                	jmp    rsp
    34cd:	03 00                	add    eax,DWORD PTR [rax]
    34cf:	00 d2                	add    dl,dl
    34d1:	f7 ff                	idiv   edi
    34d3:	ff 04 04             	inc    DWORD PTR [rsp+rax*1]
    34d6:	00 00                	add    BYTE PTR [rax],al
    34d8:	1a f8                	sbb    bh,al
    34da:	ff                   	(bad)  
    34db:	ff 24 04             	jmp    QWORD PTR [rsp+rax*1]
    34de:	00 00                	add    BYTE PTR [rax],al
    34e0:	3a f8                	cmp    bh,al
    34e2:	ff                   	(bad)  
    34e3:	ff 44 04 00          	inc    DWORD PTR [rsp+rax*1+0x0]
    34e7:	00 5a f8             	add    BYTE PTR [rdx-0x8],bl
    34ea:	ff                   	(bad)  
    34eb:	ff 64 04 00          	jmp    QWORD PTR [rsp+rax*1+0x0]
    34ef:	00 66 f9             	add    BYTE PTR [rsi-0x7],ah
    34f2:	ff                   	(bad)  
    34f3:	ff 84 04 00 00 a8 f9 	inc    DWORD PTR [rsp+rax*1-0x6580000]
    34fa:	ff                   	(bad)  
    34fb:	ff a4 04 00 00 1e fa 	jmp    QWORD PTR [rsp+rax*1-0x5e20000]
    3502:	ff                   	(bad)  
    3503:	ff c4                	inc    esp
    3505:	05 00 00 38 fa       	add    eax,0xfa380000
    350a:	ff                   	(bad)  
    350b:	ff e4                	jmp    rsp
    350d:	05 00 00 62 fa       	add    eax,0xfa620000
    3512:	ff                   	(bad)  
    3513:	ff 04 06             	inc    DWORD PTR [rsi+rax*1]
    3516:	00 00                	add    BYTE PTR [rax],al
    3518:	8c fa                	mov    edx,?
    351a:	ff                   	(bad)  
    351b:	ff 0c 07             	dec    DWORD PTR [rdi+rax*1]
    351e:	00 00                	add    BYTE PTR [rax],al
    3520:	fc                   	cld    
    3521:	fa                   	cli    
    3522:	ff                   	(bad)  
    3523:	ff 54 07 00          	call   QWORD PTR [rdi+rax*1+0x0]
	...

Disassembly of section .eh_frame:

0000000000003528 <__FRAME_END__-0x5f4>:
    3528:	14 00                	adc    al,0x0
    352a:	00 00                	add    BYTE PTR [rax],al
    352c:	00 00                	add    BYTE PTR [rax],al
    352e:	00 00                	add    BYTE PTR [rax],al
    3530:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    3533:	00 01                	add    BYTE PTR [rcx],al
    3535:	78 10                	js     3547 <__GNU_EH_FRAME_HDR+0x193>
    3537:	01 1b                	add    DWORD PTR [rbx],ebx
    3539:	0c 07                	or     al,0x7
    353b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
    3541:	00 00                	add    BYTE PTR [rax],al
    3543:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    3546:	00 00                	add    BYTE PTR [rax],al
    3548:	78 dc                	js     3526 <__GNU_EH_FRAME_HDR+0x172>
    354a:	ff                   	(bad)  
    354b:	ff 2b                	jmp    FWORD PTR [rbx]
	...
    3555:	00 00                	add    BYTE PTR [rax],al
    3557:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    355a:	00 00                	add    BYTE PTR [rax],al
    355c:	00 00                	add    BYTE PTR [rax],al
    355e:	00 00                	add    BYTE PTR [rax],al
    3560:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    3563:	00 01                	add    BYTE PTR [rcx],al
    3565:	78 10                	js     3577 <__GNU_EH_FRAME_HDR+0x1c3>
    3567:	01 1b                	add    DWORD PTR [rbx],ebx
    3569:	0c 07                	or     al,0x7
    356b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
    3571:	00 00                	add    BYTE PTR [rax],al
    3573:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    3576:	00 00                	add    BYTE PTR [rax],al
    3578:	58                   	pop    rax
    3579:	da ff                	(bad)  
    357b:	ff e0                	jmp    rax
    357d:	01 00                	add    DWORD PTR [rax],eax
    357f:	00 00                	add    BYTE PTR [rax],al
    3581:	0e                   	(bad)  
    3582:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    3585:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    3588:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    358b:	80 00 3f             	add    BYTE PTR [rax],0x3f
    358e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    3590:	2a 33                	sub    dh,BYTE PTR [rbx]
    3592:	24 22                	and    al,0x22
    3594:	00 00                	add    BYTE PTR [rax],al
    3596:	00 00                	add    BYTE PTR [rax],al
    3598:	14 00                	adc    al,0x0
    359a:	00 00                	add    BYTE PTR [rax],al
    359c:	44 00 00             	add    BYTE PTR [rax],r8b
    359f:	00 10                	add    BYTE PTR [rax],dl
    35a1:	dc ff                	fdivr  st(7),st
    35a3:	ff 08                	dec    DWORD PTR [rax]
	...
    35ad:	00 00                	add    BYTE PTR [rax],al
    35af:	00 18                	add    BYTE PTR [rax],bl
    35b1:	00 00                	add    BYTE PTR [rax],al
    35b3:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
    35b7:	00 12                	add    BYTE PTR [rdx],dl
    35b9:	dd ff                	(bad)  
    35bb:	ff 1a                	call   FWORD PTR [rdx]
    35bd:	00 00                	add    BYTE PTR [rax],al
    35bf:	00 00                	add    BYTE PTR [rax],al
    35c1:	41 0e                	rex.B (bad) 
    35c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    35c9:	00 00                	add    BYTE PTR [rax],al
    35cb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    35ce:	00 00                	add    BYTE PTR [rax],al
    35d0:	78 00                	js     35d2 <__GNU_EH_FRAME_HDR+0x21e>
    35d2:	00 00                	add    BYTE PTR [rax],al
    35d4:	8c f3                	mov    ebx,?
    35d6:	ff                   	(bad)  
    35d7:	ff 0b                	dec    DWORD PTR [rbx]
    35d9:	00 00                	add    BYTE PTR [rax],al
    35db:	00 00                	add    BYTE PTR [rax],al
    35dd:	41 0e                	rex.B (bad) 
    35df:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    35e5:	46 0c 07             	rex.RX or al,0x7
    35e8:	08 00                	or     BYTE PTR [rax],al
    35ea:	00 00                	add    BYTE PTR [rax],al
    35ec:	1c 00                	sbb    al,0x0
    35ee:	00 00                	add    BYTE PTR [rax],al
    35f0:	98                   	cwde   
    35f1:	00 00                	add    BYTE PTR [rax],al
    35f3:	00 78 f3             	add    BYTE PTR [rax-0xd],bh
    35f6:	ff                   	(bad)  
    35f7:	ff                   	(bad)  
    35f8:	3a 00                	cmp    al,BYTE PTR [rax]
    35fa:	00 00                	add    BYTE PTR [rax],al
    35fc:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    35ff:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3605:	75 0c                	jne    3613 <__GNU_EH_FRAME_HDR+0x25f>
    3607:	07                   	(bad)  
    3608:	08 00                	or     BYTE PTR [rax],al
    360a:	00 00                	add    BYTE PTR [rax],al
    360c:	1c 00                	sbb    al,0x0
    360e:	00 00                	add    BYTE PTR [rax],al
    3610:	b8 00 00 00 d0       	mov    eax,0xd0000000
    3615:	dc ff                	fdivr  st(7),st
    3617:	ff af 00 00 00 00    	jmp    FWORD PTR [rdi+0x0]
    361d:	41 0e                	rex.B (bad) 
    361f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3625:	02 aa 0c 07 08 00    	add    ch,BYTE PTR [rdx+0x8070c]
    362b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    362e:	00 00                	add    BYTE PTR [rax],al
    3630:	d8 00                	fadd   DWORD PTR [rax]
    3632:	00 00                	add    BYTE PTR [rax],al
    3634:	5f                   	pop    rdi
    3635:	dd ff                	(bad)  
    3637:	ff 15 01 00 00 00    	call   QWORD PTR [rip+0x1]        # 363e <__GNU_EH_FRAME_HDR+0x28a>
    363d:	41 0e                	rex.B (bad) 
    363f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3645:	03 10                	add    edx,DWORD PTR [rax]
    3647:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    364a:	08 00                	or     BYTE PTR [rax],al
    364c:	1c 00                	sbb    al,0x0
    364e:	00 00                	add    BYTE PTR [rax],al
    3650:	f8                   	clc    
    3651:	00 00                	add    BYTE PTR [rax],al
    3653:	00 54 de ff          	add    BYTE PTR [rsi+rbx*8-0x1],dl
    3657:	ff 13                	call   QWORD PTR [rbx]
    3659:	00 00                	add    BYTE PTR [rax],al
    365b:	00 00                	add    BYTE PTR [rax],al
    365d:	41 0e                	rex.B (bad) 
    365f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3665:	4e 0c 07             	rex.WRX or al,0x7
    3668:	08 00                	or     BYTE PTR [rax],al
    366a:	00 00                	add    BYTE PTR [rax],al
    366c:	1c 00                	sbb    al,0x0
    366e:	00 00                	add    BYTE PTR [rax],al
    3670:	18 01                	sbb    BYTE PTR [rcx],al
    3672:	00 00                	add    BYTE PTR [rax],al
    3674:	47 de ff             	rex.RXB fdivrp st(7),st
    3677:	ff 76 00             	push   QWORD PTR [rsi+0x0]
    367a:	00 00                	add    BYTE PTR [rax],al
    367c:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    367f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3685:	02 71 0c             	add    dh,BYTE PTR [rcx+0xc]
    3688:	07                   	(bad)  
    3689:	08 00                	or     BYTE PTR [rax],al
    368b:	00 28                	add    BYTE PTR [rax],ch
    368d:	00 00                	add    BYTE PTR [rax],al
    368f:	00 38                	add    BYTE PTR [rax],bh
    3691:	01 00                	add    DWORD PTR [rax],eax
    3693:	00 9d de ff ff fe    	add    BYTE PTR [rbp-0x1000022],bl
    3699:	06                   	(bad)  
    369a:	00 00                	add    BYTE PTR [rax],al
    369c:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    369f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    36a5:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    36a8:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    36af:	07                   	(bad)  
    36b0:	03 ec                	add    ebp,esp
    36b2:	06                   	(bad)  
    36b3:	0c 07                	or     al,0x7
    36b5:	08 00                	or     BYTE PTR [rax],al
    36b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    36ba:	00 00                	add    BYTE PTR [rax],al
    36bc:	64 01 00             	add    DWORD PTR fs:[rax],eax
    36bf:	00 6f e5             	add    BYTE PTR [rdi-0x1b],ch
    36c2:	ff                   	(bad)  
    36c3:	ff d5                	call   rbp
    36c5:	00 00                	add    BYTE PTR [rax],al
    36c7:	00 00                	add    BYTE PTR [rax],al
    36c9:	41 0e                	rex.B (bad) 
    36cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    36d1:	02 d0                	add    dl,al
    36d3:	0c 07                	or     al,0x7
    36d5:	08 00                	or     BYTE PTR [rax],al
    36d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    36da:	00 00                	add    BYTE PTR [rax],al
    36dc:	84 01                	test   BYTE PTR [rcx],al
    36de:	00 00                	add    BYTE PTR [rax],al
    36e0:	24 e6                	and    al,0xe6
    36e2:	ff                   	(bad)  
    36e3:	ff ab 00 00 00 00    	jmp    FWORD PTR [rbx+0x0]
    36e9:	41 0e                	rex.B (bad) 
    36eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    36f1:	02 a6 0c 07 08 00    	add    ah,BYTE PTR [rsi+0x8070c]
    36f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    36fa:	00 00                	add    BYTE PTR [rax],al
    36fc:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    36fd:	01 00                	add    DWORD PTR [rax],eax
    36ff:	00 a6 f2 ff ff 10    	add    BYTE PTR [rsi+0x10fffff2],ah
    3705:	00 00                	add    BYTE PTR [rax],al
    3707:	00 00                	add    BYTE PTR [rax],al
    3709:	41 0e                	rex.B (bad) 
    370b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3711:	4b 0c 07             	rex.WXB or al,0x7
    3714:	08 00                	or     BYTE PTR [rax],al
    3716:	00 00                	add    BYTE PTR [rax],al
    3718:	1c 00                	sbb    al,0x0
    371a:	00 00                	add    BYTE PTR [rax],al
    371c:	c4 01 00 00          	(bad)  
    3720:	96                   	xchg   esi,eax
    3721:	f2 ff                	repnz (bad) 
    3723:	ff 0f                	dec    DWORD PTR [rdi]
    3725:	00 00                	add    BYTE PTR [rax],al
    3727:	00 00                	add    BYTE PTR [rax],al
    3729:	41 0e                	rex.B (bad) 
    372b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3731:	4a 0c 07             	rex.WX or al,0x7
    3734:	08 00                	or     BYTE PTR [rax],al
    3736:	00 00                	add    BYTE PTR [rax],al
    3738:	1c 00                	sbb    al,0x0
    373a:	00 00                	add    BYTE PTR [rax],al
    373c:	e4 01                	in     al,0x1
    373e:	00 00                	add    BYTE PTR [rax],al
    3740:	86 f2                	xchg   dl,dh
    3742:	ff                   	(bad)  
    3743:	ff                   	(bad)  
    3744:	39 00                	cmp    DWORD PTR [rax],eax
    3746:	00 00                	add    BYTE PTR [rax],al
    3748:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    374b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3751:	74 0c                	je     375f <__GNU_EH_FRAME_HDR+0x3ab>
    3753:	07                   	(bad)  
    3754:	08 00                	or     BYTE PTR [rax],al
    3756:	00 00                	add    BYTE PTR [rax],al
    3758:	1c 00                	sbb    al,0x0
    375a:	00 00                	add    BYTE PTR [rax],al
    375c:	04 02                	add    al,0x2
    375e:	00 00                	add    BYTE PTR [rax],al
    3760:	a0 f2 ff ff 0f 00 00 	movabs al,ds:0xffffff2
    3767:	00 00 
    3769:	41 0e                	rex.B (bad) 
    376b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3771:	4a 0c 07             	rex.WX or al,0x7
    3774:	08 00                	or     BYTE PTR [rax],al
    3776:	00 00                	add    BYTE PTR [rax],al
    3778:	1c 00                	sbb    al,0x0
    377a:	00 00                	add    BYTE PTR [rax],al
    377c:	24 02                	and    al,0x2
    377e:	00 00                	add    BYTE PTR [rax],al
    3780:	90                   	nop
    3781:	f2 ff                	repnz (bad) 
    3783:	ff 12                	call   QWORD PTR [rdx]
    3785:	00 00                	add    BYTE PTR [rax],al
    3787:	00 00                	add    BYTE PTR [rax],al
    3789:	41 0e                	rex.B (bad) 
    378b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3791:	4d 0c 07             	rex.WRB or al,0x7
    3794:	08 00                	or     BYTE PTR [rax],al
    3796:	00 00                	add    BYTE PTR [rax],al
    3798:	1c 00                	sbb    al,0x0
    379a:	00 00                	add    BYTE PTR [rax],al
    379c:	44 02 00             	add    r8b,BYTE PTR [rax]
    379f:	00 82 f2 ff ff 64    	add    BYTE PTR [rdx+0x64fffff2],al
    37a5:	01 00                	add    DWORD PTR [rax],eax
    37a7:	00 00                	add    BYTE PTR [rax],al
    37a9:	41 0e                	rex.B (bad) 
    37ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    37b1:	03 5f 01             	add    ebx,DWORD PTR [rdi+0x1]
    37b4:	0c 07                	or     al,0x7
    37b6:	08 00                	or     BYTE PTR [rax],al
    37b8:	1c 00                	sbb    al,0x0
    37ba:	00 00                	add    BYTE PTR [rax],al
    37bc:	64 02 00             	add    al,BYTE PTR fs:[rax]
    37bf:	00 c6                	add    dh,al
    37c1:	f3 ff                	repz (bad) 
    37c3:	ff 47 00             	inc    DWORD PTR [rdi+0x0]
    37c6:	00 00                	add    BYTE PTR [rax],al
    37c8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    37cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    37d1:	02 42 0c             	add    al,BYTE PTR [rdx+0xc]
    37d4:	07                   	(bad)  
    37d5:	08 00                	or     BYTE PTR [rax],al
    37d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    37da:	00 00                	add    BYTE PTR [rax],al
    37dc:	84 02                	test   BYTE PTR [rdx],al
    37de:	00 00                	add    BYTE PTR [rax],al
    37e0:	ee                   	out    dx,al
    37e1:	f3 ff                	repz (bad) 
    37e3:	ff 1f                	call   FWORD PTR [rdi]
    37e5:	00 00                	add    BYTE PTR [rax],al
    37e7:	00 00                	add    BYTE PTR [rax],al
    37e9:	41 0e                	rex.B (bad) 
    37eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    37f1:	5a                   	pop    rdx
    37f2:	0c 07                	or     al,0x7
    37f4:	08 00                	or     BYTE PTR [rax],al
    37f6:	00 00                	add    BYTE PTR [rax],al
    37f8:	1c 00                	sbb    al,0x0
    37fa:	00 00                	add    BYTE PTR [rax],al
    37fc:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    37fd:	02 00                	add    al,BYTE PTR [rax]
    37ff:	00 ee                	add    dh,ch
    3801:	f3 ff                	repz (bad) 
    3803:	ff 1f                	call   FWORD PTR [rdi]
    3805:	00 00                	add    BYTE PTR [rax],al
    3807:	00 00                	add    BYTE PTR [rax],al
    3809:	41 0e                	rex.B (bad) 
    380b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3811:	5a                   	pop    rdx
    3812:	0c 07                	or     al,0x7
    3814:	08 00                	or     BYTE PTR [rax],al
    3816:	00 00                	add    BYTE PTR [rax],al
    3818:	1c 00                	sbb    al,0x0
    381a:	00 00                	add    BYTE PTR [rax],al
    381c:	c4 02 00 00          	(bad)  
    3820:	ee                   	out    dx,al
    3821:	f3 ff                	repz (bad) 
    3823:	ff 0b                	dec    DWORD PTR [rbx]
    3825:	01 00                	add    DWORD PTR [rax],eax
    3827:	00 00                	add    BYTE PTR [rax],al
    3829:	41 0e                	rex.B (bad) 
    382b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3831:	03 06                	add    eax,DWORD PTR [rsi]
    3833:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    3836:	08 00                	or     BYTE PTR [rax],al
    3838:	1c 00                	sbb    al,0x0
    383a:	00 00                	add    BYTE PTR [rax],al
    383c:	e4 02                	in     al,0x2
    383e:	00 00                	add    BYTE PTR [rax],al
    3840:	da f4                	(bad)  
    3842:	ff                   	(bad)  
    3843:	ff 41 00             	inc    DWORD PTR [rcx+0x0]
    3846:	00 00                	add    BYTE PTR [rax],al
    3848:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    384b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3851:	7c 0c                	jl     385f <__GNU_EH_FRAME_HDR+0x4ab>
    3853:	07                   	(bad)  
    3854:	08 00                	or     BYTE PTR [rax],al
    3856:	00 00                	add    BYTE PTR [rax],al
    3858:	1c 00                	sbb    al,0x0
    385a:	00 00                	add    BYTE PTR [rax],al
    385c:	04 03                	add    al,0x3
    385e:	00 00                	add    BYTE PTR [rax],al
    3860:	fc                   	cld    
    3861:	f4                   	hlt    
    3862:	ff                   	(bad)  
    3863:	ff 76 00             	push   QWORD PTR [rsi+0x0]
    3866:	00 00                	add    BYTE PTR [rax],al
    3868:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    386b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3871:	02 71 0c             	add    dh,BYTE PTR [rcx+0xc]
    3874:	07                   	(bad)  
    3875:	08 00                	or     BYTE PTR [rax],al
    3877:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    387a:	00 00                	add    BYTE PTR [rax],al
    387c:	24 03                	and    al,0x3
    387e:	00 00                	add    BYTE PTR [rax],al
    3880:	2f                   	(bad)  
    3881:	e5 ff                	in     eax,0xff
    3883:	ff                   	(bad)  
    3884:	bc 00 00 00 00       	mov    esp,0x0
    3889:	41 0e                	rex.B (bad) 
    388b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3891:	02 b7 0c 07 08 00    	add    dh,BYTE PTR [rdi+0x8070c]
    3897:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    389a:	00 00                	add    BYTE PTR [rax],al
    389c:	44 03 00             	add    r8d,DWORD PTR [rax]
    389f:	00 cb                	add    bl,cl
    38a1:	e5 ff                	in     eax,0xff
    38a3:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
    38a9:	41 0e                	rex.B (bad) 
    38ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    38b1:	02 89 0c 07 08 00    	add    cl,BYTE PTR [rcx+0x8070c]
    38b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    38ba:	00 00                	add    BYTE PTR [rax],al
    38bc:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    38bf:	00 39                	add    BYTE PTR [rcx],bh
    38c1:	e6 ff                	out    0xff,al
    38c3:	ff 92 00 00 00 00    	call   QWORD PTR [rdx+0x0]
    38c9:	41 0e                	rex.B (bad) 
    38cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    38d1:	02 8d 0c 07 08 00    	add    cl,BYTE PTR [rbp+0x8070c]
    38d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    38da:	00 00                	add    BYTE PTR [rax],al
    38dc:	84 03                	test   BYTE PTR [rbx],al
    38de:	00 00                	add    BYTE PTR [rax],al
    38e0:	ab                   	stos   DWORD PTR es:[rdi],eax
    38e1:	e6 ff                	out    0xff,al
    38e3:	ff 90 00 00 00 00    	call   QWORD PTR [rax+0x0]
    38e9:	41 0e                	rex.B (bad) 
    38eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    38f1:	02 8b 0c 07 08 00    	add    cl,BYTE PTR [rbx+0x8070c]
    38f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    38fa:	00 00                	add    BYTE PTR [rax],al
    38fc:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    38fd:	03 00                	add    eax,DWORD PTR [rax]
    38ff:	00 1b                	add    BYTE PTR [rbx],bl
    3901:	e7 ff                	out    0xff,eax
    3903:	ff 13                	call   QWORD PTR [rbx]
    3905:	00 00                	add    BYTE PTR [rax],al
    3907:	00 00                	add    BYTE PTR [rax],al
    3909:	41 0e                	rex.B (bad) 
    390b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3911:	4e 0c 07             	rex.WRX or al,0x7
    3914:	08 00                	or     BYTE PTR [rax],al
    3916:	00 00                	add    BYTE PTR [rax],al
    3918:	1c 00                	sbb    al,0x0
    391a:	00 00                	add    BYTE PTR [rax],al
    391c:	c4 03 00 00          	(bad)  
    3920:	0e                   	(bad)  
    3921:	e7 ff                	out    0xff,eax
    3923:	ff b5 02 00 00 00    	push   QWORD PTR [rbp+0x2]
    3929:	41 0e                	rex.B (bad) 
    392b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3931:	03 b0 02 0c 07 08    	add    esi,DWORD PTR [rax+0x8070c02]
    3937:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    393a:	00 00                	add    BYTE PTR [rax],al
    393c:	e4 03                	in     al,0x3
    393e:	00 00                	add    BYTE PTR [rax],al
    3940:	a3 e9 ff ff f7 00 00 	movabs ds:0xf7ffffe9,eax
    3947:	00 00 
    3949:	41 0e                	rex.B (bad) 
    394b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3951:	02 f2                	add    dh,dl
    3953:	0c 07                	or     al,0x7
    3955:	08 00                	or     BYTE PTR [rax],al
    3957:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    395a:	00 00                	add    BYTE PTR [rax],al
    395c:	04 04                	add    al,0x4
    395e:	00 00                	add    BYTE PTR [rax],al
    3960:	7a ea                	jp     394c <__GNU_EH_FRAME_HDR+0x598>
    3962:	ff                   	(bad)  
    3963:	ff f2                	push   rdx
    3965:	00 00                	add    BYTE PTR [rax],al
    3967:	00 00                	add    BYTE PTR [rax],al
    3969:	41 0e                	rex.B (bad) 
    396b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3971:	02 ed                	add    ch,ch
    3973:	0c 07                	or     al,0x7
    3975:	08 00                	or     BYTE PTR [rax],al
    3977:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    397a:	00 00                	add    BYTE PTR [rax],al
    397c:	24 04                	and    al,0x4
    397e:	00 00                	add    BYTE PTR [rax],al
    3980:	52                   	push   rdx
    3981:	f4                   	hlt    
    3982:	ff                   	(bad)  
    3983:	ff 19                	call   FWORD PTR [rcx]
    3985:	00 00                	add    BYTE PTR [rax],al
    3987:	00 00                	add    BYTE PTR [rax],al
    3989:	41 0e                	rex.B (bad) 
    398b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3991:	54                   	push   rsp
    3992:	0c 07                	or     al,0x7
    3994:	08 00                	or     BYTE PTR [rax],al
    3996:	00 00                	add    BYTE PTR [rax],al
    3998:	1c 00                	sbb    al,0x0
    399a:	00 00                	add    BYTE PTR [rax],al
    399c:	44 04 00             	rex.R add al,0x0
    399f:	00 4c f4 ff          	add    BYTE PTR [rsp+rsi*8-0x1],cl
    39a3:	ff 29                	jmp    FWORD PTR [rcx]
    39a5:	00 00                	add    BYTE PTR [rax],al
    39a7:	00 00                	add    BYTE PTR [rax],al
    39a9:	41 0e                	rex.B (bad) 
    39ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    39b1:	64 0c 07             	fs or  al,0x7
    39b4:	08 00                	or     BYTE PTR [rax],al
    39b6:	00 00                	add    BYTE PTR [rax],al
    39b8:	1c 00                	sbb    al,0x0
    39ba:	00 00                	add    BYTE PTR [rax],al
    39bc:	64 04 00             	fs add al,0x0
    39bf:	00 56 f4             	add    BYTE PTR [rsi-0xc],dl
    39c2:	ff                   	(bad)  
    39c3:	ff 29                	jmp    FWORD PTR [rcx]
    39c5:	00 00                	add    BYTE PTR [rax],al
    39c7:	00 00                	add    BYTE PTR [rax],al
    39c9:	41 0e                	rex.B (bad) 
    39cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    39d1:	64 0c 07             	fs or  al,0x7
    39d4:	08 00                	or     BYTE PTR [rax],al
    39d6:	00 00                	add    BYTE PTR [rax],al
    39d8:	20 00                	and    BYTE PTR [rax],al
    39da:	00 00                	add    BYTE PTR [rax],al
    39dc:	84 04 00             	test   BYTE PTR [rax+rax*1],al
    39df:	00 ec                	add    ah,ch
    39e1:	ea                   	(bad)  
    39e2:	ff                   	(bad)  
    39e3:	ff b3 00 00 00 00    	push   QWORD PTR [rbx+0x0]
    39e9:	41 0e                	rex.B (bad) 
    39eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    39f1:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    39f5:	a9 0c 07 08 00       	test   eax,0x8070c
    39fa:	00 00                	add    BYTE PTR [rax],al
    39fc:	1c 00                	sbb    al,0x0
    39fe:	00 00                	add    BYTE PTR [rax],al
    3a00:	a8 04                	test   al,0x4
    3a02:	00 00                	add    BYTE PTR [rax],al
    3a04:	7b eb                	jnp    39f1 <__GNU_EH_FRAME_HDR+0x63d>
    3a06:	ff                   	(bad)  
    3a07:	ff cd                	dec    ebp
    3a09:	01 00                	add    DWORD PTR [rax],eax
    3a0b:	00 00                	add    BYTE PTR [rax],al
    3a0d:	41 0e                	rex.B (bad) 
    3a0f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3a15:	03 c8                	add    ecx,eax
    3a17:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    3a1a:	08 00                	or     BYTE PTR [rax],al
    3a1c:	1c 00                	sbb    al,0x0
    3a1e:	00 00                	add    BYTE PTR [rax],al
    3a20:	c8 04 00 00          	enter  0x4,0x0
    3a24:	28 ed                	sub    ch,ch
    3a26:	ff                   	(bad)  
    3a27:	ff 34 00             	push   QWORD PTR [rax+rax*1]
    3a2a:	00 00                	add    BYTE PTR [rax],al
    3a2c:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    3a2f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3a35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3a36:	0c 07                	or     al,0x7
    3a38:	08 00                	or     BYTE PTR [rax],al
    3a3a:	00 00                	add    BYTE PTR [rax],al
    3a3c:	1c 00                	sbb    al,0x0
    3a3e:	00 00                	add    BYTE PTR [rax],al
    3a40:	e8 04 00 00 3c       	call   3c003a49 <_end+0x3bdfd929>
    3a45:	ed                   	in     eax,dx
    3a46:	ff                   	(bad)  
    3a47:	ff a9 00 00 00 00    	jmp    FWORD PTR [rcx+0x0]
    3a4d:	41 0e                	rex.B (bad) 
    3a4f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3a55:	02 a4 0c 07 08 00 00 	add    ah,BYTE PTR [rsp+rcx*1+0x807]
    3a5c:	1c 00                	sbb    al,0x0
    3a5e:	00 00                	add    BYTE PTR [rax],al
    3a60:	08 05 00 00 c5 ed    	or     BYTE PTR [rip+0xffffffffedc50000],al        # ffffffffedc53a66 <_end+0xffffffffeda4d946>
    3a66:	ff                   	(bad)  
    3a67:	ff d1                	call   rcx
    3a69:	00 00                	add    BYTE PTR [rax],al
    3a6b:	00 00                	add    BYTE PTR [rax],al
    3a6d:	41 0e                	rex.B (bad) 
    3a6f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3a75:	02 cc                	add    cl,ah
    3a77:	0c 07                	or     al,0x7
    3a79:	08 00                	or     BYTE PTR [rax],al
    3a7b:	00 20                	add    BYTE PTR [rax],ah
    3a7d:	00 00                	add    BYTE PTR [rax],al
    3a7f:	00 28                	add    BYTE PTR [rax],ch
    3a81:	05 00 00 76 ee       	add    eax,0xee760000
    3a86:	ff                   	(bad)  
    3a87:	ff 50 00             	call   QWORD PTR [rax+0x0]
    3a8a:	00 00                	add    BYTE PTR [rax],al
    3a8c:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    3a8f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3a95:	47 8c 03             	rex.RXB mov WORD PTR [r11],es
    3a98:	83 04 02 44          	add    DWORD PTR [rdx+rax*1],0x44
    3a9c:	0c 07                	or     al,0x7
    3a9e:	08 00                	or     BYTE PTR [rax],al
    3aa0:	1c 00                	sbb    al,0x0
    3aa2:	00 00                	add    BYTE PTR [rax],al
    3aa4:	4c 05 00 00 a2 ee    	rex.WR add rax,0xffffffffeea20000
    3aaa:	ff                   	(bad)  
    3aab:	ff 15 00 00 00 00    	call   QWORD PTR [rip+0x0]        # 3ab1 <__GNU_EH_FRAME_HDR+0x6fd>
    3ab1:	41 0e                	rex.B (bad) 
    3ab3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3ab9:	50                   	push   rax
    3aba:	0c 07                	or     al,0x7
    3abc:	08 00                	or     BYTE PTR [rax],al
    3abe:	00 00                	add    BYTE PTR [rax],al
    3ac0:	44 00 00             	add    BYTE PTR [rax],r8b
    3ac3:	00 6c 05 00          	add    BYTE PTR [rbp+rax*1+0x0],ch
    3ac7:	00 78 f3             	add    BYTE PTR [rax-0xd],bh
    3aca:	ff                   	(bad)  
    3acb:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
    3ace:	00 00                	add    BYTE PTR [rax],al
    3ad0:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
    3ad3:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    3ad9:	8e 03                	mov    es,WORD PTR [rbx]
    3adb:	45 0e                	rex.RB (bad) 
    3add:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    3ae3:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86304931 <_end+0xffffffff860fe811>
    3ae9:	06                   	(bad)  
    3aea:	48 0e                	rex.W (bad) 
    3aec:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
    3af2:	72 0e                	jb     3b02 <__GNU_EH_FRAME_HDR+0x74e>
    3af4:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    3af7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    3afa:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    3afd:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    3b00:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    3b03:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    3b06:	08 00                	or     BYTE PTR [rax],al
    3b08:	10 00                	adc    BYTE PTR [rax],al
    3b0a:	00 00                	add    BYTE PTR [rax],al
    3b0c:	b4 05                	mov    ah,0x5
    3b0e:	00 00                	add    BYTE PTR [rax],al
    3b10:	a0 f3 ff ff 02 00 00 	movabs al,ds:0x2fffff3
    3b17:	00 00 
    3b19:	00 00                	add    BYTE PTR [rax],al
	...

0000000000003b1c <__FRAME_END__>:
    3b1c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .tdata:

0000000000203bb0 <room_id+0x203bac>:
  203bb0:	ff                   	(bad)  
  203bb1:	ff                   	(bad)  
  203bb2:	ff                   	(bad)  
  203bb3:	ff                   	(bad)  
  203bb4:	ff                   	(bad)  
  203bb5:	ff                   	(bad)  
  203bb6:	ff                   	(bad)  
  203bb7:	ff                   	.byte 0xff

Disassembly of section .tbss:

0000000000203bc0 <tbuf+0x203b80>:
	...

Disassembly of section .init_array:

0000000000203bc0 <__frame_dummy_init_array_entry>:
  203bc0:	c0 12 00             	rcl    BYTE PTR [rdx],0x0
  203bc3:	00 00                	add    BYTE PTR [rax],al
  203bc5:	00 00                	add    BYTE PTR [rax],al
  203bc7:	00 4a 29             	add    BYTE PTR [rdx+0x29],cl
  203bca:	00 00                	add    BYTE PTR [rax],al
  203bcc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000203bd0 <__do_global_dtors_aux_fini_array_entry>:
  203bd0:	80 12 00             	adc    BYTE PTR [rdx],0x0
  203bd3:	00 00                	add    BYTE PTR [rax],al
  203bd5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data.rel.ro:

0000000000203bd8 <_ZTV3You>:
	...
  203be0:	80 3c 20 00          	cmp    BYTE PTR [rax+riz*1],0x0
  203be4:	00 00                	add    BYTE PTR [rax],al
  203be6:	00 00                	add    BYTE PTR [rax],al
  203be8:	ce                   	(bad)  
  203be9:	2b 00                	sub    eax,DWORD PTR [rax]
  203beb:	00 00                	add    BYTE PTR [rax],al
  203bed:	00 00                	add    BYTE PTR [rax],al
  203bef:	00 ee                	add    dh,ch
  203bf1:	2b 00                	sub    eax,DWORD PTR [rax]
  203bf3:	00 00                	add    BYTE PTR [rax],al
  203bf5:	00 00                	add    BYTE PTR [rax],al
  203bf7:	00 0e                	add    BYTE PTR [rsi],cl
  203bf9:	2c 00                	sub    al,0x0
  203bfb:	00 00                	add    BYTE PTR [rax],al
  203bfd:	00 00                	add    BYTE PTR [rax],al
  203bff:	00 1a                	add    BYTE PTR [rdx],bl
  203c01:	2d 00 00 00 00       	sub    eax,0x0
  203c06:	00 00                	add    BYTE PTR [rax],al
  203c08:	5c                   	pop    rsp
  203c09:	2d 00 00 00 00       	sub    eax,0x0
	...

0000000000203c10 <_ZTV12NiceAudience>:
	...
  203c18:	98                   	cwde   
  203c19:	3c 20                	cmp    al,0x20
  203c1b:	00 00                	add    BYTE PTR [rax],al
  203c1d:	00 00                	add    BYTE PTR [rax],al
  203c1f:	00 a6 29 00 00 00    	add    BYTE PTR [rsi+0x29],ah
  203c25:	00 00                	add    BYTE PTR [rax],al
  203c27:	00 b6 29 00 00 00    	add    BYTE PTR [rsi+0x29],dh
  203c2d:	00 00                	add    BYTE PTR [rax],al
  203c2f:	00 22                	add    BYTE PTR [rdx],ah
  203c31:	2a 00                	sub    al,BYTE PTR [rax]
  203c33:	00 00                	add    BYTE PTR [rax],al
  203c35:	00 00                	add    BYTE PTR [rax],al
  203c37:	00 86 2b 00 00 00    	add    BYTE PTR [rsi+0x2b],al
  203c3d:	00 00                	add    BYTE PTR [rax],al
  203c3f:	00 10                	add    BYTE PTR [rax],dl
  203c41:	2a 00                	sub    al,BYTE PTR [rax]
  203c43:	00 00                	add    BYTE PTR [rax],al
  203c45:	00 00                	add    BYTE PTR [rax],al
	...

0000000000203c48 <_ZTV8Audience>:
	...
  203c50:	b0 3c                	mov    al,0x3c
  203c52:	20 00                	and    BYTE PTR [rax],al
  203c54:	00 00                	add    BYTE PTR [rax],al
  203c56:	00 00                	add    BYTE PTR [rax],al
  203c58:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  203c59:	29 00                	sub    DWORD PTR [rax],eax
  203c5b:	00 00                	add    BYTE PTR [rax],al
  203c5d:	00 00                	add    BYTE PTR [rax],al
  203c5f:	00 b6 29 00 00 00    	add    BYTE PTR [rsi+0x29],dh
  203c65:	00 00                	add    BYTE PTR [rax],al
  203c67:	00 c6                	add    dh,al
  203c69:	29 00                	sub    DWORD PTR [rax],eax
  203c6b:	00 00                	add    BYTE PTR [rax],al
  203c6d:	00 00                	add    BYTE PTR [rax],al
  203c6f:	00 00                	add    BYTE PTR [rax],al
  203c71:	2a 00                	sub    al,BYTE PTR [rax]
  203c73:	00 00                	add    BYTE PTR [rax],al
  203c75:	00 00                	add    BYTE PTR [rax],al
  203c77:	00 10                	add    BYTE PTR [rax],dl
  203c79:	2a 00                	sub    al,BYTE PTR [rax]
  203c7b:	00 00                	add    BYTE PTR [rax],al
  203c7d:	00 00                	add    BYTE PTR [rax],al
	...

0000000000203c80 <_ZTI3You>:
	...
  203c88:	90                   	nop
  203c89:	33 00                	xor    eax,DWORD PTR [rax]
  203c8b:	00 00                	add    BYTE PTR [rax],al
  203c8d:	00 00                	add    BYTE PTR [rax],al
  203c8f:	00 98 3c 20 00 00    	add    BYTE PTR [rax+0x203c],bl
  203c95:	00 00                	add    BYTE PTR [rax],al
	...

0000000000203c98 <_ZTI12NiceAudience>:
	...
  203ca0:	98                   	cwde   
  203ca1:	33 00                	xor    eax,DWORD PTR [rax]
  203ca3:	00 00                	add    BYTE PTR [rax],al
  203ca5:	00 00                	add    BYTE PTR [rax],al
  203ca7:	00 b0 3c 20 00 00    	add    BYTE PTR [rax+0x203c],dh
  203cad:	00 00                	add    BYTE PTR [rax],al
	...

0000000000203cb0 <_ZTI8Audience>:
	...
  203cb8:	a8 33                	test   al,0x33
  203cba:	00 00                	add    BYTE PTR [rax],al
  203cbc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000203cc0 <_DYNAMIC>:
  203cc0:	01 00                	add    DWORD PTR [rax],eax
  203cc2:	00 00                	add    BYTE PTR [rax],al
  203cc4:	00 00                	add    BYTE PTR [rax],al
  203cc6:	00 00                	add    BYTE PTR [rax],al
  203cc8:	01 00                	add    DWORD PTR [rax],eax
  203cca:	00 00                	add    BYTE PTR [rax],al
  203ccc:	00 00                	add    BYTE PTR [rax],al
  203cce:	00 00                	add    BYTE PTR [rax],al
  203cd0:	01 00                	add    DWORD PTR [rax],eax
  203cd2:	00 00                	add    BYTE PTR [rax],al
  203cd4:	00 00                	add    BYTE PTR [rax],al
  203cd6:	00 00                	add    BYTE PTR [rax],al
  203cd8:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
  203cde:	00 00                	add    BYTE PTR [rax],al
  203ce0:	01 00                	add    DWORD PTR [rax],eax
  203ce2:	00 00                	add    BYTE PTR [rax],al
  203ce4:	00 00                	add    BYTE PTR [rax],al
  203ce6:	00 00                	add    BYTE PTR [rax],al
  203ce8:	dc 00                	fadd   QWORD PTR [rax]
  203cea:	00 00                	add    BYTE PTR [rax],al
  203cec:	00 00                	add    BYTE PTR [rax],al
  203cee:	00 00                	add    BYTE PTR [rax],al
  203cf0:	0c 00                	or     al,0x0
  203cf2:	00 00                	add    BYTE PTR [rax],al
  203cf4:	00 00                	add    BYTE PTR [rax],al
  203cf6:	00 00                	add    BYTE PTR [rax],al
  203cf8:	b8 0f 00 00 00       	mov    eax,0xf
  203cfd:	00 00                	add    BYTE PTR [rax],al
  203cff:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 203d05 <_DYNAMIC+0x45>
  203d05:	00 00                	add    BYTE PTR [rax],al
  203d07:	00 b4 2e 00 00 00 00 	add    BYTE PTR [rsi+rbp*1+0x0],dh
  203d0e:	00 00                	add    BYTE PTR [rax],al
  203d10:	19 00                	sbb    DWORD PTR [rax],eax
  203d12:	00 00                	add    BYTE PTR [rax],al
  203d14:	00 00                	add    BYTE PTR [rax],al
  203d16:	00 00                	add    BYTE PTR [rax],al
  203d18:	c0 3b 20             	sar    BYTE PTR [rbx],0x20
  203d1b:	00 00                	add    BYTE PTR [rax],al
  203d1d:	00 00                	add    BYTE PTR [rax],al
  203d1f:	00 1b                	add    BYTE PTR [rbx],bl
  203d21:	00 00                	add    BYTE PTR [rax],al
  203d23:	00 00                	add    BYTE PTR [rax],al
  203d25:	00 00                	add    BYTE PTR [rax],al
  203d27:	00 10                	add    BYTE PTR [rax],dl
  203d29:	00 00                	add    BYTE PTR [rax],al
  203d2b:	00 00                	add    BYTE PTR [rax],al
  203d2d:	00 00                	add    BYTE PTR [rax],al
  203d2f:	00 1a                	add    BYTE PTR [rdx],bl
  203d31:	00 00                	add    BYTE PTR [rax],al
  203d33:	00 00                	add    BYTE PTR [rax],al
  203d35:	00 00                	add    BYTE PTR [rax],al
  203d37:	00 d0                	add    al,dl
  203d39:	3b 20                	cmp    esp,DWORD PTR [rax]
  203d3b:	00 00                	add    BYTE PTR [rax],al
  203d3d:	00 00                	add    BYTE PTR [rax],al
  203d3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  203d42:	00 00                	add    BYTE PTR [rax],al
  203d44:	00 00                	add    BYTE PTR [rax],al
  203d46:	00 00                	add    BYTE PTR [rax],al
  203d48:	08 00                	or     BYTE PTR [rax],al
  203d4a:	00 00                	add    BYTE PTR [rax],al
  203d4c:	00 00                	add    BYTE PTR [rax],al
  203d4e:	00 00                	add    BYTE PTR [rax],al
  203d50:	f5                   	cmc    
  203d51:	fe                   	(bad)  
  203d52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  203d55:	00 00                	add    BYTE PTR [rax],al
  203d57:	00 d0                	add    al,dl
  203d59:	02 00                	add    al,BYTE PTR [rax]
  203d5b:	00 00                	add    BYTE PTR [rax],al
  203d5d:	00 00                	add    BYTE PTR [rax],al
  203d5f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 203d65 <_DYNAMIC+0xa5>
  203d65:	00 00                	add    BYTE PTR [rax],al
  203d67:	00 a0 06 00 00 00    	add    BYTE PTR [rax+0x6],ah
  203d6d:	00 00                	add    BYTE PTR [rax],al
  203d6f:	00 06                	add    BYTE PTR [rsi],al
  203d71:	00 00                	add    BYTE PTR [rax],al
  203d73:	00 00                	add    BYTE PTR [rax],al
  203d75:	00 00                	add    BYTE PTR [rax],al
  203d77:	00 f8                	add    al,bh
  203d79:	02 00                	add    al,BYTE PTR [rax]
  203d7b:	00 00                	add    BYTE PTR [rax],al
  203d7d:	00 00                	add    BYTE PTR [rax],al
  203d7f:	00 0a                	add    BYTE PTR [rdx],cl
  203d81:	00 00                	add    BYTE PTR [rax],al
  203d83:	00 00                	add    BYTE PTR [rax],al
  203d85:	00 00                	add    BYTE PTR [rax],al
  203d87:	00 cc                	add    ah,cl
  203d89:	01 00                	add    DWORD PTR [rax],eax
  203d8b:	00 00                	add    BYTE PTR [rax],al
  203d8d:	00 00                	add    BYTE PTR [rax],al
  203d8f:	00 0b                	add    BYTE PTR [rbx],cl
  203d91:	00 00                	add    BYTE PTR [rax],al
  203d93:	00 00                	add    BYTE PTR [rax],al
  203d95:	00 00                	add    BYTE PTR [rax],al
  203d97:	00 18                	add    BYTE PTR [rax],bl
  203d99:	00 00                	add    BYTE PTR [rax],al
  203d9b:	00 00                	add    BYTE PTR [rax],al
  203d9d:	00 00                	add    BYTE PTR [rax],al
  203d9f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 203da5 <_DYNAMIC+0xe5>
	...
  203dad:	00 00                	add    BYTE PTR [rax],al
  203daf:	00 03                	add    BYTE PTR [rbx],al
  203db1:	00 00                	add    BYTE PTR [rax],al
  203db3:	00 00                	add    BYTE PTR [rax],al
  203db5:	00 00                	add    BYTE PTR [rax],al
  203db7:	00 d0                	add    al,dl
  203db9:	3e 20 00             	and    BYTE PTR ds:[rax],al
  203dbc:	00 00                	add    BYTE PTR [rax],al
  203dbe:	00 00                	add    BYTE PTR [rax],al
  203dc0:	02 00                	add    al,BYTE PTR [rax]
  203dc2:	00 00                	add    BYTE PTR [rax],al
  203dc4:	00 00                	add    BYTE PTR [rax],al
  203dc6:	00 00                	add    BYTE PTR [rax],al
  203dc8:	b8 02 00 00 00       	mov    eax,0x2
  203dcd:	00 00                	add    BYTE PTR [rax],al
  203dcf:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  203dd2:	00 00                	add    BYTE PTR [rax],al
  203dd4:	00 00                	add    BYTE PTR [rax],al
  203dd6:	00 00                	add    BYTE PTR [rax],al
  203dd8:	07                   	(bad)  
  203dd9:	00 00                	add    BYTE PTR [rax],al
  203ddb:	00 00                	add    BYTE PTR [rax],al
  203ddd:	00 00                	add    BYTE PTR [rax],al
  203ddf:	00 17                	add    BYTE PTR [rdi],dl
	...
  203de9:	0d 00 00 00 00       	or     eax,0x0
  203dee:	00 00                	add    BYTE PTR [rax],al
  203df0:	07                   	(bad)  
  203df1:	00 00                	add    BYTE PTR [rax],al
  203df3:	00 00                	add    BYTE PTR [rax],al
  203df5:	00 00                	add    BYTE PTR [rax],al
  203df7:	00 40 09             	add    BYTE PTR [rax+0x9],al
  203dfa:	00 00                	add    BYTE PTR [rax],al
  203dfc:	00 00                	add    BYTE PTR [rax],al
  203dfe:	00 00                	add    BYTE PTR [rax],al
  203e00:	08 00                	or     BYTE PTR [rax],al
  203e02:	00 00                	add    BYTE PTR [rax],al
  203e04:	00 00                	add    BYTE PTR [rax],al
  203e06:	00 00                	add    BYTE PTR [rax],al
  203e08:	c0 03 00             	rol    BYTE PTR [rbx],0x0
  203e0b:	00 00                	add    BYTE PTR [rax],al
  203e0d:	00 00                	add    BYTE PTR [rax],al
  203e0f:	00 09                	add    BYTE PTR [rcx],cl
  203e11:	00 00                	add    BYTE PTR [rax],al
  203e13:	00 00                	add    BYTE PTR [rax],al
  203e15:	00 00                	add    BYTE PTR [rax],al
  203e17:	00 18                	add    BYTE PTR [rax],bl
  203e19:	00 00                	add    BYTE PTR [rax],al
  203e1b:	00 00                	add    BYTE PTR [rax],al
  203e1d:	00 00                	add    BYTE PTR [rax],al
  203e1f:	00 1e                	add    BYTE PTR [rsi],bl
  203e21:	00 00                	add    BYTE PTR [rax],al
  203e23:	00 00                	add    BYTE PTR [rax],al
  203e25:	00 00                	add    BYTE PTR [rax],al
  203e27:	00 08                	add    BYTE PTR [rax],cl
  203e29:	00 00                	add    BYTE PTR [rax],al
  203e2b:	00 00                	add    BYTE PTR [rax],al
  203e2d:	00 00                	add    BYTE PTR [rax],al
  203e2f:	00 fb                	add    bl,bh
  203e31:	ff                   	(bad)  
  203e32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  203e35:	00 00                	add    BYTE PTR [rax],al
  203e37:	00 01                	add    BYTE PTR [rcx],al
  203e39:	00 00                	add    BYTE PTR [rax],al
  203e3b:	08 00                	or     BYTE PTR [rax],al
  203e3d:	00 00                	add    BYTE PTR [rax],al
  203e3f:	00 fe                	add    dh,bh
  203e41:	ff                   	(bad)  
  203e42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  203e45:	00 00                	add    BYTE PTR [rax],al
  203e47:	00 c0                	add    al,al
  203e49:	08 00                	or     BYTE PTR [rax],al
  203e4b:	00 00                	add    BYTE PTR [rax],al
  203e4d:	00 00                	add    BYTE PTR [rax],al
  203e4f:	00 ff                	add    bh,bh
  203e51:	ff                   	(bad)  
  203e52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  203e55:	00 00                	add    BYTE PTR [rax],al
  203e57:	00 03                	add    BYTE PTR [rbx],al
  203e59:	00 00                	add    BYTE PTR [rax],al
  203e5b:	00 00                	add    BYTE PTR [rax],al
  203e5d:	00 00                	add    BYTE PTR [rax],al
  203e5f:	00 f0                	add    al,dh
  203e61:	ff                   	(bad)  
  203e62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  203e65:	00 00                	add    BYTE PTR [rax],al
  203e67:	00 6c 08 00          	add    BYTE PTR [rax+rcx*1+0x0],ch
  203e6b:	00 00                	add    BYTE PTR [rax],al
  203e6d:	00 00                	add    BYTE PTR [rax],al
  203e6f:	00 f9                	add    cl,bh
  203e71:	ff                   	(bad)  
  203e72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  203e75:	00 00                	add    BYTE PTR [rax],al
  203e77:	00 1e                	add    BYTE PTR [rsi],bl
	...

Disassembly of section .got:

0000000000203ed0 <_GLOBAL_OFFSET_TABLE_>:
  203ed0:	c0 3c 20 00          	sar    BYTE PTR [rax+riz*1],0x0
	...
  203ee8:	e6 0f                	out    0xf,al
  203eea:	00 00                	add    BYTE PTR [rax],al
  203eec:	00 00                	add    BYTE PTR [rax],al
  203eee:	00 00                	add    BYTE PTR [rax],al
  203ef0:	f6                   	(bad)  
  203ef1:	0f 00 00             	sldt   WORD PTR [rax]
  203ef4:	00 00                	add    BYTE PTR [rax],al
  203ef6:	00 00                	add    BYTE PTR [rax],al
  203ef8:	06                   	(bad)  
  203ef9:	10 00                	adc    BYTE PTR [rax],al
  203efb:	00 00                	add    BYTE PTR [rax],al
  203efd:	00 00                	add    BYTE PTR [rax],al
  203eff:	00 16                	add    BYTE PTR [rsi],dl
  203f01:	10 00                	adc    BYTE PTR [rax],al
  203f03:	00 00                	add    BYTE PTR [rax],al
  203f05:	00 00                	add    BYTE PTR [rax],al
  203f07:	00 26                	add    BYTE PTR [rsi],ah
  203f09:	10 00                	adc    BYTE PTR [rax],al
  203f0b:	00 00                	add    BYTE PTR [rax],al
  203f0d:	00 00                	add    BYTE PTR [rax],al
  203f0f:	00 36                	add    BYTE PTR [rsi],dh
  203f11:	10 00                	adc    BYTE PTR [rax],al
  203f13:	00 00                	add    BYTE PTR [rax],al
  203f15:	00 00                	add    BYTE PTR [rax],al
  203f17:	00 46 10             	add    BYTE PTR [rsi+0x10],al
  203f1a:	00 00                	add    BYTE PTR [rax],al
  203f1c:	00 00                	add    BYTE PTR [rax],al
  203f1e:	00 00                	add    BYTE PTR [rax],al
  203f20:	56                   	push   rsi
  203f21:	10 00                	adc    BYTE PTR [rax],al
  203f23:	00 00                	add    BYTE PTR [rax],al
  203f25:	00 00                	add    BYTE PTR [rax],al
  203f27:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
  203f2a:	00 00                	add    BYTE PTR [rax],al
  203f2c:	00 00                	add    BYTE PTR [rax],al
  203f2e:	00 00                	add    BYTE PTR [rax],al
  203f30:	76 10                	jbe    203f42 <_GLOBAL_OFFSET_TABLE_+0x72>
  203f32:	00 00                	add    BYTE PTR [rax],al
  203f34:	00 00                	add    BYTE PTR [rax],al
  203f36:	00 00                	add    BYTE PTR [rax],al
  203f38:	86 10                	xchg   BYTE PTR [rax],dl
  203f3a:	00 00                	add    BYTE PTR [rax],al
  203f3c:	00 00                	add    BYTE PTR [rax],al
  203f3e:	00 00                	add    BYTE PTR [rax],al
  203f40:	96                   	xchg   esi,eax
  203f41:	10 00                	adc    BYTE PTR [rax],al
  203f43:	00 00                	add    BYTE PTR [rax],al
  203f45:	00 00                	add    BYTE PTR [rax],al
  203f47:	00 a6 10 00 00 00    	add    BYTE PTR [rsi+0x10],ah
  203f4d:	00 00                	add    BYTE PTR [rax],al
  203f4f:	00 b6 10 00 00 00    	add    BYTE PTR [rsi+0x10],dh
  203f55:	00 00                	add    BYTE PTR [rax],al
  203f57:	00 c6                	add    dh,al
  203f59:	10 00                	adc    BYTE PTR [rax],al
  203f5b:	00 00                	add    BYTE PTR [rax],al
  203f5d:	00 00                	add    BYTE PTR [rax],al
  203f5f:	00 d6                	add    dh,dl
  203f61:	10 00                	adc    BYTE PTR [rax],al
  203f63:	00 00                	add    BYTE PTR [rax],al
  203f65:	00 00                	add    BYTE PTR [rax],al
  203f67:	00 e6                	add    dh,ah
  203f69:	10 00                	adc    BYTE PTR [rax],al
  203f6b:	00 00                	add    BYTE PTR [rax],al
  203f6d:	00 00                	add    BYTE PTR [rax],al
  203f6f:	00 f6                	add    dh,dh
  203f71:	10 00                	adc    BYTE PTR [rax],al
  203f73:	00 00                	add    BYTE PTR [rax],al
  203f75:	00 00                	add    BYTE PTR [rax],al
  203f77:	00 06                	add    BYTE PTR [rsi],al
  203f79:	11 00                	adc    DWORD PTR [rax],eax
  203f7b:	00 00                	add    BYTE PTR [rax],al
  203f7d:	00 00                	add    BYTE PTR [rax],al
  203f7f:	00 16                	add    BYTE PTR [rsi],dl
  203f81:	11 00                	adc    DWORD PTR [rax],eax
  203f83:	00 00                	add    BYTE PTR [rax],al
  203f85:	00 00                	add    BYTE PTR [rax],al
  203f87:	00 26                	add    BYTE PTR [rsi],ah
  203f89:	11 00                	adc    DWORD PTR [rax],eax
  203f8b:	00 00                	add    BYTE PTR [rax],al
  203f8d:	00 00                	add    BYTE PTR [rax],al
  203f8f:	00 36                	add    BYTE PTR [rsi],dh
  203f91:	11 00                	adc    DWORD PTR [rax],eax
  203f93:	00 00                	add    BYTE PTR [rax],al
  203f95:	00 00                	add    BYTE PTR [rax],al
  203f97:	00 46 11             	add    BYTE PTR [rsi+0x11],al
  203f9a:	00 00                	add    BYTE PTR [rax],al
  203f9c:	00 00                	add    BYTE PTR [rax],al
  203f9e:	00 00                	add    BYTE PTR [rax],al
  203fa0:	56                   	push   rsi
  203fa1:	11 00                	adc    DWORD PTR [rax],eax
  203fa3:	00 00                	add    BYTE PTR [rax],al
  203fa5:	00 00                	add    BYTE PTR [rax],al
  203fa7:	00 66 11             	add    BYTE PTR [rsi+0x11],ah
  203faa:	00 00                	add    BYTE PTR [rax],al
  203fac:	00 00                	add    BYTE PTR [rax],al
  203fae:	00 00                	add    BYTE PTR [rax],al
  203fb0:	76 11                	jbe    203fc3 <_GLOBAL_OFFSET_TABLE_+0xf3>
  203fb2:	00 00                	add    BYTE PTR [rax],al
  203fb4:	00 00                	add    BYTE PTR [rax],al
  203fb6:	00 00                	add    BYTE PTR [rax],al
  203fb8:	86 11                	xchg   BYTE PTR [rcx],dl
  203fba:	00 00                	add    BYTE PTR [rax],al
  203fbc:	00 00                	add    BYTE PTR [rax],al
  203fbe:	00 00                	add    BYTE PTR [rax],al
  203fc0:	96                   	xchg   esi,eax
  203fc1:	11 00                	adc    DWORD PTR [rax],eax
  203fc3:	00 00                	add    BYTE PTR [rax],al
  203fc5:	00 00                	add    BYTE PTR [rax],al
  203fc7:	00 a6 11 00 00 00    	add    BYTE PTR [rsi+0x11],ah
	...

Disassembly of section .data:

0000000000204000 <__data_start>:
	...

0000000000204008 <__dso_handle>:
  204008:	08 40 20             	or     BYTE PTR [rax+0x20],al
  20400b:	00 00                	add    BYTE PTR [rax],al
  20400d:	00 00                	add    BYTE PTR [rax],al
	...

0000000000204010 <_ZZN12NiceAudience3askEvE3ans>:
  204010:	00 31                	add    BYTE PTR [rcx],dh
  204012:	00 00                	add    BYTE PTR [rax],al
  204014:	00 00                	add    BYTE PTR [rax],al
  204016:	00 00                	add    BYTE PTR [rax],al
  204018:	30 31                	xor    BYTE PTR [rcx],dh
  20401a:	00 00                	add    BYTE PTR [rax],al
  20401c:	00 00                	add    BYTE PTR [rax],al
  20401e:	00 00                	add    BYTE PTR [rax],al
  204020:	5a                   	pop    rdx
  204021:	31 00                	xor    DWORD PTR [rax],eax
  204023:	00 00                	add    BYTE PTR [rax],al
  204025:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000204040 <stdout@@GLIBC_2.2.5>:
	...

0000000000204050 <stdin@@GLIBC_2.2.5>:
	...

0000000000204058 <completed.7696>:
	...

0000000000204060 <papers>:
	...

0000000000204150 <matching>:
	...

000000000020415c <cur_time>:
  20415c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000204160 <buf>:
	...

00000000002041e0 <aud>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <tbuf+0x38>
   a:	74 75                	je     81 <tbuf+0x41>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 62753749 <_end+0x6254d629>
  17:	75 6e                	jne    87 <tbuf+0x47>
  19:	74 75                	je     90 <tbuf+0x50>
  1b:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 37                	and    BYTE PTR [rdi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al
