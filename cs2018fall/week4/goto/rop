Gadgets information
============================================================
0x0000000000473681 : adc al, 0x24 ; call 0x46f984
0x00000000004831c1 : adc al, 0x24 ; call rax
0x0000000000461464 : adc al, 0x24 ; call rcx
0x000000000040a02a : adc al, 0x24 ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000045d3f1 : adc al, 0x89 ; and al, 0x18 ; mov dword ptr [rsp + 0x1c], edx ; ret
0x000000000040ac82 : adc al, 0xf6 ; ret
0x00000000004462c6 : adc al, 0xf6 ; ret 0x7402
0x0000000000474c3b : adc al, 0xf6 ; ret 0xf01
0x0000000000455bd9 : adc al, 0xf7 ; ret 3
0x000000000044b099 : adc al, byte ptr [rax] ; add bl, ch ; ret 0xcccc
0x000000000040f9da : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000413eed : adc al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0x000000000040fa92 : adc al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c10
0x0000000000417d7f : adc al, byte ptr [rax] ; ret
0x000000000047148d : adc al, ch ; int 0x80
0x000000000047bb3d : adc al, ch ; popfq ; ret 0xffff
0x0000000000401c07 : adc al, ch ; ret
0x0000000000408858 : adc al, ch ; ret 0
0x000000000047b918 : adc al, ch ; ret 0xf930
0x000000000047c368 : adc al, ch ; ret 0xffc2
0x0000000000475f26 : adc bh, bh ; ret 0x1089
0x00000000004751b5 : adc bh, dh ; ret 7
0x000000000042ed09 : adc bl, ch ; ret 0x8948
0x00000000004560ac : adc byte ptr [r8 - 0x77], cl ; ret 0x8948
0x000000000042a81a : adc byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x7f] ; ret 0x400
0x000000000043642b : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000453137 : adc byte ptr [rax + 0x39], cl ; ret 0x8874
0x000000000044fc78 : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000434206 : adc byte ptr [rax - 0x75], cl ; jl 0x434237 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000434360 : adc byte ptr [rax - 0x75], cl ; jl 0x434391 ; or byte ptr [rax + 0x39], cl ; ret
0x000000000044169d : adc byte ptr [rax - 0x75], cl ; sub al, 0x24 ; add rsp, 8 ; ret
0x00000000004011a4 : adc byte ptr [rax - 0x77], cl ; and al, 0x18 ; ret
0x00000000004051ee : adc byte ptr [rax - 0x77], cl ; and al, 0x20 ; ret
0x0000000000460b34 : adc byte ptr [rax - 0x77], cl ; or al, 0x24 ; mov rcx, qword ptr [rdx] ; call rcx
0x00000000004858b1 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000042fa5a : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004638e7 : adc byte ptr [rax - 0x77], cl ; ret 0xd348
0x000000000042c197 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004415ce : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rax*2 + 0x48], 0x89 ; ret 0x2ae9
0x00000000004561c0 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rbx*8 + 0x48], cl ; mov eax, dword ptr [rdx] ; call rax
0x000000000046319f : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000463488 : adc byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000466f8f : adc byte ptr [rax - 0x7d], cl ; ret 0x48c1
0x000000000043caaa : adc byte ptr [rax - 1], cl ; ret
0x0000000000404e04 : adc byte ptr [rax - 1], cl ; ret 0x3948
0x0000000000468f1e : adc byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000408008 : adc byte ptr [rax - 1], cl ; ret 0xb60f
0x0000000000433be9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x000000000040d3ee : adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x40d3bb
0x0000000000429921 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x392c2454], cl ; ret 0x2075
0x000000000044d130 : adc byte ptr [rax], al ; add rsp, 0x100008 ; ret
0x000000000044d0f7 : adc byte ptr [rax], al ; call qword ptr [rdx]
0x0000000000424ea2 : adc byte ptr [rax], al ; jmp 0x424e2d
0x000000000044e0da : adc byte ptr [rax], al ; movq qword ptr [rsp + 0x18], xmm0 ; ret
0x000000000040271c : adc byte ptr [rax], al ; ret
0x0000000000415ded : adc byte ptr [rax], bl ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000041fb62 : adc byte ptr [rbp + 0x29], cl ; ret 0xc148
0x000000000044bb93 : adc byte ptr [rbx + rax*8], bh ; mov byte ptr [rsp + 0x10], 0x3e ; ret
0x0000000000434c7e : adc byte ptr [rcx + 0x39], cl ; ret 0xe075
0x000000000042beae : adc byte ptr [rcx + rax], 0 ; add byte ptr [rcx], al ; ret
0x000000000044bb87 : adc byte ptr [rcx], ah ; ret
0x000000000045db1d : adc byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000040270e : adc byte ptr [rcx], al ; ret
0x0000000000422524 : adc byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x0000000000453569 : adc byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8348
0x000000000044ec88 : adc byte ptr [rdi], cl ; adc dword ptr [rdi], eax ; add rdi, 0x10 ; ret
0x000000000044e638 : adc byte ptr [rdi], cl ; mov esp, 0x49ac74d2 ; mov dword ptr [rax], edx ; ret
0x000000000041ab1a : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8eeb
0x00000000004337c6 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000471ab1 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000452af4 : adc byte ptr [rdx], dl ; add byte ptr [rax], al ; add al, ch ; ret 0xfb36
0x0000000000453df4 : adc byte ptr [rip - 0x18000000], al ; ret 0xfb23
0x000000000044bb99 : adc byte ptr [rsi], bh ; ret
0x00000000004301f6 : adc cl, byte ptr [rax - 1] ; ret 0x8948
0x0000000000410d3a : adc cl, byte ptr [rcx - 0x3f] ; call 0xffffffffc2c45551
0x0000000000411249 : adc cl, byte ptr [rcx - 9] ; ret
0x000000000047b9bc : adc dh, al ; and al, 0x18 ; add al, ch ; ret 0xffff
0x000000000040b4a4 : adc dh, dh ; ret 0x7501
0x000000000040e22d : adc dl, al ; jmp 0x40e202
0x00000000004175b8 : adc dword ptr [rax + 0x39], ecx ; ret 0x3475
0x00000000004027ff : adc dword ptr [rax + 0x39], ecx ; ret 0xa75
0x000000000046c3db : adc dword ptr [rax - 0x73], ecx ; pop rax ; dec dword ptr [rax + 0x39] ; ret
0x0000000000466fa7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4840
0x0000000000428d81 : adc dword ptr [rax - 0x7f], ecx ; ret 0x370
0x0000000000457522 : adc dword ptr [rax - 0x80], eax ; inc byte ptr [rax - 0xb7fa8d] ; ret 0xdfeb
0x0000000000409433 : adc dword ptr [rax - 1], ecx ; add ecx, dword ptr [rcx - 0x77] ; ret 0xcde9
0x000000000045fee4 : adc dword ptr [rax - 9], ecx ; ret 0xfff8
0x000000000040eef7 : adc dword ptr [rax - 9], ecx ; ror dword ptr [rax - 0x77], 1 ; ret
0x00000000004258f7 : adc dword ptr [rax], eax ; add bl, ch ; ret 0x8948
0x000000000042b012 : adc dword ptr [rax], eax ; mov qword ptr [rsp], rcx ; mov rax, qword ptr [rdx] ; call rax
0x0000000000420354 : adc dword ptr [rax], eax ; ret
0x000000000041417d : adc dword ptr [rbx + 0x48], eax ; ret
0x000000000044e8f9 : adc dword ptr [rdi + 0x30], eax ; lea rdi, qword ptr [rdi + 0x40] ; ret
0x000000000044ec8a : adc dword ptr [rdi], eax ; add rdi, 0x10 ; ret
0x00000000004048a9 : adc dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000434449 : adc dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd284
0x00000000004061b8 : adc dword ptr [rsp + 0x10], eax ; ret
0x0000000000462ac2 : adc dword ptr [rsp + 0x18], eax ; ret
0x00000000004145d4 : adc dword ptr [rsp], eax ; call 0x426da9
0x000000000041916f : adc eax, 0x84001266 ; add cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000042b8af : adc eax, 0x9d984 ; call rax
0x000000000042b859 : adc eax, 0x9d9da ; call rax
0x0000000000427a0b : adc eax, 0xa1780 ; call rax
0x00000000004279c3 : adc eax, 0xa17c0 ; call rax
0x000000000042769e : adc eax, 0xa1abd ; call rcx
0x000000000042762c : adc eax, 0xa1b2f ; call rax
0x000000000040630f : adc eax, 0xaf0f4c00 ; ret 0x9deb
0x0000000000409855 : adc eax, 0xe8000000 ; ret 0x1c8
0x0000000000410e6e : adc eax, 0xe8c14900 ; or byte ptr [rax - 0x7d], cl ; ret 0xebfe
0x000000000040d025 : adc eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043b13c : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x427396
0x000000000044e199 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; mov byte ptr [rsp + 0x18], 1 ; ret
0x0000000000427917 : adc eax, dword ptr [rax] ; call 0x413b74
0x0000000000416006 : adc eax, dword ptr [rcx] ; add al, ch ; ret 0x10a
0x000000000042b67f : adc ecx, dword ptr [rax - 1] ; ret 0x8948
0x000000000040935e : adc ecx, dword ptr [rax - 1] ; ret 0xb60f
0x000000000040967f : adc ecx, dword ptr [rax - 1] ; ret 0xf44
0x0000000000455bd5 : adc ecx, dword ptr [rcx - 0x8ebdbac] ; ret 3
0x0000000000455d5b : adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000448edd : add ah, byte ptr [rsi - 9] ; ret 1
0x000000000048191e : add al, 0 ; add byte ptr [rax - 0x75], cl ; pop rdx ; and byte ptr [rax + 0x39], cl ; ret
0x00000000004070bd : add al, 0 ; add byte ptr [rcx - 1], cl ; ret 0x8349
0x000000000044cf90 : add al, 0 ; add rsp, 0x40008 ; ret
0x000000000044cf57 : add al, 0 ; call qword ptr [rdx]
0x0000000000461ba6 : add al, 0 ; mov qword ptr [rsp], rax ; call 0x40de58
0x000000000044cf97 : add al, 0 ; ret
0x000000000046604f : add al, 0x11 ; xor byte ptr [rax - 1], cl ; ret 0x3948
0x000000000043de4d : add al, 0x1a ; mov dword ptr [rsp + 8], eax ; ret
0x00000000004025e9 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x42e838
0x0000000000454d23 : add al, 0x24 ; call 0x401004
0x0000000000461baa : add al, 0x24 ; call 0x40de54
0x000000000040e6b0 : add al, 0x24 ; call 0x41a8e4
0x0000000000418ceb : add al, 0x24 ; call 0x41d108
0x00000000004145d5 : add al, 0x24 ; call 0x426da8
0x000000000044a99f : add al, 0x24 ; call 0x4271d9
0x000000000041af4c : add al, 0x24 ; call 0x427244
0x0000000000437012 : add al, 0x24 ; call 0x427248
0x00000000004202c2 : add al, 0x24 ; call 0x427358
0x000000000045d6db : add al, 0x24 ; call rax
0x0000000000456aa2 : add al, 0x24 ; call rbx
0x00000000004256fd : add al, 0x24 ; call rcx
0x0000000000479651 : add al, 0x24 ; mov qword ptr [rsp + 8], rdi ; call 0x425949
0x0000000000427798 : add al, 0x24 ; mov rcx, qword ptr [rdx] ; call rcx
0x0000000000474c35 : add al, 0x3e ; sub dword ptr [rdi], ecx ; mov dh, 0x50 ; adc al, 0xf6 ; ret 0xf01
0x000000000044d611 : add al, 0x48 ; add esp, 0x4000008 ; ret
0x00000000004100c4 : add al, 0x48 ; dec ecx ; cmp rdx, rax ; jb 0x4100c2 ; ret
0x0000000000410164 : add al, 0x48 ; dec ecx ; cmp rdx, rax ; jb 0x410162 ; ret
0x000000000044f03d : add al, 0x72 ; add eax, 0x789068b ; ret
0x000000000043a297 : add al, 0xff ; ret
0x00000000004344d2 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048fbf0 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000040727b : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; sbb cl, byte ptr [rax - 1] ; ret
0x0000000000405b0a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044908c : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8944
0x0000000000444bd5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000409e7f : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0xf44
0x000000000041b0dd : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x427396
0x00000000004748c8 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x39], cl ; ret 0x870f
0x000000000046736f : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x294d
0x0000000000443072 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000467393 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004300c7 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8348
0x000000000041036f : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; xor cl, byte ptr [rax - 1] ; ret 0x8b9
0x0000000000475227 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x5a ; adc al, 0xf6 ; ret
0x000000000044cec0 : add al, byte ptr [rax] ; add rsp, 0x20008 ; ret
0x000000000044ce87 : add al, byte ptr [rax] ; call qword ptr [rdx]
0x00000000004285f3 : add al, byte ptr [rax] ; jmp 0x4284d8
0x000000000044cec7 : add al, byte ptr [rax] ; ret
0x000000000042628b : add al, ch ; call qword ptr [rax]
0x0000000000439d4d : add al, ch ; int 0xc3
0x0000000000486a54 : add al, ch ; jbe 0x486adc ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000004145db : add al, ch ; jmp qword ptr [rsi]
0x000000000048dbdb : add al, ch ; jmp rsi
0x000000000044baa0 : add al, ch ; jp 0x44ba53 ; std ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x000000000044b139 : add al, ch ; push rcx ; ret 0xfffd
0x0000000000427918 : add al, ch ; push rdx ; ret 0xfffe
0x000000000040c1c7 : add al, ch ; ret
0x0000000000416008 : add al, ch ; ret 0x10a
0x0000000000438918 : add al, ch ; ret 0x16d
0x000000000040f5c8 : add al, ch ; ret 0x17d
0x0000000000409858 : add al, ch ; ret 0x1c8
0x0000000000429c98 : add al, ch ; ret 0x25b
0x00000000004202c8 : add al, ch ; ret 0x69
0x000000000045bde8 : add al, ch ; ret 0xfada
0x0000000000453df8 : add al, ch ; ret 0xfb23
0x0000000000452af8 : add al, ch ; ret 0xfb36
0x000000000045f948 : add al, ch ; ret 0xff4b
0x0000000000450f88 : add al, ch ; ret 0xffd1
0x000000000043b13f : add al, ch ; ret 0xfffe
0x000000000047b9c1 : add al, ch ; ret 0xffff
0x00000000004258f4 : add al, ch ; salc ; adc dword ptr [rax], eax ; add bl, ch ; ret 0x8948
0x0000000000428abf : add al, ch ; sti ; ret 0xfffd
0x000000000041b0e0 : add al, ch ; stosb byte ptr [rdi], al ; ret 0
0x000000000042d211 : add al, ch ; test eax, 0xeb000153 ; ret 0x8948
0x0000000000428e65 : add al, ch ; xchg eax, ebp ; ret
0x0000000000433347 : add al, ch ; xchg eax, ebx ; ret
0x000000000041aff3 : add al, ch ; xchg eax, edi ; ret
0x000000000040cbc5 : add al, dh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000433522 : add bh, bh ; ret
0x000000000040c28b : add bh, bh ; ret 0x9189
0x000000000046d6a5 : add bh, byte ptr [rbx - 0x1a] ; mov byte ptr [rsp + 0x18], 0 ; ret
0x0000000000453586 : add bh, byte ptr [rbx - 0x1b] ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000044c010 : add bh, dh ; ret
0x000000000044bf8a : add bh, dh ; ret 0
0x0000000000475c68 : add bh, dh ; ret 7
0x000000000044866f : add bl, al ; call 0x424954
0x0000000000464182 : add bl, al ; call 0x44c378
0x000000000044bb8e : add bl, al ; mov byte ptr [rsp + 0x10], 0x3c ; ret
0x00000000004505f7 : add bl, al ; mov byte ptr [rsp + 0x18], 1 ; ret
0x000000000040d3eb : add bl, al ; mov ecx, 0x10 ; jmp 0x40d3be
0x000000000046e0af : add bl, al ; mov r8, rdx ; jmp 0x46e07f
0x000000000044c2c1 : add bl, al ; mov rdx, rdi ; mov rdi, qword ptr [rdi] ; jmp rdi
0x00000000004893a9 : add bl, ch ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x0000000000416fe7 : add bl, ch ; lea ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000043ecc3 : add bl, ch ; mov cs, word ptr [rax - 0x77] ; ret 0x8948
0x000000000042a93c : add bl, ch ; mov edx, 0x48018b48 ; mov edx, ecx ; call rax
0x0000000000422f51 : add bl, ch ; out 0x48, al ; mov dword ptr [rsp + 0x18], ecx ; ret
0x000000000040e6ab : add bl, ch ; pushfq ; mov qword ptr [rsp], rax ; call 0x41a8e9
0x000000000041c17b : add bl, ch ; ret
0x000000000040d3f1 : add bl, ch ; ret 0x158b
0x00000000004258f9 : add bl, ch ; ret 0x8948
0x000000000042d4a1 : add bl, ch ; ret 0x8d48
0x0000000000422c9b : add bl, ch ; ret 0xcccc
0x00000000004667a4 : add bl, ch ; ret 0xd231
0x00000000004101d5 : add bl, dl ; jrcxz 0x41016b ; push rbx ; jmp qword ptr [rcx]
0x000000000041aa85 : add bl, dl ; loop 0x41aa13 ; stc ; and byte ptr [rcx], bl ; jmp qword ptr [rcx]
0x0000000000438ee1 : add bl, dl ; loopne 0x438ef2 ; ret
0x0000000000401163 : add byte ptr [r15], r9b ; xchg eax, esp ; and al, 0x20 ; ret
0x0000000000406c70 : add byte ptr [rax + 0x21], cl ; ret
0x0000000000468a9d : add byte ptr [rax + 0x29], cl ; ret 0x8548
0x000000000040d425 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000043a6ca : add byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000040593a : add byte ptr [rax + 0x39], cl ; ret
0x000000000046f4d3 : add byte ptr [rax + 0x39], cl ; ret 0x1074
0x0000000000442607 : add byte ptr [rax + 0x39], cl ; ret 0x4e75
0x000000000046eaa2 : add byte ptr [rax + 0x39], cl ; ret 0x4f75
0x000000000048f638 : add byte ptr [rax + 0x39], cl ; ret 0x7275
0x0000000000405520 : add byte ptr [rax + 0x39], cl ; ret 0x7975
0x0000000000471f89 : add byte ptr [rax + 0x39], cl ; ret 0x7c75
0x000000000047440d : add byte ptr [rax + 0x39], cl ; ret 0x7e7d
0x000000000040f8dd : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000476c69 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000410875 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004052c9 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048fbf2 : add byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000043d8a8 : add byte ptr [rax + 0x39], cl ; ret 0x873
0x0000000000431b90 : add byte ptr [rax + 0x39], cl ; ret 0x8c0f
0x0000000000463354 : add byte ptr [rax + 0x39], cl ; ret 0x8d0f
0x0000000000413352 : add byte ptr [rax + 0x39], cl ; ret 0x9c77
0x0000000000413322 : add byte ptr [rax + 0x39], cl ; ret 0xc77
0x000000000042aa7f : add byte ptr [rax + 0x39], cl ; ret 0xe875
0x0000000000489245 : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, esp ; ret 0x850f
0x000000000044d950 : add byte ptr [rax + 0x48], al ; add esp, 0x40000008 ; ret
0x000000000044fe31 : add byte ptr [rax + 0x48], bh ; syscall ; ret
0x0000000000430e84 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 0x39], 1 ; ret 0x870f
0x00000000004142ca : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x570f
0x0000000000426973 : add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000047820f : add byte ptr [rax + 9], cl ; fimul dword ptr [rax - 9] ; ret 0x60
0x0000000000432e3a : add byte ptr [rax + rax - 0x1bf276b8], al ; ret
0x000000000044cf56 : add byte ptr [rax + rax], al ; call qword ptr [rdx]
0x000000000044cf96 : add byte ptr [rax + rax], al ; ret
0x000000000044d610 : add byte ptr [rax + rcx*2], al ; add esp, 0x4000008 ; ret
0x00000000004148fd : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044fe2a : add byte ptr [rax - 0x39], cl ; ret 1
0x0000000000467116 : add byte ptr [rax - 0x3f], cl ; cli ; add ebp, ebx ; add ecx, dword ptr [rax - 0x77] ; ret 0x8348
0x0000000000435bb5 : add byte ptr [rax - 0x3f], cl ; jmp 0xffffffffc3cca3c7
0x000000000042b8ac : add byte ptr [rax - 0x73], cl ; adc eax, 0x9d984 ; call rax
0x000000000042b856 : add byte ptr [rax - 0x73], cl ; adc eax, 0x9d9da ; call rax
0x0000000000427a08 : add byte ptr [rax - 0x73], cl ; adc eax, 0xa1780 ; call rax
0x00000000004279c0 : add byte ptr [rax - 0x73], cl ; adc eax, 0xa17c0 ; call rax
0x000000000042769b : add byte ptr [rax - 0x73], cl ; adc eax, 0xa1abd ; call rcx
0x0000000000427629 : add byte ptr [rax - 0x73], cl ; adc eax, 0xa1b2f ; call rax
0x000000000044f80c : add byte ptr [rax - 0x73], cl ; xor al, 0x24 ; call rax
0x000000000040935b : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 1] ; ret 0xb60f
0x000000000040967c : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 1] ; ret 0xf44
0x000000000044f8c9 : add byte ptr [rax - 0x75], cl ; add eax, 0xdb7f7 ; call rax
0x000000000044f833 : add byte ptr [rax - 0x75], cl ; add eax, 0xdb88d ; call rax
0x000000000042ed04 : add byte ptr [rax - 0x75], cl ; and al, 0x10 ; jmp 0x42ecd5
0x000000000040e4c0 : add byte ptr [rax - 0x75], cl ; and al, 0x30 ; jmp 0x40e491
0x0000000000481920 : add byte ptr [rax - 0x75], cl ; pop rdx ; and byte ptr [rax + 0x39], cl ; ret
0x0000000000486b9c : add byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000468f1a : add byte ptr [rax - 0x75], cl ; push rcx ; adc byte ptr [rax - 1], cl ; ret 0x8948
0x000000000043ad9f : add byte ptr [rax - 0x75], cl ; push rcx ; cmp byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000448488 : add byte ptr [rax - 0x75], cl ; ret 0x4810
0x000000000040727d : add byte ptr [rax - 0x75], cl ; sbb cl, byte ptr [rax - 1] ; ret
0x00000000004047df : add byte ptr [rax - 0x75], cl ; sub al, 0x24 ; add rsp, 8 ; ret
0x000000000047367e : add byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call 0x46f987
0x0000000000470d3a : add byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call rcx
0x0000000000461ba7 : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x40de57
0x000000000041af49 : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x427247
0x0000000000483a86 : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call rcx
0x00000000004046ec : add byte ptr [rax - 0x77], cl ; and al, 0x10 ; ret
0x00000000004286e7 : add byte ptr [rax - 0x77], cl ; and al, 0x18 ; ret
0x000000000044fb3a : add byte ptr [rax - 0x77], cl ; and al, 0x30 ; ret
0x0000000000479670 : add byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x425948
0x000000000041a594 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax + 0x29] ; ret
0x0000000000445b74 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; ret 0xff00
0x0000000000436c92 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx - 0x77] ; ret
0x0000000000436a8f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx - 0x77] ; ret 0x8948
0x000000000044f973 : add byte ptr [rax - 0x77], cl ; jrcxz 0x44f9c8 ; and esp, 0xfffffff0 ; call rax
0x0000000000470d51 : add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x0000000000470ceb : add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x000000000042b013 : add byte ptr [rax - 0x77], cl ; or al, 0x24 ; mov rax, qword ptr [rdx] ; call rax
0x0000000000405b0c : add byte ptr [rax - 0x77], cl ; ret
0x000000000042b6fb : add byte ptr [rax - 0x77], cl ; ret 0x24e9
0x0000000000412194 : add byte ptr [rax - 0x77], cl ; ret 0x2548
0x0000000000414ae0 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000415a6b : add byte ptr [rax - 0x77], cl ; ret 0x8748
0x000000000044908e : add byte ptr [rax - 0x77], cl ; ret 0x8944
0x00000000004067aa : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000444bd7 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004131ff : add byte ptr [rax - 0x77], cl ; ret 0x93e9
0x0000000000445840 : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000043ca96 : add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x000000000040990b : add byte ptr [rax - 0x77], cl ; sbb al, 0x24 ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000486d1e : add byte ptr [rax - 0x77], cl ; xor al, 0x24 ; call rbx
0x0000000000407084 : add byte ptr [rax - 0x77], cl ; xor al, 0x24 ; mov rdi, qword ptr [rdx] ; call rdi
0x0000000000443095 : add byte ptr [rax - 0x7b], cl ; rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000040f9dc : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000463393 : add byte ptr [rax - 0x7d], cl ; ret 0xbe02
0x0000000000466450 : add byte ptr [rax - 0x7f], cl ; jmp qword ptr [rax]
0x000000000040cbb9 : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000413e37 : add byte ptr [rax - 0x7f], cl ; ret 0
0x000000000040e18c : add byte ptr [rax - 0x7f], cl ; ret 0xfc01
0x0000000000413eef : add byte ptr [rax - 1], cl ; ret
0x0000000000416e0a : add byte ptr [rax - 1], cl ; ret 0x3948
0x0000000000406ca2 : add byte ptr [rax - 1], cl ; ret 0x8348
0x0000000000418905 : add byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000466932 : add byte ptr [rax - 1], cl ; ret 0x8d48
0x0000000000409e81 : add byte ptr [rax - 1], cl ; ret 0xf44
0x0000000000419eec : add byte ptr [rax - 9], cl ; ret
0x000000000047837c : add byte ptr [rax - 9], cl ; ret 0x60
0x0000000000413055 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041331f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; ret 0xc77
0x000000000040ac7b : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; mov dh, 0x59 ; adc al, 0xf6 ; ret
0x000000000044cce6 : add byte ptr [rax], 0 ; call qword ptr [rdx]
0x000000000044cd26 : add byte ptr [rax], 0 ; ret
0x000000000044d3a0 : add byte ptr [rax], 0x48 ; add esp, 0x800008 ; ret
0x0000000000471783 : add byte ptr [rax], 1 ; add byte ptr [rax], al ; mov qword ptr [rsp], rcx ; call rax
0x000000000044d880 : add byte ptr [rax], ah ; add rsp, 0x20000008 ; ret
0x000000000044d847 : add byte ptr [rax], ah ; call qword ptr [rdx]
0x000000000044d887 : add byte ptr [rax], ah ; ret
0x00000000004344d0 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000426289 : add byte ptr [rax], al ; add al, ch ; call qword ptr [rax]
0x0000000000439d4b : add byte ptr [rax], al ; add al, ch ; int 0xc3
0x000000000048dbd9 : add byte ptr [rax], al ; add al, ch ; jmp rsi
0x000000000044b137 : add byte ptr [rax], al ; add al, ch ; push rcx ; ret 0xfffd
0x000000000040c1c5 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040f5c6 : add byte ptr [rax], al ; add al, ch ; ret 0x17d
0x0000000000409856 : add byte ptr [rax], al ; add al, ch ; ret 0x1c8
0x000000000045bde6 : add byte ptr [rax], al ; add al, ch ; ret 0xfada
0x0000000000453df6 : add byte ptr [rax], al ; add al, ch ; ret 0xfb23
0x0000000000452af6 : add byte ptr [rax], al ; add al, ch ; ret 0xfb36
0x000000000045f946 : add byte ptr [rax], al ; add al, ch ; ret 0xff4b
0x000000000043b13d : add byte ptr [rax], al ; add al, ch ; ret 0xfffe
0x0000000000428abd : add byte ptr [rax], al ; add al, ch ; sti ; ret 0xfffd
0x000000000041b0de : add byte ptr [rax], al ; add al, ch ; stosb byte ptr [rdi], al ; ret 0
0x000000000042d20f : add byte ptr [rax], al ; add al, ch ; test eax, 0xeb000153 ; ret 0x8948
0x0000000000428e63 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebp ; ret
0x0000000000433345 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; ret
0x000000000041aff1 : add byte ptr [rax], al ; add al, ch ; xchg eax, edi ; ret
0x0000000000475c66 : add byte ptr [rax], al ; add bh, dh ; ret 7
0x000000000046e0ad : add byte ptr [rax], al ; add bl, al ; mov r8, rdx ; jmp 0x46e081
0x00000000004893a7 : add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x0000000000416fe5 : add byte ptr [rax], al ; add bl, ch ; lea ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x000000000041c179 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040d3ef : add byte ptr [rax], al ; add bl, ch ; ret 0x158b
0x00000000004667a2 : add byte ptr [rax], al ; add bl, ch ; ret 0xd231
0x00000000004101d3 : add byte ptr [rax], al ; add bl, dl ; jrcxz 0x41016d ; push rbx ; jmp qword ptr [rcx]
0x000000000041aa83 : add byte ptr [rax], al ; add bl, dl ; loop 0x41aa15 ; stc ; and byte ptr [rcx], bl ; jmp qword ptr [rcx]
0x0000000000438edf : add byte ptr [rax], al ; add bl, dl ; loopne 0x438ef4 ; ret
0x0000000000415def : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000413056 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000442605 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4e75
0x000000000047440b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7e7d
0x0000000000476c67 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000410873 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048fcc0 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046339a : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8d0f
0x0000000000413350 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9c77
0x0000000000413320 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc77
0x0000000000430e82 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 0x39], 1 ; ret 0x870f
0x0000000000489bcb : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000047820d : add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; fimul dword ptr [rax - 9] ; ret 0x60
0x000000000044fe28 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 1
0x0000000000435bb3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; jmp 0xffffffffc3cca3c9
0x000000000044f80a : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor al, 0x24 ; call rax
0x000000000043ad9d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rcx ; cmp byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000448486 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4810
0x000000000047367c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call 0x46f989
0x0000000000470d38 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call rcx
0x000000000041af47 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x427249
0x0000000000483a84 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call rcx
0x000000000044fb38 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x30 ; ret
0x000000000041a592 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax + 0x29] ; ret
0x0000000000470d4f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x0000000000470ce9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x000000000043d4a2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004166fb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044583e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000043ca94 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000004630f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000463391 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xbe02
0x0000000000433beb : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x0000000000416e08 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3948
0x0000000000406ca0 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8348
0x0000000000466930 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8d48
0x000000000047837a : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret 0x60
0x00000000004344ce : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000042a933 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000416e06 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3948
0x000000000044c35f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043449f : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004025eb : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x42e836
0x000000000044f809 : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, qword ptr [rsp] ; call rax
0x000000000048b0e6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000043dbc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsp + 0x20], 0 ; ret
0x0000000000466c93 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsp + 0x58], al ; ret
0x000000000044fb37 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsp + 0x30], rax ; ret
0x000000000044c18d : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rbx, qword ptr [rbx + 8] ; jmp rbx
0x00000000004046f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000469118 : add byte ptr [rax], al ; add byte ptr [rbp + 0x38], al ; ret
0x0000000000402a94 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; fadd dword ptr [rcx + 0xf] ; xchg eax, edx ; ret
0x0000000000402aae : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x4677
0x00000000004632bb : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000417e71 : add byte ptr [rax], al ; add byte ptr [rbx + 0x557506fa], al ; jmp 0x417e47
0x000000000048b249 : add byte ptr [rax], al ; add byte ptr [rbx - 0x14e3dbbc], cl ; ret 0x19e8
0x0000000000442f62 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0f702], al ; ret 0x8b48
0x000000000044a2e9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0fd05], al ; ret
0x0000000000471994 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000044fc7d : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0
0x0000000000410d2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000043cc2b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000471039 : add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret 0x8948
0x0000000000471d43 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(3) ; add ecx, dword ptr [rax - 1] ; ret
0x000000000044fdb6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x10244489 ; ret
0x000000000044f7c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x20244489 ; ret
0x000000000044f946 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x28244489 ; ret
0x000000000044fc5e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x30244489 ; ret
0x000000000044f742 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8244489 ; ret
0x0000000000473307 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x52 ; add dword ptr [rsi - 0x3f], esp ; ret 0x4808
0x0000000000413008 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x5a ; xor ah, byte ptr [rsi - 9] ; ret
0x000000000040ac7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x59 ; adc al, 0xf6 ; ret
0x00000000004086e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x59 ; or dh, dh ; ret
0x00000000004071e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x5a ; or dh, dh ; ret
0x000000000043bbce : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret
0x000000000043bb8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret 0
0x000000000042f75b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x89 ; ret
0x0000000000429c3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x98 ; ret 0
0x000000000042ed27 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xd ; pop rdi ; ret
0x000000000044e144 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; and al, 8 ; ret
0x000000000041cc89 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4574
0x000000000048a4d6 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000434f90 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000000000409a25 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004344a1 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000043f301 : add byte ptr [rax], al ; add rsp, 0x100 ; ret
0x000000000044cab0 : add byte ptr [rax], al ; add rsp, 0x1008 ; ret
0x000000000043e54e : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x000000000045db18 : add byte ptr [rax], al ; add rsp, 0x110 ; ret
0x000000000040501a : add byte ptr [rax], al ; add rsp, 0x120 ; ret
0x00000000004725d3 : add byte ptr [rax], al ; add rsp, 0x138 ; ret
0x0000000000447908 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x0000000000421e36 : add byte ptr [rax], al ; add rsp, 0x150 ; ret
0x000000000047003f : add byte ptr [rax], al ; add rsp, 0x158 ; ret
0x00000000004450ce : add byte ptr [rax], al ; add rsp, 0x160 ; ret
0x000000000042248d : add byte ptr [rax], al ; add rsp, 0x16a8 ; ret
0x0000000000421b02 : add byte ptr [rax], al ; add rsp, 0x170 ; ret
0x000000000043bd1a : add byte ptr [rax], al ; add rsp, 0x188 ; ret
0x00000000004193a7 : add byte ptr [rax], al ; add rsp, 0x190 ; ret
0x000000000040605c : add byte ptr [rax], al ; add rsp, 0x198 ; ret
0x000000000046f589 : add byte ptr [rax], al ; add rsp, 0x1a0 ; ret
0x00000000004908c3 : add byte ptr [rax], al ; add rsp, 0x1a8 ; ret
0x000000000043b8f1 : add byte ptr [rax], al ; add rsp, 0x1b0 ; ret
0x0000000000416267 : add byte ptr [rax], al ; add rsp, 0x1c8 ; ret
0x000000000044cb80 : add byte ptr [rax], al ; add rsp, 0x2008 ; ret
0x0000000000423d95 : add byte ptr [rax], al ; add rsp, 0x2028 ; ret
0x000000000044c88a : add byte ptr [rax], al ; add rsp, 0x208 ; ret
0x0000000000471aac : add byte ptr [rax], al ; add rsp, 0x210 ; ret
0x0000000000471754 : add byte ptr [rax], al ; add rsp, 0x220 ; ret
0x0000000000444c3c : add byte ptr [rax], al ; add rsp, 0x278 ; ret
0x00000000004302b7 : add byte ptr [rax], al ; add rsp, 0x298 ; ret
0x0000000000447766 : add byte ptr [rax], al ; add rsp, 0x2c8 ; ret
0x00000000004432f1 : add byte ptr [rax], al ; add rsp, 0x300 ; ret
0x0000000000463d68 : add byte ptr [rax], al ; add rsp, 0x3b0 ; ret
0x000000000046891c : add byte ptr [rax], al ; add rsp, 0x3f0 ; ret
0x000000000044cc50 : add byte ptr [rax], al ; add rsp, 0x4008 ; ret
0x000000000044c93a : add byte ptr [rax], al ; add rsp, 0x408 ; ret
0x000000000043317f : add byte ptr [rax], al ; add rsp, 0x428 ; ret
0x000000000042412e : add byte ptr [rax], al ; add rsp, 0x450 ; ret
0x0000000000423aa6 : add byte ptr [rax], al ; add rsp, 0x640 ; ret
0x0000000000469161 : add byte ptr [rax], al ; add rsp, 0x6a0 ; ret
0x000000000044cd20 : add byte ptr [rax], al ; add rsp, 0x8008 ; ret
0x000000000044c9ea : add byte ptr [rax], al ; add rsp, 0x808 ; ret
0x000000000040720f : add byte ptr [rax], al ; add rsp, 0x88 ; ret
0x0000000000403fae : add byte ptr [rax], al ; add rsp, 0x90 ; ret
0x0000000000404be4 : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000040a0cc : add byte ptr [rax], al ; add rsp, 0xa0 ; ret
0x00000000004053ac : add byte ptr [rax], al ; add rsp, 0xa8 ; ret
0x0000000000408841 : add byte ptr [rax], al ; add rsp, 0xb0 ; ret
0x0000000000430dd2 : add byte ptr [rax], al ; add rsp, 0xb8 ; ret
0x000000000041c401 : add byte ptr [rax], al ; add rsp, 0xc8 ; ret
0x0000000000455994 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000432b15 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000041317e : add byte ptr [rax], al ; add rsp, 0xe0 ; ret
0x0000000000454ad1 : add byte ptr [rax], al ; add rsp, 0xe8 ; ret
0x000000000043ea12 : add byte ptr [rax], al ; add rsp, 0xf0 ; ret
0x0000000000455171 : add byte ptr [rax], al ; add rsp, 0xf8 ; ret
0x0000000000428abe : add byte ptr [rax], al ; call 0x404dc4
0x000000000041b0b5 : add byte ptr [rax], al ; call 0x427394
0x00000000004025ed : add byte ptr [rax], al ; call 0x42e834
0x000000000044c6ee : add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000044915b : add byte ptr [rax], al ; call rax
0x0000000000417e72 : add byte ptr [rax], al ; cmp edx, 6 ; jne 0x417ed6 ; jmp 0x417e46
0x000000000044e22d : add byte ptr [rax], al ; je 0x44e1d4 ; mov byte ptr [rax], 0 ; ret
0x000000000044efd3 : add byte ptr [rax], al ; je 0x44efe6 ; mov rcx, rbx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040d3f0 : add byte ptr [rax], al ; jmp 0x40d3b9
0x000000000041c17a : add byte ptr [rax], al ; jmp 0x41c144
0x0000000000424e42 : add byte ptr [rax], al ; jmp 0x424dbc
0x00000000004258f8 : add byte ptr [rax], al ; jmp 0x4258c1
0x0000000000428e16 : add byte ptr [rax], al ; jmp 0x428ddf
0x000000000043292d : add byte ptr [rax], al ; jmp 0x43264e
0x0000000000432ad3 : add byte ptr [rax], al ; jmp 0x432970
0x000000000048b74f : add byte ptr [rax], al ; jmp 0x48b705
0x000000000044c39f : add byte ptr [rax], al ; jmp rax
0x000000000043de4a : add byte ptr [rax], al ; lea eax, dword ptr [rdx + rbx] ; mov dword ptr [rsp + 8], eax ; ret
0x000000000044f80b : add byte ptr [rax], al ; lea rsi, qword ptr [rsp] ; call rax
0x000000000040cbc4 : add byte ptr [rax], al ; lock dec dword ptr [rax + 0x39] ; ret
0x000000000048b0e8 : add byte ptr [rax], al ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000044e19b : add byte ptr [rax], al ; mov byte ptr [rsp + 0x18], 1 ; ret
0x0000000000482f77 : add byte ptr [rax], al ; mov byte ptr [rsp + 0x18], al ; ret
0x000000000043dbc5 : add byte ptr [rax], al ; mov byte ptr [rsp + 0x20], 0 ; ret
0x000000000044e16c : add byte ptr [rax], al ; mov byte ptr [rsp + 0x20], 1 ; ret
0x0000000000466c95 : add byte ptr [rax], al ; mov byte ptr [rsp + 0x58], al ; ret
0x000000000044fe30 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall ; ret
0x000000000048b24a : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x48b21b
0x000000000044fb39 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x30], rax ; ret
0x000000000048a093 : add byte ptr [rax], al ; mov qword ptr [rsp], r8 ; call rax
0x000000000041af48 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call 0x427248
0x0000000000483a85 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call rcx
0x000000000040990a : add byte ptr [rax], al ; mov qword ptr [rsp], rbx ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000470d50 : add byte ptr [rax], al ; mov qword ptr [rsp], rcx ; call rax
0x0000000000470cea : add byte ptr [rax], al ; mov qword ptr [rsp], rcx ; call rdx
0x000000000047367d : add byte ptr [rax], al ; mov qword ptr [rsp], rdx ; call 0x46f988
0x0000000000470d39 : add byte ptr [rax], al ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000486d1d : add byte ptr [rax], al ; mov qword ptr [rsp], rsi ; call rbx
0x0000000000407083 : add byte ptr [rax], al ; mov qword ptr [rsp], rsi ; mov rdi, qword ptr [rdx] ; call rdi
0x000000000047112d : add byte ptr [rax], al ; mov rax, qword ptr [rdx] ; call rax
0x000000000044f8c8 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0xdb7f7] ; call rax
0x000000000044f832 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0xdb88d] ; call rax
0x000000000044c18f : add byte ptr [rax], al ; mov rbx, qword ptr [rbx + 8] ; jmp rbx
0x0000000000442b00 : add byte ptr [rax], al ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000403369 : add byte ptr [rax], al ; ret
0x000000000044e145 : add byte ptr [rax], al ; sete byte ptr [rsp + 8] ; ret
0x000000000044fdb7 : add byte ptr [rax], al ; syscall ; mov dword ptr [rsp + 0x10], eax ; ret
0x000000000044f7c2 : add byte ptr [rax], al ; syscall ; mov dword ptr [rsp + 0x20], eax ; ret
0x000000000044f947 : add byte ptr [rax], al ; syscall ; mov dword ptr [rsp + 0x28], eax ; ret
0x000000000044fc5f : add byte ptr [rax], al ; syscall ; mov dword ptr [rsp + 0x30], eax ; ret
0x000000000044f743 : add byte ptr [rax], al ; syscall ; mov dword ptr [rsp + 8], eax ; ret
0x000000000044fe4a : add byte ptr [rax], al ; syscall ; mov qword ptr [rsp + 8], rax ; ret
0x000000000044f607 : add byte ptr [rax], al ; syscall ; ret
0x00000000004200b4 : add byte ptr [rax], al ; ud2 ; call 0x44c376
0x000000000044d6e0 : add byte ptr [rax], cl ; add rsp, 0x8000008 ; ret
0x000000000044d6a7 : add byte ptr [rax], cl ; call qword ptr [rdx]
0x000000000044d6e7 : add byte ptr [rax], cl ; ret
0x000000000044d7b0 : add byte ptr [rax], dl ; add rsp, 0x10000008 ; ret
0x000000000044d777 : add byte ptr [rax], dl ; call qword ptr [rdx]
0x000000000044d7b7 : add byte ptr [rax], dl ; ret
0x000000000046911a : add byte ptr [rbp + 0x38], al ; ret
0x0000000000402a96 : add byte ptr [rbp + 0x39], cl ; fadd dword ptr [rcx + 0xf] ; xchg eax, edx ; ret
0x0000000000402ab0 : add byte ptr [rbp + 0x39], cl ; ret 0x4677
0x00000000004748ca : add byte ptr [rbp + 0x39], cl ; ret 0x870f
0x000000000043de4b : add byte ptr [rbp + 0x44891a04], cl ; and al, 8 ; ret
0x000000000044fca0 : add byte ptr [rbp + rax - 0x77], dh ; and al, 0x30 ; ret
0x00000000004748bd : add byte ptr [rbp + rcx*4 + 0x57], cl ; add cl, byte ptr [rbp + 0x39] ; ret 0x870f
0x00000000004632bd : add byte ptr [rbp - 0x77], cl ; ret
0x0000000000467371 : add byte ptr [rbp - 0x77], cl ; ret 0x294d
0x000000000041a5bd : add byte ptr [rbp - 0x77], cl ; ret 0xc149
0x0000000000428d51 : add byte ptr [rbx + 0x12091], cl ; add byte ptr [rcx], cl ; ret 0xd285
0x0000000000434326 : add byte ptr [rbx + 0x126e6315], cl ; add byte ptr [rcx], al ; ret 0xc2ff
0x000000000043429d : add byte ptr [rbx + 0x126eec15], cl ; add byte ptr [rcx], al ; ret 0xc2ff
0x0000000000429923 : add byte ptr [rbx + 0x392c2454], cl ; ret 0x2075
0x0000000000417e73 : add byte ptr [rbx + 0x557506fa], al ; jmp 0x417e45
0x000000000048b24b : add byte ptr [rbx - 0x14e3dbbc], cl ; ret 0x19e8
0x0000000000442f64 : add byte ptr [rbx - 0x6bf0f702], al ; ret 0x8b48
0x000000000044a2eb : add byte ptr [rbx - 0x6bf0fd05], al ; ret
0x000000000046ad82 : add byte ptr [rbx - 0x7bf0a306], al ; ret
0x00000000004432f6 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000443074 : add byte ptr [rcx + 0x39], cl ; ret
0x000000000048f4c4 : add byte ptr [rcx + 0x4818245c], cl ; mov dword ptr [rsp], ecx ; call rax
0x000000000042f28a : add byte ptr [rcx + rax - 0x53e276b8], al ; call qword ptr [rax]
0x0000000000416fa9 : add byte ptr [rcx + rcx*4 - 0x40], cl ; mov rdi, rdx ; jmp 0x416f7c
0x000000000043a291 : add byte ptr [rcx - 0x1424ce3e], cl ; add al, 0xff ; ret
0x000000000044fc7f : add byte ptr [rcx - 0x39], cl ; ret 0
0x0000000000410d2f : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000040f980 : add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc26a4694
0x0000000000410e6f : add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc2c45686
0x000000000043cc2d : add byte ptr [rcx - 0x77], cl ; ret
0x000000000040f904 : add byte ptr [rcx - 0x77], cl ; ror dword ptr [rax + 0x29], 1 ; ret 0x8948
0x000000000040fa94 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c10
0x00000000004070bf : add byte ptr [rcx - 1], cl ; ret 0x8349
0x000000000047103b : add byte ptr [rcx - 1], cl ; ret 0x8948
0x0000000000410d5d : add byte ptr [rcx - 9], cl ; ret 0x7f
0x0000000000471784 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rsp], rcx ; call rax
0x0000000000486d1b : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rsp], rsi ; call rbx
0x000000000043f306 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000044d470 : add byte ptr [rcx], al ; add rsp, 0x1000008 ; ret
0x000000000044d437 : add byte ptr [rcx], al ; call qword ptr [rdx]
0x000000000042beb2 : add byte ptr [rcx], al ; ret
0x00000000004180ca : add byte ptr [rcx], al ; ret 0x8b48
0x00000000004342a3 : add byte ptr [rcx], al ; ret 0xc2ff
0x0000000000457116 : add byte ptr [rcx], cl ; ret 0x5489
0x0000000000428d57 : add byte ptr [rcx], cl ; ret 0xd285
0x0000000000471d45 : add byte ptr [rcx], dh ; fucomi st(3) ; add ecx, dword ptr [rax - 1] ; ret
0x00000000004320fd : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; fucomi st(3) ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x0000000000416a4c : add byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x00000000004300c9 : add byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8348
0x000000000046909e : add byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8b48
0x000000000040799f : add byte ptr [rdi + rcx - 0x4a], al ; push rbx ; or byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000000000410371 : add byte ptr [rdi + rcx - 0x4a], al ; xor cl, byte ptr [rax - 1] ; ret 0x8b9
0x0000000000406310 : add byte ptr [rdi + rcx - 0x51], cl ; ret 0x9deb
0x000000000044fdb8 : add byte ptr [rdi], cl ; add eax, 0x10244489 ; ret
0x000000000044f7c3 : add byte ptr [rdi], cl ; add eax, 0x20244489 ; ret
0x000000000044f948 : add byte ptr [rdi], cl ; add eax, 0x28244489 ; ret
0x000000000044fc60 : add byte ptr [rdi], cl ; add eax, 0x30244489 ; ret
0x000000000044f744 : add byte ptr [rdi], cl ; add eax, 0x8244489 ; ret
0x000000000046b0d7 : add byte ptr [rdi], cl ; mov bh, 0x3d ; ret 0x569
0x00000000004724c5 : add byte ptr [rdi], cl ; mov bh, 0x51 ; add dword ptr [rsi - 0x3f], esp ; ret 0x4808
0x0000000000473309 : add byte ptr [rdi], cl ; mov bh, 0x52 ; add dword ptr [rsi - 0x3f], esp ; ret 0x4808
0x000000000041300a : add byte ptr [rdi], cl ; mov bh, 0x5a ; xor ah, byte ptr [rsi - 9] ; ret
0x000000000040ac7e : add byte ptr [rdi], cl ; mov dh, 0x59 ; adc al, 0xf6 ; ret
0x00000000004086ea : add byte ptr [rdi], cl ; mov dh, 0x59 ; or dh, dh ; ret
0x0000000000475229 : add byte ptr [rdi], cl ; mov dh, 0x5a ; adc al, 0xf6 ; ret
0x00000000004071e2 : add byte ptr [rdi], cl ; mov dh, 0x5a ; or dh, dh ; ret
0x000000000043bbd0 : add byte ptr [rdi], cl ; mov dh, 0x88 ; ret
0x000000000043bb8f : add byte ptr [rdi], cl ; mov dh, 0x88 ; ret 0
0x000000000042f75d : add byte ptr [rdi], cl ; mov dh, 0x89 ; ret
0x0000000000429c3d : add byte ptr [rdi], cl ; mov dh, 0x98 ; ret 0
0x000000000042ed29 : add byte ptr [rdi], cl ; mov dh, 0xd ; pop rdi ; ret
0x000000000040f2c1 : add byte ptr [rdi], cl ; or ebp, eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; rol byte ptr [rbx], 1 ; add cl, ch ; ret 0xfffe
0x000000000041c7a6 : add byte ptr [rdi], cl ; or ebp, eax ; ret 0x2fb
0x0000000000410092 : add byte ptr [rdi], cl ; or ebp, eax ; salc ; ret 3
0x000000000041218e : add byte ptr [rdi], cl ; test byte ptr [rcx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x0000000000401164 : add byte ptr [rdi], cl ; xchg eax, esp ; and al, 0x20 ; ret
0x000000000044e146 : add byte ptr [rdi], cl ; xchg eax, esp ; and al, 8 ; ret
0x0000000000404779 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000041cc8b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4574
0x0000000000432f24 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000046697a : add byte ptr [rdx + rdx*8 - 0xb7fa8c], al ; ret
0x000000000044d540 : add byte ptr [rdx], al ; add rsp, 0x2000008 ; ret
0x000000000044d507 : add byte ptr [rdx], al ; call qword ptr [rdx]
0x000000000044d547 : add byte ptr [rdx], al ; ret
0x0000000000462aac : add byte ptr [rsi + 0xf], ah ; ret 0x860f
0x000000000044e0db : add byte ptr [rsi + 0xf], ah ; salc ; and al, 0x18 ; ret
0x000000000044efd4 : add byte ptr [rsi + rax + 0x48], dh ; mov ecx, ebx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047036c : add byte ptr [rsi - 9], ah ; ret
0x000000000044e22e : add byte ptr [rsp + rbx*4 - 0x3a], dh ; add byte ptr [rax], al ; ret
0x0000000000433997 : add cl, byte ptr [rax + 0x29] ; ror byte ptr [rax + 0x29], 1 ; ret
0x000000000041042a : add cl, byte ptr [rax + 0x39] ; ret
0x000000000045d3ca : add cl, byte ptr [rax - 0x75] ; sub al, 0x24 ; add rsp, 8 ; ret
0x0000000000419174 : add cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000466bf4 : add cl, byte ptr [rax - 0x77] ; ret 0xd148
0x00000000004908ff : add cl, byte ptr [rax - 1] ; ret
0x00000000004748c1 : add cl, byte ptr [rbp + 0x39] ; ret 0x870f
0x000000000044a2ee : add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000461eab : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xfce9
0x0000000000418cf1 : add cl, ch ; ret
0x00000000004129c8 : add cl, ch ; ret 0xfffd
0x000000000040f2c8 : add cl, ch ; ret 0xfffe
0x00000000004131fa : add cl, ch ; wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x93e9
0x0000000000409a27 : add dh, dh ; ret
0x0000000000462b46 : add dl, dh ; movups xmmword ptr [rsp + 0x18], xmm0 ; ret
0x000000000043351d : add dword ptr [rax + 0x100], -1 ; ret
0x0000000000484c05 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000406382 : add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000000000490906 : add dword ptr [rax - 0x73], ecx ; add qword ptr [r8 + 0x39], r9 ; ret
0x00000000004286e4 : add dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x77], cl ; and al, 0x18 ; ret
0x0000000000421765 : add dword ptr [rax - 0x75], ecx ; sub al, 0x24 ; add rsp, 8 ; ret
0x000000000040894b : add dword ptr [rax - 0x77], ecx ; pop rcx ; and byte ptr [rax - 0x7f], cl ; ret 0x401
0x00000000004490df : add dword ptr [rax - 0x77], ecx ; ret
0x000000000042d908 : add dword ptr [rax - 0x77], ecx ; ret 0x8948
0x000000000040cb91 : add dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x000000000045fdc9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x0000000000409a23 : add dword ptr [rax - 0xa000000], ecx ; ret
0x000000000040efde : add dword ptr [rax - 9], ecx ; ret 0x3f
0x0000000000433520 : add dword ptr [rax], eax ; add bh, bh ; ret
0x000000000040c289 : add dword ptr [rax], eax ; add bh, bh ; ret 0x9189
0x000000000044866d : add dword ptr [rax], eax ; add bl, al ; call 0x424956
0x0000000000428e15 : add dword ptr [rax], eax ; add bl, ch ; ret 0x8948
0x0000000000406c6e : add dword ptr [rax], eax ; add byte ptr [rax + 0x21], cl ; ret
0x000000000040d423 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000046f4d1 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x1074
0x00000000004344a3 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000463352 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x8d0f
0x000000000042aa7d : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xe875
0x00000000004148fb : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000409359 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 1] ; ret 0xb60f
0x000000000040967a : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 1] ; ret 0xf44
0x0000000000445b72 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; ret 0xff00
0x0000000000471785 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x00000000004723e3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000412192 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x00000000004131fd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x93e9
0x0000000000486d1c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor al, 0x24 ; call rbx
0x0000000000418903 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000419f3b : add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; ret
0x000000000042a931 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000416e04 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3948
0x000000000044f899 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea rsi, qword ptr [rsp] ; call rax
0x0000000000482f75 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rsp + 0x18], al ; ret
0x0000000000410d5b : add dword ptr [rax], eax ; add byte ptr [rcx - 9], cl ; ret 0x7f
0x000000000042beb0 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x0000000000428d55 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0xd285
0x000000000044fdc6 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; add eax, 0x10244489 ; ret
0x000000000044fe0b : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; add eax, 0x20244489 ; ret
0x00000000004724c3 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x51 ; add dword ptr [rsi - 0x3f], esp ; ret 0x4808
0x0000000000404777 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000044cdf0 : add dword ptr [rax], eax ; add rsp, 0x10008 ; ret
0x000000000040d301 : add dword ptr [rax], eax ; call 0x426ce8
0x000000000044cdb7 : add dword ptr [rax], eax ; call qword ptr [rdx]
0x000000000042d215 : add dword ptr [rax], eax ; jmp 0x42d1de
0x000000000042d4a0 : add dword ptr [rax], eax ; jmp 0x42d469
0x00000000004356a2 : add dword ptr [rax], eax ; jmp 0x43568d
0x000000000042ed03 : add dword ptr [rax], eax ; mov rax, qword ptr [rsp + 0x10] ; jmp 0x42ecd6
0x000000000040e4bf : add dword ptr [rax], eax ; mov rax, qword ptr [rsp + 0x30] ; jmp 0x40e492
0x000000000040e4be : add dword ptr [rax], eax ; mov rax, qword ptr [rsp + 0x30] ; jmp 0x40e493
0x00000000004245c3 : add dword ptr [rax], eax ; ret
0x0000000000410091 : add dword ptr [rax], eax ; ud2 ; call 0x44c376
0x00000000004576d5 : add dword ptr [rbp + 0x38], eax ; ret
0x0000000000481a25 : add dword ptr [rbp + 0x39], ecx ; ret 0x8f0f
0x0000000000457582 : add dword ptr [rbp + rcx*4 + 0x5a], ecx ; add dword ptr [rcx + 0x39], ecx ; ret
0x000000000040e6a0 : add dword ptr [rbp - 0x59], esi ; mov qword ptr [rsp], rsi ; call 0x41a8e9
0x000000000044d988 : add dword ptr [rbp - 7], esi ; ret
0x0000000000457586 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000046efdc : add dword ptr [rcx + 0x39], ecx ; ret 0x407f
0x0000000000445f3d : add dword ptr [rcx], esi ; shr bl, cl ; or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000439bd2 : add dword ptr [rdi - 0xc], esi ; mov qword ptr [rsp + 0x10], rcx ; ret
0x000000000041aaaa : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xd284
0x000000000042681e : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x2fe9
0x000000000040a34e : add dword ptr [rdx], 0 ; add byte ptr [rax - 1], cl ; ret 0xf44
0x00000000004724c9 : add dword ptr [rsi - 0x3f], esp ; ret 0x4808
0x000000000044fdba : add eax, 0x10244489 ; ret
0x000000000044c513 : add eax, 0x1058 ; jmp rax
0x000000000044c525 : add eax, 0x1116 ; jmp rax
0x000000000044c537 : add eax, 0x11d4 ; jmp rax
0x0000000000417d7c : add eax, 0x12796b ; ret
0x000000000044c549 : add eax, 0x1292 ; jmp rax
0x0000000000427914 : add eax, 0x133987 ; call 0x413b77
0x000000000044c55b : add eax, 0x1350 ; jmp rax
0x000000000040630c : add eax, 0x155027 ; imul r8, rdx ; jmp 0x4062bc
0x0000000000404831 : add eax, 0x156952 ; ret
0x000000000044c39c : add eax, 0x1ff ; jmp rax
0x000000000044f7c5 : add eax, 0x20244489 ; ret
0x000000000044c3ab : add eax, 0x270 ; jmp rax
0x000000000044f94a : add eax, 0x28244489 ; ret
0x000000000044c3bd : add eax, 0x2de ; jmp rax
0x000000000044634e : add eax, 0x30 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000044fc62 : add eax, 0x30244489 ; ret
0x000000000044c3cf : add eax, 0x37c ; jmp rax
0x0000000000446371 : add eax, 0x38 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000048e387 : add eax, 0x39480001 ; ret 0x850f
0x0000000000446358 : add eax, 0x40 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000044c3e1 : add eax, 0x41a ; jmp rax
0x000000000047966f : add eax, 0x44894800 ; and al, 8 ; call 0x425949
0x0000000000446362 : add eax, 0x48 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000044c3f3 : add eax, 0x4b8 ; jmp rax
0x000000000044637b : add eax, 0x50 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000044c405 : add eax, 0x556 ; jmp rax
0x000000000044638f : add eax, 0x58 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000044c417 : add eax, 0x5f4 ; jmp rax
0x000000000044c429 : add eax, 0x6b2 ; jmp rax
0x000000000044c43b : add eax, 0x770 ; jmp rax
0x000000000044f03f : add eax, 0x789068b ; ret
0x000000000044f746 : add eax, 0x8244489 ; ret
0x000000000044c44d : add eax, 0x82e ; jmp rax
0x000000000047a415 : add eax, 0x83482476 ; ret 0x48f3
0x0000000000421a89 : add eax, 0x8548b48 ; and byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000421b8b : add eax, 0x8548b48 ; sub byte ptr [rax - 1], cl ; ret 0x8948
0x000000000044c45f : add eax, 0x8ec ; jmp rax
0x0000000000433089 : add eax, 0x940f0000 ; ret 0xd284
0x000000000044c471 : add eax, 0x9aa ; jmp rax
0x000000000044c483 : add eax, 0xa68 ; jmp rax
0x000000000044c495 : add eax, 0xb26 ; jmp rax
0x000000000044c4a7 : add eax, 0xbe4 ; jmp rax
0x000000000044c4b9 : add eax, 0xca2 ; jmp rax
0x000000000044c4cb : add eax, 0xd60 ; jmp rax
0x000000000044f8cc : add eax, 0xdb7f7 ; call rax
0x000000000044f836 : add eax, 0xdb88d ; call rax
0x000000000044c4dd : add eax, 0xe1e ; jmp rax
0x0000000000453df5 : add eax, 0xe8000000 ; ret 0xfb23
0x000000000046697e : add eax, 0xebc3ff48 ; ret
0x00000000004824af : add eax, 0xebcbff48 ; ret
0x000000000044c4ef : add eax, 0xedc ; jmp rax
0x000000000044fae4 : add eax, 0xeef17 ; jmp rax
0x000000000044faa4 : add eax, 0xeef57 ; jmp rax
0x000000000044c501 : add eax, 0xf9a ; jmp rax
0x000000000044c564 : add eax, 0xfffdc207 ; jmp rax
0x000000000044c1de : add eax, 0xfffdc50d ; jmp rax
0x000000000044c1fe : add eax, 0xfffdc52d ; jmp rax
0x000000000044f9fc : add eax, 0xfffe867f ; call rax
0x000000000044c255 : add eax, 0xffff1b26 ; call rax
0x0000000000417d78 : add eax, 2 ; mov dword ptr [rip + 0x12796b], eax ; ret
0x0000000000438916 : add eax, dword ptr [rax] ; add al, ch ; ret 0x16d
0x0000000000468a9b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8548
0x0000000000443093 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000046644e : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; jmp qword ptr [rax]
0x000000000048b74d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x48b707
0x00000000004748bb : add eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x57], cl ; add cl, byte ptr [rbp + 0x39] ; ret 0x870f
0x0000000000466978 : add eax, dword ptr [rax] ; add byte ptr [rdx + rdx*8 - 0xb7fa8c], al ; ret
0x0000000000416fa8 : add eax, dword ptr [rax] ; mov rax, r8 ; mov rdi, rdx ; jmp 0x416f7d
0x0000000000455c31 : add eax, dword ptr [rbp - 0x14538b2e] ; ret
0x000000000044db18 : add eax, edx ; mov qword ptr [rsp + 8], rax ; ret
0x00000000004101ec : add eax, esi ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000046711a : add ebp, ebx ; add ecx, dword ptr [rax - 0x77] ; ret 0x8348
0x000000000040279f : add ebx, eax ; mov byte ptr [rsp + 0x10], 0 ; ret
0x000000000044a0ba : add ebx, eax ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000046cbf8 : add ebx, eax ; mov byte ptr [rsp + 0x20], 0 ; ret
0x0000000000461e87 : add ebx, ebp ; or dword ptr [rax - 0x7d], 0xfffffffb ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000046cc5c : add ebx, ebp ; ret
0x0000000000466df3 : add ecx, 0x40 ; mov qword ptr [rax + 8], rcx ; ret
0x00000000004301f3 : add ecx, dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 1] ; ret 0x8948
0x0000000000417987 : add ecx, dword ptr [rax - 0x77] ; ret
0x000000000046711c : add ecx, dword ptr [rax - 0x77] ; ret 0x8348
0x0000000000465e25 : add ecx, dword ptr [rax - 0x7f] ; jmp qword ptr [rax]
0x000000000040e3ae : add ecx, dword ptr [rax - 0x7f] ; ret
0x0000000000422a54 : add ecx, dword ptr [rax - 1] ; ret
0x000000000041635c : add ecx, dword ptr [rax - 1] ; ret 0x3948
0x00000000004300cd : add ecx, dword ptr [rax - 1] ; ret 0x8348
0x00000000004690a2 : add ecx, dword ptr [rax - 1] ; ret 0x8b48
0x0000000000475f24 : add ecx, dword ptr [rbx - 0x763d00f0] ; adc bh, dh ; ret 7
0x0000000000409436 : add ecx, dword ptr [rcx - 0x77] ; ret 0xcde9
0x00000000004112ed : add ecx, dword ptr [rcx - 9] ; ret 3
0x000000000044067c : add ecx, dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0x6348
0x000000000043b36b : add ecx, edx ; mov qword ptr [rax + 0x68], rcx ; ret
0x000000000044ec8d : add edi, 0x10 ; ret
0x000000000044e5f6 : add edi, edx ; mov qword ptr [r8], rdi ; ret
0x0000000000455b1e : add edi, esi ; ret
0x000000000044c35d : add edx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044e69e : add edx, edi ; mov qword ptr [r8], rdx ; vzeroupper ; ret
0x0000000000408b31 : add esp, 0x10 ; ret
0x000000000043f304 : add esp, 0x100 ; ret
0x000000000044d7b3 : add esp, 0x10000008 ; ret
0x000000000044d473 : add esp, 0x1000008 ; ret
0x000000000044d133 : add esp, 0x100008 ; ret
0x000000000044cdf3 : add esp, 0x10008 ; ret
0x000000000044cab3 : add esp, 0x1008 ; ret
0x000000000043e551 : add esp, 0x108 ; ret
0x000000000045db1b : add esp, 0x110 ; ret
0x000000000040501d : add esp, 0x120 ; ret
0x00000000004725d6 : add esp, 0x138 ; ret
0x000000000044790b : add esp, 0x148 ; ret
0x0000000000421e39 : add esp, 0x150 ; ret
0x0000000000470042 : add esp, 0x158 ; ret
0x00000000004450d1 : add esp, 0x160 ; ret
0x0000000000422490 : add esp, 0x16a8 ; ret
0x0000000000421b05 : add esp, 0x170 ; ret
0x00000000004020b9 : add esp, 0x18 ; ret
0x000000000043bd1d : add esp, 0x188 ; ret
0x00000000004193aa : add esp, 0x190 ; ret
0x000000000040605f : add esp, 0x198 ; ret
0x000000000046f58c : add esp, 0x1a0 ; ret
0x00000000004908c6 : add esp, 0x1a8 ; ret
0x000000000043b8f4 : add esp, 0x1b0 ; ret
0x000000000041626a : add esp, 0x1c8 ; ret
0x0000000000401623 : add esp, 0x20 ; ret
0x000000000044d883 : add esp, 0x20000008 ; ret
0x000000000044d543 : add esp, 0x2000008 ; ret
0x000000000044d203 : add esp, 0x200008 ; ret
0x000000000044cec3 : add esp, 0x20008 ; ret
0x000000000044cb83 : add esp, 0x2008 ; ret
0x0000000000423d98 : add esp, 0x2028 ; ret
0x000000000044c88d : add esp, 0x208 ; ret
0x0000000000471aaf : add esp, 0x210 ; ret
0x0000000000471757 : add esp, 0x220 ; ret
0x0000000000444c3f : add esp, 0x278 ; ret
0x0000000000401070 : add esp, 0x28 ; ret
0x00000000004302ba : add esp, 0x298 ; ret
0x0000000000447769 : add esp, 0x2c8 ; ret
0x00000000004023bd : add esp, 0x30 ; ret
0x00000000004432f4 : add esp, 0x300 ; ret
0x00000000004021db : add esp, 0x38 ; ret
0x0000000000463d6b : add esp, 0x3b0 ; ret
0x000000000046891f : add esp, 0x3f0 ; ret
0x0000000000402dd3 : add esp, 0x40 ; ret
0x000000000044d953 : add esp, 0x40000008 ; ret
0x000000000044d613 : add esp, 0x4000008 ; ret
0x000000000044d2d3 : add esp, 0x400008 ; ret
0x000000000044cf93 : add esp, 0x40008 ; ret
0x000000000044cc53 : add esp, 0x4008 ; ret
0x000000000044c93d : add esp, 0x408 ; ret
0x0000000000433182 : add esp, 0x428 ; ret
0x0000000000424131 : add esp, 0x450 ; ret
0x0000000000406f8c : add esp, 0x48 ; ret
0x0000000000401731 : add esp, 0x50 ; ret
0x000000000040496f : add esp, 0x58 ; ret
0x0000000000402465 : add esp, 0x60 ; ret
0x0000000000423aa9 : add esp, 0x640 ; ret
0x0000000000402af8 : add esp, 0x68 ; ret
0x0000000000469164 : add esp, 0x6a0 ; ret
0x00000000004022ba : add esp, 0x70 ; ret
0x00000000004181a0 : add esp, 0x78 ; ret
0x0000000000403365 : add esp, 0x80 ; ret
0x000000000044d6e3 : add esp, 0x8000008 ; ret
0x000000000044d3a3 : add esp, 0x800008 ; ret
0x000000000044d063 : add esp, 0x80008 ; ret
0x000000000044cd23 : add esp, 0x8008 ; ret
0x000000000044c9ed : add esp, 0x808 ; ret
0x0000000000407212 : add esp, 0x88 ; ret
0x0000000000403fb1 : add esp, 0x90 ; ret
0x0000000000404be7 : add esp, 0x98 ; ret
0x000000000040a0cf : add esp, 0xa0 ; ret
0x00000000004053af : add esp, 0xa8 ; ret
0x0000000000408844 : add esp, 0xb0 ; ret
0x0000000000430dd5 : add esp, 0xb8 ; ret
0x000000000041c404 : add esp, 0xc8 ; ret
0x0000000000455997 : add esp, 0xd0 ; ret
0x0000000000432b18 : add esp, 0xd8 ; ret
0x0000000000413181 : add esp, 0xe0 ; ret
0x0000000000454ad4 : add esp, 0xe8 ; ret
0x000000000043ea15 : add esp, 0xf0 ; ret
0x0000000000455174 : add esp, 0xf8 ; ret
0x000000000040478b : add esp, 8 ; ret
0x0000000000490909 : add qword ptr [r8 + 0x39], r9 ; ret
0x0000000000429bfa : add qword ptr [r8 - 0x77], rcx ; ret 0x8b48
0x000000000048d826 : add qword ptr [r8], r8 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040cb90 : add qword ptr [rax - 0x77], r9 ; ret 0x8b48
0x00000000004245c2 : add qword ptr [rax], r8 ; ret
0x000000000044866c : add qword ptr [rax], rax ; add bl, al ; call 0x424957
0x00000000004723e2 : add qword ptr [rax], rax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004338b8 : add r9b, byte ptr [rax + 0x39] ; ret
0x000000000044634d : add rax, 0x30 ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000446370 : add rax, 0x38 ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000446357 : add rax, 0x40 ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000446361 : add rax, 0x48 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000044637a : add rax, 0x50 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000044638e : add rax, 0x58 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000044db17 : add rax, rdx ; mov qword ptr [rsp + 8], rax ; ret
0x00000000004101eb : add rax, rsi ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000466df2 : add rcx, 0x40 ; mov qword ptr [rax + 8], rcx ; ret
0x000000000043b36a : add rcx, rdx ; mov qword ptr [rax + 0x68], rcx ; ret
0x000000000044ec8c : add rdi, 0x10 ; ret
0x000000000044e5f5 : add rdi, rdx ; mov qword ptr [r8], rdi ; ret
0x000000000044e69d : add rdx, rdi ; mov qword ptr [r8], rdx ; vzeroupper ; ret
0x0000000000408b30 : add rsp, 0x10 ; ret
0x000000000043f303 : add rsp, 0x100 ; ret
0x000000000044d7b2 : add rsp, 0x10000008 ; ret
0x000000000044d472 : add rsp, 0x1000008 ; ret
0x000000000044d132 : add rsp, 0x100008 ; ret
0x000000000044cdf2 : add rsp, 0x10008 ; ret
0x000000000044cab2 : add rsp, 0x1008 ; ret
0x000000000043e550 : add rsp, 0x108 ; ret
0x000000000045db1a : add rsp, 0x110 ; ret
0x000000000040501c : add rsp, 0x120 ; ret
0x00000000004725d5 : add rsp, 0x138 ; ret
0x000000000044790a : add rsp, 0x148 ; ret
0x0000000000421e38 : add rsp, 0x150 ; ret
0x0000000000470041 : add rsp, 0x158 ; ret
0x00000000004450d0 : add rsp, 0x160 ; ret
0x000000000042248f : add rsp, 0x16a8 ; ret
0x0000000000421b04 : add rsp, 0x170 ; ret
0x00000000004020b8 : add rsp, 0x18 ; ret
0x000000000043bd1c : add rsp, 0x188 ; ret
0x00000000004193a9 : add rsp, 0x190 ; ret
0x000000000040605e : add rsp, 0x198 ; ret
0x000000000046f58b : add rsp, 0x1a0 ; ret
0x00000000004908c5 : add rsp, 0x1a8 ; ret
0x000000000043b8f3 : add rsp, 0x1b0 ; ret
0x0000000000416269 : add rsp, 0x1c8 ; ret
0x0000000000401622 : add rsp, 0x20 ; ret
0x000000000044d882 : add rsp, 0x20000008 ; ret
0x000000000044d542 : add rsp, 0x2000008 ; ret
0x000000000044d202 : add rsp, 0x200008 ; ret
0x000000000044cec2 : add rsp, 0x20008 ; ret
0x000000000044cb82 : add rsp, 0x2008 ; ret
0x0000000000423d97 : add rsp, 0x2028 ; ret
0x000000000044c88c : add rsp, 0x208 ; ret
0x0000000000471aae : add rsp, 0x210 ; ret
0x0000000000471756 : add rsp, 0x220 ; ret
0x0000000000444c3e : add rsp, 0x278 ; ret
0x000000000040106f : add rsp, 0x28 ; ret
0x00000000004302b9 : add rsp, 0x298 ; ret
0x0000000000447768 : add rsp, 0x2c8 ; ret
0x00000000004023bc : add rsp, 0x30 ; ret
0x00000000004432f3 : add rsp, 0x300 ; ret
0x00000000004021da : add rsp, 0x38 ; ret
0x0000000000463d6a : add rsp, 0x3b0 ; ret
0x000000000046891e : add rsp, 0x3f0 ; ret
0x0000000000402dd2 : add rsp, 0x40 ; ret
0x000000000044d952 : add rsp, 0x40000008 ; ret
0x000000000044d612 : add rsp, 0x4000008 ; ret
0x000000000044d2d2 : add rsp, 0x400008 ; ret
0x000000000044cf92 : add rsp, 0x40008 ; ret
0x000000000044cc52 : add rsp, 0x4008 ; ret
0x000000000044c93c : add rsp, 0x408 ; ret
0x0000000000433181 : add rsp, 0x428 ; ret
0x0000000000424130 : add rsp, 0x450 ; ret
0x0000000000406f8b : add rsp, 0x48 ; ret
0x0000000000401730 : add rsp, 0x50 ; ret
0x000000000040496e : add rsp, 0x58 ; ret
0x0000000000402464 : add rsp, 0x60 ; ret
0x0000000000423aa8 : add rsp, 0x640 ; ret
0x0000000000402af7 : add rsp, 0x68 ; ret
0x0000000000469163 : add rsp, 0x6a0 ; ret
0x00000000004022b9 : add rsp, 0x70 ; ret
0x000000000041819f : add rsp, 0x78 ; ret
0x0000000000403364 : add rsp, 0x80 ; ret
0x000000000044d6e2 : add rsp, 0x8000008 ; ret
0x000000000044d3a2 : add rsp, 0x800008 ; ret
0x000000000044d062 : add rsp, 0x80008 ; ret
0x000000000044cd22 : add rsp, 0x8008 ; ret
0x000000000044c9ec : add rsp, 0x808 ; ret
0x0000000000407211 : add rsp, 0x88 ; ret
0x0000000000403fb0 : add rsp, 0x90 ; ret
0x0000000000404be6 : add rsp, 0x98 ; ret
0x000000000040a0ce : add rsp, 0xa0 ; ret
0x00000000004053ae : add rsp, 0xa8 ; ret
0x0000000000408843 : add rsp, 0xb0 ; ret
0x0000000000430dd4 : add rsp, 0xb8 ; ret
0x000000000041c403 : add rsp, 0xc8 ; ret
0x0000000000455996 : add rsp, 0xd0 ; ret
0x0000000000432b17 : add rsp, 0xd8 ; ret
0x0000000000413180 : add rsp, 0xe0 ; ret
0x0000000000454ad3 : add rsp, 0xe8 ; ret
0x000000000043ea14 : add rsp, 0xf0 ; ret
0x0000000000455173 : add rsp, 0xf8 ; ret
0x000000000040478a : add rsp, 8 ; ret
0x000000000044dbfe : aesenc xmm0, xmm0 ; movq qword ptr [rdx], xmm0 ; ret
0x000000000044dbdc : aesenc xmm1, xmm1 ; movq qword ptr [rdx], xmm1 ; ret
0x0000000000449e49 : and al, 0 ; add bl, ch ; ret 0xcccc
0x0000000000486d1a : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor al, 0x24 ; call rbx
0x000000000047a2e5 : and al, 0x10 ; add al, ch ; ret
0x000000000044bb8c : and al, 0x10 ; add bl, al ; mov byte ptr [rsp + 0x10], 0x3c ; ret
0x00000000004046f6 : and al, 0x10 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000453df3 : and al, 0x10 ; add eax, 0xe8000000 ; ret 0xfb23
0x000000000040279d : and al, 0x10 ; add ebx, eax ; mov byte ptr [rsp + 0x10], 0 ; ret
0x00000000004020b6 : and al, 0x10 ; add rsp, 0x18 ; ret
0x000000000044bb86 : and al, 0x10 ; and ebx, eax ; mov byte ptr [rsp + 0x10], 0 ; ret
0x0000000000403aa9 : and al, 0x10 ; call 0x40fd24
0x0000000000403aa8 : and al, 0x10 ; call 0x40fd25
0x000000000047bb3c : and al, 0x10 ; call 0x477de4
0x000000000044bb92 : and al, 0x10 ; cmp al, 0xc3 ; mov byte ptr [rsp + 0x10], 0x3e ; ret
0x000000000042ed08 : and al, 0x10 ; jmp 0x42ecd1
0x000000000042ed07 : and al, 0x10 ; jmp 0x42ecd2
0x000000000047b9bb : and al, 0x10 ; mov byte ptr [rsp + 0x18], 0 ; call 0x477c19
0x000000000048b0f3 : and al, 0x10 ; mov byte ptr [rsp + 0x18], 1 ; ret
0x0000000000482f20 : and al, 0x10 ; mov byte ptr [rsp + 0x18], al ; ret
0x00000000004011a3 : and al, 0x10 ; mov qword ptr [rsp + 0x18], rax ; ret
0x000000000042603f : and al, 0x10 ; mov qword ptr [rsp + 0x18], rcx ; ret
0x00000000004051ed : and al, 0x10 ; mov qword ptr [rsp + 0x20], rax ; ret
0x000000000045dc1c : and al, 0x10 ; mov rax, qword ptr [rdx] ; call rax
0x00000000004046f0 : and al, 0x10 ; ret
0x0000000000450f83 : and al, 0x10 ; rol byte ptr [rsi], 0 ; add al, ch ; ret 0xffd1
0x0000000000401177 : and al, 0x10 ; xchg dword ptr [rbp], eax ; ret
0x0000000000401188 : and al, 0x10 ; xchg qword ptr [rbp], rax ; ret
0x0000000000402db3 : and al, 0x14 ; jmp 0x402d43
0x000000000047b9bf : and al, 0x18 ; add al, ch ; ret 0xffff
0x00000000004505f5 : and al, 0x18 ; add bl, al ; mov byte ptr [rsp + 0x18], 1 ; ret
0x000000000044cf54 : and al, 0x18 ; add byte ptr [rax + rax], al ; call qword ptr [rdx]
0x000000000044cce4 : and al, 0x18 ; add byte ptr [rax], 0 ; call qword ptr [rdx]
0x0000000000422f3d : and al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044cc14 : and al, 0x18 ; add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000044a0b8 : and al, 0x18 ; add ebx, eax ; mov byte ptr [rsp + 0x18], 0 ; ret
0x0000000000401620 : and al, 0x18 ; add rsp, 0x20 ; ret
0x00000000004510a3 : and al, 0x18 ; jmp 0x45106c
0x00000000004510a2 : and al, 0x18 ; jmp 0x45106d
0x00000000004515f3 : and al, 0x18 ; jmp 0x4515bc
0x00000000004515f2 : and al, 0x18 ; jmp 0x4515bd
0x0000000000452723 : and al, 0x18 ; jmp 0x4526ec
0x0000000000452722 : and al, 0x18 ; jmp 0x4526ed
0x000000000047f9b3 : and al, 0x18 ; jmp 0x47f97c
0x000000000047f9b2 : and al, 0x18 ; jmp 0x47f97d
0x0000000000490533 : and al, 0x18 ; jmp 0x4904fc
0x0000000000490532 : and al, 0x18 ; jmp 0x4904fd
0x000000000043dc0a : and al, 0x18 ; mov byte ptr [rsp + 0x20], 1 ; ret
0x000000000045d3f4 : and al, 0x18 ; mov dword ptr [rsp + 0x1c], edx ; ret
0x000000000044f79c : and al, 0x18 ; mov eax, 0x26 ; syscall ; ret
0x0000000000471c34 : and al, 0x18 ; mov qword ptr [rsp + 0x20], rax ; ret
0x000000000045d6d7 : and al, 0x18 ; mov qword ptr [rsp], r8 ; call rax
0x000000000041afd5 : and al, 0x18 ; mov qword ptr [rsp], rax ; call 0x427248
0x000000000041afd4 : and al, 0x18 ; mov qword ptr [rsp], rax ; call 0x427249
0x000000000048f4c7 : and al, 0x18 ; mov qword ptr [rsp], rcx ; call rax
0x000000000045fd7f : and al, 0x18 ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004011a8 : and al, 0x18 ; ret
0x00000000004019c5 : and al, 0x18 ; sete byte ptr [rax] ; ret
0x000000000048b24e : and al, 0x1c ; jmp 0x48b217
0x000000000048b24d : and al, 0x1c ; jmp 0x48b218
0x000000000045d3f8 : and al, 0x1c ; ret
0x000000000040b139 : and al, 0x20 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048e444 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046cbf6 : and al, 0x20 ; add ebx, eax ; mov byte ptr [rsp + 0x20], 0 ; ret
0x000000000040106d : and al, 0x20 ; add rsp, 0x28 ; ret
0x000000000043a7c4 : and al, 0x20 ; call 0x426a54
0x000000000043a7c3 : and al, 0x20 ; call 0x426a55
0x0000000000429d15 : and al, 0x20 ; jmp 0x429c6a
0x0000000000419ff8 : and al, 0x20 ; mov rax, qword ptr [rbx] ; mov rdx, rbx ; call rax
0x0000000000401168 : and al, 0x20 ; ret
0x000000000040aabd : and al, 0x24 ; mov rax, qword ptr [rdx] ; call rax
0x00000000004023ba : and al, 0x28 ; add rsp, 0x30 ; ret
0x0000000000440559 : and al, 0x28 ; jmp 0x4404c8
0x000000000040c085 : and al, 0x28 ; mov rax, qword ptr [rdx] ; call rax
0x000000000044da66 : and al, 0x28 ; mov rdi, rbx ; mov rcx, rbx ; call rax
0x000000000044dab0 : and al, 0x28 ; mov rsp, rsi ; mov dword ptr [rsp + 0x18], eax ; ret
0x000000000044f94d : and al, 0x28 ; ret
0x000000000044fb49 : and al, 0x30 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004021d8 : and al, 0x30 ; add rsp, 0x38 ; ret
0x000000000040e4c4 : and al, 0x30 ; jmp 0x40e48d
0x000000000040e4c3 : and al, 0x30 ; jmp 0x40e48e
0x000000000042de08 : and al, 0x30 ; mov qword ptr [rsp], rax ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000044fb3e : and al, 0x30 ; ret
0x0000000000402dd0 : and al, 0x38 ; add rsp, 0x40 ; ret
0x000000000044c5d7 : and al, 0x38 ; call qword ptr [rdx]
0x00000000004798a2 : and al, 0x38 ; mov qword ptr [rsp], rbx ; call rdx
0x0000000000408c57 : and al, 0x38 ; mov qword ptr [rsp], rbx ; mov rbx, qword ptr [rdx] ; call rbx
0x000000000047990f : and al, 0x38 ; mov qword ptr [rsp], rcx ; call rax
0x00000000004720a9 : and al, 0x38 ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000406f89 : and al, 0x40 ; add rsp, 0x48 ; ret
0x000000000045e281 : and al, 0x40 ; jmp 0x45e134
0x000000000045e280 : and al, 0x40 ; jmp 0x45e135
0x0000000000427794 : and al, 0x40 ; mov qword ptr [rsp], rax ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000047a680 : and al, 0x40 ; mov qword ptr [rsp], rcx ; call rax
0x0000000000479b09 : and al, 0x40 ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000455f17 : and al, 0x40 ; mov rax, qword ptr [rdx] ; call rax
0x000000000048bf6d : and al, 0x40 ; mov rcx, qword ptr [rdx] ; call rcx
0x00000000004723e1 : and al, 0x48 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000404789 : and al, 0x48 ; add esp, 8 ; ret
0x000000000040172e : and al, 0x48 ; add rsp, 0x50 ; ret
0x000000000045cb61 : and al, 0x48 ; call 0x44e6d8
0x000000000045cb60 : and al, 0x48 ; call 0x44e6d9
0x000000000044f9f9 : and al, 0x48 ; lea eax, dword ptr [rip - 0x17981] ; call rax
0x0000000000408777 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; mov rcx, qword ptr [rdx] ; call rcx
0x0000000000407160 : and al, 0x48 ; mov dword ptr [rsp + 8], ebx ; mov rsi, qword ptr [rdx] ; call rsi
0x0000000000407b56 : and al, 0x48 ; mov dword ptr [rsp + 8], ecx ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000406ce7 : and al, 0x48 ; mov dword ptr [rsp + 8], ecx ; mov rcx, qword ptr [rdx] ; call rcx
0x0000000000406f1e : and al, 0x48 ; mov dword ptr [rsp + 8], ecx ; mov rsi, qword ptr [rdx] ; call rsi
0x0000000000479652 : and al, 0x48 ; mov dword ptr [rsp + 8], edi ; call 0x425948
0x00000000004079cb : and al, 0x48 ; mov eax, dword ptr [rdx] ; call rax
0x0000000000408c5c : and al, 0x48 ; mov ebx, dword ptr [rdx] ; call rbx
0x000000000040a02b : and al, 0x48 ; mov ecx, dword ptr [rdx] ; call rcx
0x0000000000406c1d : and al, 0x48 ; mov edi, dword ptr [rdx] ; call rdi
0x000000000040c081 : and al, 0x48 ; mov edx, dword ptr [rsp + 0x28] ; mov rax, qword ptr [rdx] ; call rax
0x000000000048bf69 : and al, 0x48 ; mov edx, dword ptr [rsp + 0x40] ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000042ad3f : and al, 0x48 ; mov edx, dword ptr [rsp + 0x68] ; mov rax, qword ptr [rdx] ; call rax
0x0000000000403aa4 : and al, 0x48 ; mov qword ptr [rsp + 0x10], rax ; call 0x40fd29
0x0000000000454d1f : and al, 0x48 ; mov qword ptr [rsp], rax ; call 0x401008
0x0000000000454d1e : and al, 0x48 ; mov qword ptr [rsp], rax ; call 0x401009
0x000000000041af6f : and al, 0x48 ; mov qword ptr [rsp], rax ; call 0x427248
0x000000000041af6e : and al, 0x48 ; mov qword ptr [rsp], rax ; call 0x427249
0x000000000047a820 : and al, 0x48 ; mov qword ptr [rsp], rcx ; call rax
0x0000000000407bec : and al, 0x4c ; mov dword ptr [rsp + 8], ecx ; mov rax, qword ptr [rdx] ; call rax
0x000000000040496c : and al, 0x50 ; add rsp, 0x58 ; ret
0x0000000000466c3a : and al, 0x50 ; mov byte ptr [rsp + 0x58], sil ; ret
0x0000000000403972 : and al, 0x50 ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000402462 : and al, 0x58 ; add rsp, 0x60 ; ret
0x000000000044c657 : and al, 0x58 ; call qword ptr [rdx]
0x0000000000409297 : and al, 0x58 ; mov qword ptr [rsp], rbx ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000472d4f : and al, 0x58 ; mov qword ptr [rsp], rcx ; call rax
0x0000000000472c8c : and al, 0x58 ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000406c18 : and al, 0x58 ; mov qword ptr [rsp], rsi ; mov rdi, qword ptr [rdx] ; call rdi
0x0000000000466c3f : and al, 0x58 ; ret
0x0000000000402af5 : and al, 0x60 ; add rsp, 0x68 ; ret
0x000000000047bb37 : and al, 0x60 ; mov qword ptr [rsp + 0x10], rdx ; call 0x477de9
0x0000000000406e4b : and al, 0x60 ; mov qword ptr [rsp], rsi ; mov rdi, qword ptr [rdx] ; call rdi
0x00000000004022b7 : and al, 0x68 ; add rsp, 0x70 ; ret
0x0000000000456a9e : and al, 0x68 ; mov qword ptr [rsp], rax ; call rbx
0x0000000000472d29 : and al, 0x68 ; mov qword ptr [rsp], rbx ; call rdx
0x00000000004860a9 : and al, 0x68 ; mov qword ptr [rsp], rcx ; call rax
0x0000000000472d70 : and al, 0x68 ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000472cb7 : and al, 0x68 ; mov qword ptr [rsp], rsi ; call rbx
0x000000000042ad43 : and al, 0x68 ; mov rax, qword ptr [rdx] ; call rax
0x000000000041819d : and al, 0x70 ; add rsp, 0x78 ; ret
0x00000000004831bd : and al, 0x70 ; mov qword ptr [rsp], rdx ; call rax
0x0000000000403362 : and al, 0x78 ; add rsp, 0x80 ; ret
0x000000000047ba33 : and al, 0x78 ; mov qword ptr [rsp], rcx ; call rax
0x000000000047b980 : and al, 0x78 ; mov qword ptr [rsp], rdx ; call rcx
0x000000000047b9ea : and al, 0x78 ; mov qword ptr [rsp], rsi ; call rbx
0x0000000000413054 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000444bd3 : and al, 0x88 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000418190 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000410871 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048fcbe : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000470d36 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call rcx
0x0000000000470d72 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x00000000004166f9 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041c177 : and al, 0x98 ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000471037 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret 0x8948
0x000000000043ca92 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x0000000000471992 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000478378 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret 0x60
0x000000000046f4cf : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x1074
0x000000000045d40e : and al, 0xc ; ret
0x000000000047a2e2 : and al, 0xc6 ; and al, 0x10 ; add al, ch ; ret
0x0000000000443070 : and al, 0xc8 ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000447617 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000474409 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7e7d
0x000000000043bbcc : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret
0x000000000043bb8b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret 0
0x0000000000468a99 : and al, 0xd0 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8548
0x0000000000476c65 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000448484 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4810
0x0000000000489a6a : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000438914 : and al, 0xe8 ; add eax, dword ptr [rax] ; add al, ch ; ret 0x16d
0x0000000000472eab : and al, 0xe8 ; call rbx
0x0000000000473682 : and al, 0xe8 ; clc ; ret 0xffff
0x000000000041af4d : and al, 0xe8 ; in eax, dx ; ret 0
0x000000000041db4b : and al, 0xe8 ; jmp rsi
0x0000000000461bab : and al, 0xe8 ; lahf ; ret 0xfffa
0x000000000040e857 : and al, 0xe8 ; ret
0x000000000042ed58 : and al, 0xe8 ; ret 0x1d4
0x000000000042d198 : and al, 0xe8 ; ret 0x3e
0x000000000043eb18 : and al, 0xe8 ; ret 0xa
0x000000000042cf28 : and al, 0xe8 ; ret 0xfdf4
0x0000000000454d24 : and al, 0xe8 ; salc ; ret 0xfffa
0x00000000004202c3 : and al, 0xe8 ; xchg dword ptr [rax], esi ; add al, ch ; ret 0x69
0x000000000048a4d4 : and al, 0xf0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000433343 : and al, 3 ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; ret
0x000000000044d9b6 : and al, 5 ; mov rbx, qword ptr [rdx] ; jmp rbx
0x0000000000409853 : and al, 8 ; adc eax, 0xe8000000 ; ret 0x1c8
0x000000000043b13a : and al, 8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x427398
0x000000000043b139 : and al, 8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x427399
0x000000000041b0db : and al, 8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x427398
0x000000000041b0da : and al, 8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x427399
0x00000000004409de : and al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000408b2e : and al, 8 ; add rsp, 0x10 ; ret
0x0000000000479656 : and al, 8 ; call 0x425944
0x0000000000479673 : and al, 8 ; call 0x425945
0x0000000000416002 : and al, 8 ; call 0x427398
0x0000000000416001 : and al, 8 ; call 0x427399
0x000000000044f822 : and al, 8 ; mov dword ptr [rsp + 0x10], edx ; ret
0x000000000045d40a : and al, 8 ; mov dword ptr [rsp + 0xc], edx ; ret
0x000000000044f77b : and al, 8 ; mov eax, 0x3e ; syscall ; ret
0x000000000044f75b : and al, 8 ; mov eax, 0xc8 ; syscall ; ret
0x000000000044f602 : and al, 8 ; mov eax, 0xe7 ; syscall ; ret
0x0000000000401173 : and al, 8 ; mov eax, dword ptr [rsp + 0x10] ; xchg dword ptr [rbp], eax ; ret
0x0000000000425ff3 : and al, 8 ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000040a026 : and al, 8 ; mov qword ptr [rsp], r10 ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000040aab9 : and al, 8 ; mov qword ptr [rsp], r12 ; mov rax, qword ptr [rdx] ; call rax
0x00000000004086d3 : and al, 8 ; mov qword ptr [rsp], r15 ; mov rax, qword ptr [rdx] ; call rax
0x00000000004079c6 : and al, 8 ; mov qword ptr [rsp], r9 ; mov rax, qword ptr [rdx] ; call rax
0x0000000000470c52 : and al, 8 ; mov qword ptr [rsp], rcx ; call rax
0x000000000040170c : and al, 8 ; mov rax, qword ptr [rdx] ; call rax
0x0000000000407b5a : and al, 8 ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000446151 : and al, 8 ; mov rcx, qword ptr [rax] ; mov rdx, rax ; call rcx
0x0000000000406ceb : and al, 8 ; mov rcx, qword ptr [rdx] ; call rcx
0x0000000000443f14 : and al, 8 ; mov rsi, qword ptr [rax] ; mov rdx, rax ; call rsi
0x0000000000406f22 : and al, 8 ; mov rsi, qword ptr [rdx] ; call rsi
0x00000000004061b4 : and al, 8 ; movsd qword ptr [rsp + 0x10], xmm0 ; ret
0x0000000000428aba : and al, 8 ; or al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x404dc8
0x0000000000428ab9 : and al, 8 ; or al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x404dc9
0x000000000041b0b1 : and al, 8 ; or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x427398
0x000000000041b0b0 : and al, 8 ; or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x427399
0x000000000044d982 : and al, 8 ; pause ; sub eax, 1 ; jne 0x44d98d ; ret
0x0000000000432169 : and al, 8 ; ret
0x000000000044b134 : and al, 8 ; sbb al, 0 ; add byte ptr [rax], al ; call 0x427398
0x000000000044b133 : and al, 8 ; sbb al, 0 ; add byte ptr [rax], al ; call 0x427399
0x000000000042b003 : and al, byte ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000483bb7 : and al, ch ; ret
0x000000000048b28b : and byte ptr [r8 - 0x77], cl ; adc al, 0x24 ; call rcx
0x0000000000408834 : and byte ptr [r9 + 0x39], cl ; ret 0x1074
0x00000000004117da : and byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000040652f : and byte ptr [rax + 0x31], cl ; enter -0x76b8, 0x44 ; and al, 0x18 ; ret
0x000000000040659c : and byte ptr [rax + 0x31], cl ; ror dword ptr [rax - 0x77], 0x4c ; and al, 0x18 ; ret
0x0000000000481924 : and byte ptr [rax + 0x39], cl ; ret
0x00000000004629f6 : and byte ptr [rax + 0x39], cl ; ret 0x1074
0x000000000047959d : and byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000411dec : and byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d48
0x000000000044db16 : and byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x77], 1 ; and al, 8 ; ret
0x000000000045fee1 : and byte ptr [rax - 0x75], cl ; adc dword ptr [rax - 9], ecx ; ret 0xfff8
0x0000000000404589 : and byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x50 ; mov rbx, qword ptr [rdx] ; call rbx
0x00000000004525f8 : and byte ptr [rax - 0x75], cl ; sub al, 0x24 ; add rsp, 8 ; ret
0x000000000048e7d4 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x000000000048b28c : and byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call rcx
0x000000000040894f : and byte ptr [rax - 0x7f], cl ; ret 0x401
0x00000000004487b4 : and byte ptr [rax - 0x80], al ; call qword ptr [rax]
0x0000000000421a8e : and byte ptr [rax - 1], cl ; ret 0x8948
0x00000000004337b9 : and byte ptr [rax - 1], cl ; ret 0xc148
0x000000000043d8a6 : and byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x873
0x000000000044d200 : and byte ptr [rax], al ; add rsp, 0x200008 ; ret
0x000000000044d1c7 : and byte ptr [rax], al ; call qword ptr [rdx]
0x000000000043dbca : and byte ptr [rax], al ; ret
0x000000000044f9a2 : and byte ptr [rbp + 0x48], dl ; mov ebp, esp ; and rsp, 0xfffffffffffffff0 ; call rax
0x0000000000408835 : and byte ptr [rcx + 0x39], cl ; ret 0x1074
0x000000000045f663 : and byte ptr [rcx - 0x39], cl ; ret 0
0x000000000040501f : and byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000043dc0f : and byte ptr [rcx], al ; ret
0x0000000000414767 : and byte ptr [rcx], bh ; ret
0x000000000041aa8a : and byte ptr [rcx], bl ; jmp qword ptr [rcx]
0x000000000044e8f7 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; lea rdi, qword ptr [rdi + 0x40] ; ret
0x0000000000417ee8 : and byte ptr [rdi], cl ; mov dh, 0x99 ; ret
0x0000000000471759 : and byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000044e4fe : and ch, al ; in eax, 0x74 ; ret 0xfdc5
0x00000000004272b4 : and cl, byte ptr [rax - 0x77] ; ret 0x8348
0x0000000000408ca0 : and cl, byte ptr [rdi] ; mov dh, 0x52 ; or dh, dh ; ret 0x7408
0x000000000044c35c : and eax, 0x1003 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000046e6e9 : and eax, 0x1f ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000477f16 : and eax, 0x1f ; mov qword ptr [rsp + 0x20], rax ; ret
0x00000000004333bf : and eax, 0xf000005 ; xchg eax, esp ; ret 0xd284
0x000000000044dac9 : and eax, 0xfffffff8 ; ret
0x000000000044bb88 : and ebx, eax ; mov byte ptr [rsp + 0x10], 0 ; ret
0x000000000041ab16 : and ebx, esi ; test bl, 0x10 ; setne dl ; jmp 0x41aab5
0x0000000000401a7b : and ecx, eax ; mov byte ptr [rsp + 0x18], cl ; ret
0x0000000000401af2 : and ecx, edx ; mov byte ptr [rsp + 0x18], cl ; ret
0x0000000000401af0 : and edx, eax ; and ecx, edx ; mov byte ptr [rsp + 0x18], cl ; ret
0x000000000044f978 : and esp, 0xfffffff0 ; call rax
0x000000000044fb85 : and esp, 0xfffffff0 ; mov qword ptr [rsp], rbx ; call rax
0x0000000000477f15 : and rax, 0x1f ; mov qword ptr [rsp + 0x20], rax ; ret
0x000000000044f977 : and rsp, 0xfffffffffffffff0 ; call rax
0x000000000044fb84 : and rsp, 0xfffffffffffffff0 ; mov qword ptr [rsp], rbx ; call rax
0x0000000000421cca : bnd jg 0x421c64 ; mov byte ptr [rsp + 0x10], 1 ; ret
0x000000000041044c : bnd jmp 0x41042c ; mov rdx, rax ; jmp 0x410405
0x000000000044e639 : bsf edx, edx ; je 0x44e5f2 ; mov qword ptr [r8], rdx ; ret
0x0000000000454d25 : call 0x401002
0x0000000000428ac0 : call 0x404dc2
0x0000000000430e72 : call 0x40c258
0x0000000000461bac : call 0x40de52
0x0000000000403aab : call 0x40fd22
0x0000000000427919 : call 0x413b72
0x000000000040e6a7 : call 0x41a8e2
0x0000000000418ced : call 0x41d106
0x0000000000449baa : call 0x4225f8
0x0000000000423e17 : call 0x4245d9
0x00000000004386cf : call 0x424952
0x00000000004686c6 : call 0x4249c2
0x000000000041878a : call 0x424a32
0x0000000000479658 : call 0x425942
0x000000000043a7c6 : call 0x426a52
0x0000000000425f13 : call 0x426a56
0x000000000042907d : call 0x426a58
0x0000000000428c37 : call 0x426a59
0x000000000043a7f1 : call 0x426ad2
0x000000000042a10b : call 0x426ad8
0x000000000043aa77 : call 0x426ce2
0x000000000040d303 : call 0x426ce6
0x00000000004145d7 : call 0x426da6
0x000000000041444e : call 0x426da8
0x00000000004161ad : call 0x4270c9
0x000000000044a9a1 : call 0x4271d7
0x00000000004456fe : call 0x4271d9
0x000000000041af4e : call 0x427242
0x0000000000437014 : call 0x427246
0x000000000041ac14 : call 0x427248
0x0000000000446a1b : call 0x427249
0x00000000004202c4 : call 0x427356
0x0000000000427548 : call 0x427358
0x00000000004176ad : call 0x427359
0x000000000041b0b7 : call 0x427392
0x0000000000416004 : call 0x427396
0x00000000004199cc : call 0x427398
0x000000000042b1e7 : call 0x428cb9
0x00000000004025ef : call 0x42e832
0x000000000042c783 : call 0x431486
0x0000000000410095 : call 0x44c372
0x0000000000444eb3 : call 0x44c376
0x000000000045cb63 : call 0x44e6d6
0x000000000045cb62 : call 0x44e6d7
0x000000000045cd6f : call 0x44e6d8
0x0000000000429c94 : call 0x44fd86
0x000000000045f92b : call 0x456977
0x0000000000473683 : call 0x46f982
0x000000000047b9c2 : call 0x477c12
0x000000000047bb3e : call 0x477de2
0x0000000000445764 : call 0x49445583
0x000000000045db9d : call 0x7f0814f1
0x0000000000466dd2 : call 0xffffffffc247b9fb
0x000000000040f983 : call 0xffffffffc26a4691
0x0000000000410d3d : call 0xffffffffc2c4554e
0x0000000000410e72 : call 0xffffffffc2c45683
0x0000000000402d08 : call 0xffffffffc2c97517
0x0000000000454ad6 : call 0xffffffffc3454adf
0x0000000000454d8e : call 0xffffffffc3454d97
0x000000000046fbc1 : call 0xffffffffc346fbca
0x000000000044d987 : call 0xffffffffc43e4e91
0x0000000000410990 : call 0xffffffffc44051a0
0x0000000000410da8 : call 0xffffffffc44055b9
0x0000000000414cd5 : call qword ptr [r10]
0x000000000042628d : call qword ptr [rax]
0x00000000004052bb : call qword ptr [rbx]
0x000000000040d9d9 : call qword ptr [rcx]
0x0000000000413c25 : call qword ptr [rdx]
0x000000000044fce0 : call r12
0x0000000000401711 : call rax
0x0000000000403977 : call rbx
0x0000000000406cf0 : call rcx
0x0000000000406c21 : call rdi
0x0000000000470cf0 : call rdx
0x0000000000406f27 : call rsi
0x000000000044fce1 : call rsp
0x0000000000402aac : cdq ; cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x4677
0x0000000000417eeb : cdq ; ret
0x0000000000483a83 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call rcx
0x000000000047944a : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x000000000044fc9f : clc ; add byte ptr [rbp + rax - 0x77], dh ; and al, 0x30 ; ret
0x0000000000439bd1 : clc ; add dword ptr [rdi - 0xc], esi ; mov qword ptr [rsp + 0x10], rcx ; ret
0x000000000044e2a5 : clc ; cmp rcx, rdx ; sete byte ptr [rax] ; ret
0x000000000044e272 : clc ; ja 0x44e240 ; add byte ptr [rax], al ; ret
0x000000000044e689 : clc ; ja 0x44e6de ; mov dword ptr [rax], 0xffffffff ; ret
0x000000000044ee54 : clc ; ja 0x44ee23 ; mov byte ptr [rdi], al ; mov byte ptr [rdi + rbx - 1], al ; ret
0x00000000004056c4 : clc ; mov ah, 9 ; add byte ptr [rax + 0x39], cl ; ret 0x7975
0x000000000044f06d : clc ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + rbx - 8], rcx ; ret
0x000000000041012a : clc ; mov rsi, r8 ; cmp rcx, rdx ; jb 0x4100e9 ; ret
0x000000000044ee7a : clc ; ret
0x0000000000473684 : clc ; ret 0xffff
0x000000000044d9b2 : clc ; sub qword ptr [rsp], 5 ; mov rbx, qword ptr [rdx] ; jmp rbx
0x0000000000486a58 : cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000047f9ae : cld ; dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x47f981
0x00000000004824ac : cld ; je 0x4824bd ; dec rbx ; jmp 0x482480
0x000000000044f057 : cld ; mov dword ptr [rdi], eax ; mov dword ptr [rdi + rbx - 4], ecx ; ret
0x000000000044ee6d : cld ; ret
0x0000000000455c30 : cli ; add eax, dword ptr [rbp - 0x14538b2e] ; ret
0x0000000000467119 : cli ; add ebp, ebx ; add ecx, dword ptr [rax - 0x77] ; ret 0x8348
0x000000000044067b : cli ; add ecx, dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0x6348
0x00000000004750a4 : cli ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x0000000000480df5 : cli ; dec dword ptr [rdi] ; or ebp, eax ; ret 0xfa3b
0x0000000000489242 : cli ; js 0x48924f ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, esp ; ret 0x850f
0x000000000044e69f : cli ; mov qword ptr [r8], rdx ; vzeroupper ; ret
0x000000000044c1f5 : cli ; mov rdi, qword ptr [rdi] ; call rdi
0x000000000044c2c5 : cli ; mov rdi, qword ptr [rdi] ; jmp rdi
0x000000000041cc87 : cli ; std ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4574
0x0000000000482f83 : cmc ; mov byte ptr [rsp + 0x18], 0 ; ret
0x00000000004686c7 : cmc ; ret 0xfffb
0x00000000004560a9 : cmovs ecx, dword ptr [rcx - 0x76b7efbd] ; ret 0x8948
0x00000000004824ab : cmp ah, 0x65 ; je 0x4824be ; dec rbx ; jmp 0x482481
0x000000000044dbde : cmp ah, bl ; leave ; movq qword ptr [rdx], xmm1 ; ret
0x0000000000479449 : cmp al, 0 ; add byte ptr [rax], al ; mov qword ptr [rsp], rcx ; call rax
0x000000000044f9f8 : cmp al, 0x24 ; lea rax, qword ptr [rip - 0x17981] ; call rax
0x00000000004086d7 : cmp al, 0x24 ; mov rax, qword ptr [rdx] ; call rax
0x000000000044bb94 : cmp al, 0xc3 ; mov byte ptr [rsp + 0x10], 0x3e ; ret
0x0000000000453e3a : cmp al, cl ; sete al ; mov byte ptr [rsp + 0x18], al ; ret
0x00000000004667ab : cmp bl, 0x35 ; setae dl ; jmp 0x466798
0x000000000043ada3 : cmp byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000047bc69 : cmp byte ptr [rax + 0x39], cl ; ret 0x1074
0x000000000044c1f1 : cmp byte ptr [rax + 0x48], dl ; mov edx, edi ; mov rdi, qword ptr [rdi] ; call rdi
0x000000000046109e : cmp byte ptr [rax + 1], cl ; ret
0x0000000000425b7f : cmp byte ptr [rax - 0x75], cl ; pop rdx ; sub byte ptr [rax + 0x39], cl ; ret
0x0000000000441941 : cmp byte ptr [rax - 0x75], cl ; sub al, 0x24 ; add rsp, 8 ; ret
0x00000000004720aa : cmp byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call rcx
0x0000000000446373 : cmp byte ptr [rax - 0x77], cl ; and al, 0x10 ; ret
0x0000000000479910 : cmp byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x00000000004798a3 : cmp byte ptr [rax - 0x77], cl ; sbb al, 0x24 ; call rdx
0x0000000000408c58 : cmp byte ptr [rax - 0x77], cl ; sbb al, 0x24 ; mov rbx, qword ptr [rdx] ; call rbx
0x00000000004725d8 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000043ed42 : cmp byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x000000000046e53c : cmp byte ptr [rdi], cl ; mov dh, 0x52 ; adc al, 0xf6 ; ret 0x7402
0x000000000040cbb7 : cmp byte ptr [rdx], dl ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000046f845 : cmp cl, byte ptr [rax + 0x29] ; ror byte ptr [rax - 0x77], 1 ; ret
0x0000000000474ff1 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000410d85 : cmp cl, byte ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000402d54 : cmp cl, byte ptr [rax - 1] ; ret 0x8548
0x000000000040a34c : cmp cl, ch ; add dword ptr [rdx], 0 ; add byte ptr [rax - 1], cl ; ret 0xf44
0x0000000000457524 : cmp dh, 0x80 ; jae 0x457535 ; inc rdx ; jmp 0x457514
0x0000000000457664 : cmp dh, 0x80 ; jae 0x457675 ; inc rdx ; jmp 0x457654
0x000000000045753e : cmp dh, 0xf1 ; jne 0x45754f ; inc rdx ; jmp 0x457514
0x000000000045767e : cmp dh, 0xf1 ; jne 0x45768f ; inc rdx ; jmp 0x457654
0x000000000046d959 : cmp dh, bl ; je 0x46d927 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000046da29 : cmp dh, bl ; je 0x46d9f7 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000046cbf0 : cmp dh, cl ; jne 0x46cbec ; mov byte ptr [rsp + 0x20], 1 ; ret
0x0000000000427916 : cmp dword ptr [rbx], edx ; add al, ch ; push rdx ; ret 0xfffe
0x00000000004289a6 : cmp dword ptr [rdx], eax ; add cl, ch ; ret 0xfffe
0x000000000044fc9e : cmp eax, 0 ; je 0x44fcb1 ; mov dword ptr [rsp + 0x30], eax ; ret
0x0000000000439bb6 : cmp eax, 0x1a ; jl 0x439b96 ; ret
0x000000000048a090 : cmp eax, 0x4c000000 ; mov dword ptr [rsp], eax ; call rax
0x000000000045b8cf : cmp eax, 0x85000ffa ; ror byte ptr [rdi], 0x85 ; ret 0xd
0x000000000044ff55 : cmp eax, ecx ; sete al ; mov byte ptr [rsp + 0x18], al ; ret
0x000000000043f608 : cmp eax, edx ; jae 0x43f5f7 ; mov qword ptr [rsp + 0x10], rcx ; ret
0x000000000044f03b : cmp ebx, 4 ; jb 0x44f04e ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x0000000000472066 : cmp ebx, eax ; jl 0x47205a ; mov dword ptr [rsp + 0x28], edx ; ret
0x000000000049090c : cmp ebx, eax ; jl 0x4908f7 ; ret
0x00000000004505ef : cmp ebx, esi ; je 0x4505c7 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x00000000004522df : cmp ebx, esi ; je 0x4522b7 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x00000000004226c2 : cmp ecx, 0x43 ; jl 0x422692 ; ret
0x000000000044f8b5 : cmp ecx, dword ptr [rax + 1] ; ror byte ptr [rax - 0x77], 1 ; and al, 8 ; ret
0x0000000000480f53 : cmp ecx, dword ptr [rbp + 0x39] ; sal dword ptr [rdx - 0x34], -0x17 ; ret
0x0000000000457553 : cmp ecx, eax ; jle 0x457562 ; inc rdx ; jmp 0x457513
0x0000000000457693 : cmp ecx, eax ; jle 0x4576a2 ; inc rdx ; jmp 0x457653
0x0000000000401a4e : cmp ecx, eax ; sete al ; mov byte ptr [rsp + 0x18], al ; ret
0x000000000044bb80 : cmp ecx, ebx ; jne 0x44bb93 ; mov byte ptr [rsp + 0x10], 0x21 ; ret
0x000000000041012f : cmp ecx, edx ; jb 0x4100e4 ; ret
0x00000000004268bf : cmp ecx, edx ; je 0x4268d2 ; mov byte ptr [rsp + 0x10], 0 ; ret
0x000000000044e294 : cmp ecx, edx ; je 0x44e282 ; mov byte ptr [rax], 0 ; ret
0x000000000044e2a7 : cmp ecx, edx ; sete byte ptr [rax] ; ret
0x000000000040b12c : cmp ecx, esi ; jne 0x40b10e ; mov qword ptr [rsp + 0x20], r8 ; ret
0x0000000000430ff4 : cmp edi, edi ; dec dword ptr [rdi] ; or ebp, eax ; ret 0xff39
0x0000000000480df4 : cmp edi, edx ; dec dword ptr [rdi] ; or ebp, eax ; ret 0xfa3b
0x0000000000417e74 : cmp edx, 6 ; jne 0x417ed4 ; jmp 0x417e44
0x00000000004100c9 : cmp edx, eax ; jb 0x4100bd ; ret
0x0000000000410169 : cmp edx, eax ; jb 0x41015d ; ret
0x000000000043b9ba : cmp edx, eax ; jl 0x43b9b0 ; mov dword ptr [rsp + 0x10], edx ; ret
0x0000000000466056 : cmp edx, eax ; jl 0x466057 ; mov qword ptr [rsp + 0x20], rax ; ret
0x000000000044e61c : cmp edx, ebx ; jae 0x44e5f1 ; mov qword ptr [r8], rdx ; ret
0x0000000000421cc9 : cmp edx, esi ; jg 0x421c65 ; mov byte ptr [rsp + 0x10], 1 ; ret
0x0000000000432ae2 : cmp esi, 0xc748ffff ; ret 0xffff
0x0000000000457552 : cmp r9, rax ; jle 0x457563 ; inc rdx ; jmp 0x457514
0x0000000000457692 : cmp r9, rax ; jle 0x4576a3 ; inc rdx ; jmp 0x457654
0x0000000000439bb5 : cmp rax, 0x1a ; jl 0x439b97 ; ret
0x0000000000472065 : cmp rbx, rax ; jl 0x47205b ; mov dword ptr [rsp + 0x28], edx ; ret
0x000000000049090b : cmp rbx, rax ; jl 0x4908f8 ; ret
0x00000000004226c1 : cmp rcx, 0x43 ; jl 0x422693 ; ret
0x000000000041012e : cmp rcx, rdx ; jb 0x4100e5 ; ret
0x000000000044e293 : cmp rcx, rdx ; je 0x44e283 ; mov byte ptr [rax], 0 ; ret
0x000000000044e2a6 : cmp rcx, rdx ; sete byte ptr [rax] ; ret
0x00000000004100c8 : cmp rdx, rax ; jb 0x4100be ; ret
0x0000000000410168 : cmp rdx, rax ; jb 0x41015e ; ret
0x0000000000457523 : cmp sil, 0x80 ; jae 0x457536 ; inc rdx ; jmp 0x457515
0x0000000000457663 : cmp sil, 0x80 ; jae 0x457676 ; inc rdx ; jmp 0x457655
0x000000000045753d : cmp sil, 0xf1 ; jne 0x457550 ; inc rdx ; jmp 0x457515
0x000000000045767d : cmp sil, 0xf1 ; jne 0x457690 ; inc rdx ; jmp 0x457655
0x000000000044baa3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x000000000040e6a2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov qword ptr [rsp], rsi ; call 0x41a8e7
0x0000000000479695 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfffa
0x000000000040f2c5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; rol byte ptr [rbx], 1 ; add cl, ch ; ret 0xfffe
0x0000000000401161 : cmpxchg dword ptr [rbp], ecx ; sete byte ptr [rsp + 0x20] ; ret
0x0000000000431b8f : cwde ; add byte ptr [rax + 0x39], cl ; ret 0x8c0f
0x000000000041c178 : cwde ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000047820c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; fimul dword ptr [rax - 9] ; ret 0x60
0x0000000000474692 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call rcx
0x0000000000470d4e : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x0000000000470ce8 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000402aad : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x4677
0x00000000004071df : cwde ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x5a ; or dh, dh ; ret
0x0000000000429c06 : cwde ; ret
0x0000000000429c40 : cwde ; ret 0
0x000000000042a441 : dec byte ptr [rax + 0x39] ; ret 0x257d
0x000000000043e0df : dec byte ptr [rax - 0x77] ; ret 0xf748
0x000000000044f031 : dec dword ptr [rax + 0x1f4c8807] ; inc ebx ; ret
0x00000000004072e8 : dec dword ptr [rax + 0x21] ; ret
0x00000000004093bf : dec dword ptr [rax + 0x21] ; ret 0x8b48
0x000000000040cbc7 : dec dword ptr [rax + 0x39] ; ret
0x000000000045e16e : dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000004634dc : dec dword ptr [rax + 0x39] ; ret 0x894d
0x0000000000474fb8 : dec dword ptr [rax + 1] ; ret 0x284
0x0000000000432933 : dec dword ptr [rax - 0x39] ; ret
0x0000000000414dea : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000044fae1 : dec dword ptr [rax - 0x75] ; add eax, 0xeef17 ; jmp rax
0x000000000044faa1 : dec dword ptr [rax - 0x75] ; add eax, 0xeef57 ; jmp rax
0x000000000042fa55 : dec dword ptr [rax - 0x75] ; jl 0x42fa86 ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000432045 : dec dword ptr [rax - 0x75] ; pop rdx ; sub byte ptr [rax - 0x7f], cl ; ret
0x00000000004257a4 : dec dword ptr [rax - 0x75] ; sbb byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x00000000004147c1 : dec dword ptr [rax - 0x75] ; sub al, 0x24 ; add rsp, 8 ; ret
0x000000000044da86 : dec dword ptr [rax - 0x77] ; hlt ; mov dword ptr [rsp + 0x18], eax ; ret
0x00000000004658b1 : dec dword ptr [rax - 0x77] ; iretd ; jmp 0x46587f
0x00000000004036f2 : dec dword ptr [rax - 0x77] ; ret
0x0000000000472a9a : dec dword ptr [rax - 0x77] ; ret 0x31e9
0x000000000042ab52 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000403712 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000435795 : dec dword ptr [rax - 0x77] ; ret 0xa0eb
0x00000000004122b5 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000043cc8b : dec dword ptr [rax - 0x77] ; sti ; jmp 0x43cc58
0x000000000046552d : dec dword ptr [rax - 0x77] ; xlatb ; jmp 0x4654fa
0x00000000004380ed : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000460b5e : dec dword ptr [rax - 0x7d] ; ret 0x4828
0x0000000000461ea7 : dec dword ptr [rax - 0x7d] ; stc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xfce9
0x0000000000424ea8 : dec dword ptr [rax - 0x7f] ; ret 0x1fff
0x0000000000424e48 : dec dword ptr [rax - 0x7f] ; ret 0xfc7f
0x0000000000463725 : dec dword ptr [rbp + 0x21] ; ret
0x00000000004250b6 : dec dword ptr [rbp + 0x39] ; ret 0x830f
0x000000000045db97 : dec dword ptr [rbp - 0x77] ; ret
0x000000000046758e : dec dword ptr [rbp - 0x77] ; ret 0x8949
0x00000000004294da : dec dword ptr [rbx + 0x39542454] ; ret 0x2275
0x000000000043603d : dec dword ptr [rcx - 0x4ef00f30] ; sbb dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd284
0x0000000000410eb5 : dec dword ptr [rcx - 0x77] ; leave ; jmp 0x410ead
0x00000000004399f6 : dec dword ptr [rcx - 0x77] ; ret
0x000000000045109f : dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x451070
0x00000000004515ef : dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x4515c0
0x000000000045271f : dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x4526f0
0x000000000047f9af : dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x47f980
0x000000000049052f : dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x490500
0x000000000042681a : dec dword ptr [rdi] ; mov edx, 0x920f01e1 ; ret 0x2fe9
0x000000000043a219 : dec dword ptr [rdi] ; or ebp, eax ; jmp qword ptr [rdi]
0x00000000004285fe : dec dword ptr [rdi] ; or ebp, eax ; ret
0x00000000004389a6 : dec dword ptr [rdi] ; or ebp, eax ; ret 0x139
0x0000000000480df6 : dec dword ptr [rdi] ; or ebp, eax ; ret 0xfa3b
0x0000000000430ff6 : dec dword ptr [rdi] ; or ebp, eax ; ret 0xff39
0x0000000000486581 : dec dword ptr [rdi] ; push rdi ; leave ; xorps xmm0, xmm0 ; jmp 0x486555
0x00000000004824b1 : dec ebx ; jmp 0x48247b
0x00000000004100c6 : dec ecx ; cmp rdx, rax ; jb 0x4100c0 ; ret
0x0000000000410166 : dec ecx ; cmp rdx, rax ; jb 0x410160 ; ret
0x00000000004824b0 : dec rbx ; jmp 0x48247c
0x00000000004100c5 : dec rcx ; cmp rdx, rax ; jb 0x4100c1 ; ret
0x0000000000410165 : dec rcx ; cmp rdx, rax ; jb 0x410161 ; ret
0x00000000004052c6 : div byte ptr [rdx + 0x39480009] ; ret 0x850f
0x0000000000414178 : divps xmm0, xmm2 ; movsd qword ptr [rbx + 0x48], xmm0 ; ret
0x0000000000414177 : divsd xmm0, xmm2 ; movsd qword ptr [rbx + 0x48], xmm0 ; ret
0x0000000000457110 : enter -0x1d7f, -3 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x5489
0x000000000044ff56 : enter -0x6bf1, -0x40 ; mov byte ptr [rsp + 0x18], al ; ret
0x000000000046736b : enter -0x71f1, 0x1d ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x294d
0x00000000004019c1 : enter -0x72b8, 0x44 ; and al, 0x18 ; sete byte ptr [rax] ; ret
0x0000000000406532 : enter -0x76b8, 0x44 ; and al, 0x18 ; ret
0x0000000000401708 : enter -0x76b8, 0x44 ; and al, 8 ; mov rax, qword ptr [rdx] ; call rax
0x000000000041c406 : enter 0, 0 ; ret
0x000000000044f75e : enter 0, 0 ; syscall ; ret
0x0000000000414313 : enter 0xff2, 0x59 ; ret
0x000000000041626c : enter 1, 0 ; ret
0x000000000044776b : enter 2, 0 ; ret
0x0000000000474458 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rdx] ; call rax
0x0000000000432b1a : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000402a99 : fadd dword ptr [rcx + 0xf] ; xchg eax, edx ; ret
0x000000000044dc01 : fadd st(0), st(0) ; movq qword ptr [rdx], xmm0 ; ret
0x000000000042b85a : fcmovu st(0), st(1) ; or dword ptr [rax], eax ; call rax
0x000000000049052d : fdiv st(3), st(0) ; dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x490502
0x0000000000408454 : fiadd dword ptr [rdi + rcx - 0x4a] ; pop rbx ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000414307 : fiadd word ptr [rdi + rcx + 0x10] ; sal dl, 0xf ; pop rsp ; ret 0xf44
0x000000000044c3be : fiadd word ptr [rdx] ; add byte ptr [rax], al ; jmp rax
0x000000000044e61d : fidiv dword ptr [rbx - 0x36] ; mov qword ptr [r8], rdx ; ret
0x000000000043b9b9 : fidivr dword ptr [rcx] ; ret 0xea7c
0x0000000000463291 : fild dword ptr [rbp + 0x31] ; in al, 0xeb ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x00000000004174ba : fimul dword ptr [rax - 0x77] ; ret
0x000000000042a81d : fimul dword ptr [rax - 0x7f] ; ret 0x400
0x0000000000478212 : fimul dword ptr [rax - 9] ; ret 0x60
0x000000000040802f : fimul dword ptr [rdi] ; xchg eax, edi ; ret 0xd284
0x000000000041a597 : fimul word ptr [rax + 0x29] ; ret
0x0000000000466ce3 : fimul word ptr [rax - 0x3f] ; jmp 0x466d1f
0x0000000000466d13 : fimul word ptr [rax - 0x3f] ; jmp 0x466d5b
0x0000000000466d43 : fimul word ptr [rax - 0x3f] ; jmp 0x466d8e
0x000000000040c236 : fimul word ptr [rax - 0x77] ; push rsp ; and al, 0x10 ; ret
0x000000000046b11f : fimul word ptr [rax - 0x77] ; ret
0x0000000000445b77 : fimul word ptr [rax - 0x7f] ; ret 0xff00
0x000000000040551d : fistp qword ptr [rbp + 0x39480009] ; ret 0x7975
0x00000000004394c1 : fisttp dword ptr [rdi] ; mov word ptr [rax + rax + 0x39480000], cs ; ret
0x000000000043b742 : fisttp word ptr [rax + 0x29] ; ret
0x0000000000466ea1 : fisttp word ptr [rax - 0x77] ; jl 0x466ed2 ; xor byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000481e06 : fisttp word ptr [rax - 0x77] ; ret
0x0000000000407b34 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000043648f : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x0000000000448e39 : fisttp word ptr [rax - 0x77] ; ret 0xc031
0x0000000000436c95 : fisttp word ptr [rcx - 0x77] ; ret
0x0000000000436a92 : fisttp word ptr [rcx - 0x77] ; ret 0x8948
0x0000000000466b5d : fld dword ptr [rbp + 0x31] ; ror byte ptr [rbp - 0x77], cl ; ret
0x0000000000433773 : fld dword ptr [rbp - 0x760d8a2e] ; and al, 0x10 ; ret
0x0000000000466feb : fmul dword ptr [rax + 0x39] ; ret 0xf7c
0x000000000040633b : fmul dword ptr [rax - 0x3f] ; ret
0x00000000004174b7 : fmul dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x77] ; ret
0x000000000043e100 : fmul dword ptr [rax - 0x77] ; ret
0x000000000041044e : fmul dword ptr [rax - 0x77] ; ret 0xaceb
0x0000000000479549 : fmul dword ptr [rdi] ; sub dword ptr [rip - 0x74ffffff], 0x44 ; ret 0x8904
0x0000000000406a6e : fmul dword ptr [rdi] ; xchg eax, edi ; ret
0x000000000044c290 : fmul qword ptr [rax - 0x77] ; cli ; mov rdi, qword ptr [rdi] ; call rdi
0x000000000044c4f0 : fmul qword ptr [rsi] ; add byte ptr [rax], al ; jmp rax
0x000000000044dbdf : fmul st(1), st(0) ; movq qword ptr [rdx], xmm1 ; ret
0x000000000044bb81 : fnstenv dword ptr [rbp + 6] ; mov byte ptr [rsp + 0x10], 0x21 ; ret
0x000000000044efd9 : fpatan ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043b506 : fsubp st(3) ; ror dword ptr [rax - 0x77], 1 ; pop rsp ; and al, 0x20 ; ret
0x00000000004791fa : fucomi st(0) ; rcl byte ptr [rbp + rdi*8 - 1], 1 ; jmp 0x4791cb
0x000000000043a295 : fucomi st(3) ; add al, 0xff ; ret
0x000000000046cbe0 : fucomi st(3) ; add ecx, dword ptr [rax - 1] ; ret
0x0000000000432101 : fucomi st(3) ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x000000000046be38 : fucomi st(3) ; or byte ptr [rax - 1], cl ; ret
0x000000000044da89 : hlt ; mov dword ptr [rsp + 0x18], eax ; ret
0x0000000000439bd4 : hlt ; mov qword ptr [rsp + 0x10], rcx ; ret
0x0000000000466059 : hlt ; mov qword ptr [rsp + 0x20], rax ; ret
0x0000000000422a52 : imul bl ; add ecx, dword ptr [rax - 1] ; ret
0x000000000046bff4 : imul bl ; or dword ptr [rax - 1], ecx ; ret
0x0000000000406312 : imul eax, edx ; jmp 0x4062b6
0x0000000000456821 : imul ecx, dword ptr [rax - 0x75], 0x3c ; ret 0x8b48
0x00000000004472ea : imul ecx, dword ptr [rax - 0x77], 0x1c ; ret 0x438b
0x0000000000417d7d : imul edi, dword ptr [rcx + 0x12], 0 ; ret
0x0000000000443c01 : imul esp, dword ptr [rbx + 0x48], 0x940fd639 ; ret 0xd284
0x0000000000406311 : imul r8, rdx ; jmp 0x4062b7
0x000000000044c4a8 : in al, 0xb ; add byte ptr [rax], al ; jmp rax
0x0000000000463294 : in al, 0xeb ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x000000000044f979 : in al, 0xf0 ; call rax
0x000000000044fb86 : in al, 0xf0 ; mov qword ptr [rsp], rbx ; call rax
0x000000000044f9af : in al, dx ; pop rbp ; ret
0x00000000004100cc : in al, dx ; ret
0x000000000044f9a6 : in eax, 0x48 ; and esp, 0xfffffff0 ; call rax
0x000000000044e500 : in eax, 0x74 ; ret 0xfdc5
0x0000000000432e37 : in eax, dx ; ret
0x000000000041af4f : in eax, dx ; ret 0
0x000000000044ee66 : inc bl ; mov dword ptr [rdi], eax ; mov dword ptr [rdi + rbx - 4], eax ; ret
0x0000000000457525 : inc byte ptr [rax - 0xb7fa8d] ; ret 0xdfeb
0x0000000000457114 : inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x5489
0x000000000044e22c : inc dword ptr [rax] ; add byte ptr [rsp + rbx*4 - 0x3a], dh ; add byte ptr [rax], al ; ret
0x000000000040b2de : inc dword ptr [rbx + 8] ; ret
0x0000000000466789 : inc dword ptr [rbx - 0x3d092f3e] ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xd284
0x000000000044c39d : inc dword ptr [rcx] ; add byte ptr [rax], al ; jmp rax
0x0000000000466980 : inc ebx ; jmp 0x46694a
0x000000000044ee5c : inc ebx ; ret
0x00000000004226bf : inc ecx ; cmp rcx, 0x43 ; jl 0x422695 ; ret
0x0000000000406620 : inc ecx ; mov word ptr [rax + 0xa], cx ; ret
0x0000000000410d02 : inc edx ; jmp 0x410ceb
0x0000000000410e35 : inc edx ; jmp 0x410e09
0x000000000045752a : inc edx ; jmp 0x45750e
0x000000000045766a : inc edx ; jmp 0x45764e
0x000000000040b2dd : inc qword ptr [rbx + 8] ; ret
0x000000000046697f : inc rbx ; jmp 0x46694b
0x00000000004226be : inc rcx ; cmp rcx, 0x43 ; jl 0x422696 ; ret
0x0000000000410d01 : inc rdx ; jmp 0x410cec
0x0000000000410e34 : inc rdx ; jmp 0x410e0a
0x0000000000457529 : inc rdx ; jmp 0x45750f
0x0000000000457669 : inc rdx ; jmp 0x45764f
0x00000000004020b5 : insb byte ptr [rdi], dx ; and al, 0x10 ; add rsp, 0x18 ; ret
0x000000000040161f : insb byte ptr [rdi], dx ; and al, 0x18 ; add rsp, 0x20 ; ret
0x000000000040106c : insb byte ptr [rdi], dx ; and al, 0x20 ; add rsp, 0x28 ; ret
0x00000000004023b9 : insb byte ptr [rdi], dx ; and al, 0x28 ; add rsp, 0x30 ; ret
0x00000000004021d7 : insb byte ptr [rdi], dx ; and al, 0x30 ; add rsp, 0x38 ; ret
0x0000000000402dcf : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x40 ; ret
0x0000000000406f88 : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x48 ; ret
0x000000000040172d : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x50 ; ret
0x000000000040496b : insb byte ptr [rdi], dx ; and al, 0x50 ; add rsp, 0x58 ; ret
0x0000000000402461 : insb byte ptr [rdi], dx ; and al, 0x58 ; add rsp, 0x60 ; ret
0x0000000000402af4 : insb byte ptr [rdi], dx ; and al, 0x60 ; add rsp, 0x68 ; ret
0x00000000004022b6 : insb byte ptr [rdi], dx ; and al, 0x68 ; add rsp, 0x70 ; ret
0x000000000041819c : insb byte ptr [rdi], dx ; and al, 0x70 ; add rsp, 0x78 ; ret
0x0000000000408b2d : insb byte ptr [rdi], dx ; and al, 8 ; add rsp, 0x10 ; ret
0x00000000004256f6 : insd dword ptr [rdi], dx ; mov rcx, qword ptr [rcx + 0x18] ; mov qword ptr [rsp], rax ; call rcx
0x00000000004456ff : int 0x1a
0x000000000047148f : int 0x80
0x000000000041688d : int 0xc3
0x000000000040b12d : int1 ; jne 0x40b10d ; mov qword ptr [rsp + 0x20], r8 ; ret
0x0000000000457540 : int1 ; jne 0x45754d ; inc rdx ; jmp 0x457512
0x0000000000457680 : int1 ; jne 0x45768d ; inc rdx ; jmp 0x457652
0x0000000000426927 : int1 ; mov byte ptr [rsp + 0x10], 1 ; ret
0x00000000004658b4 : iretd ; jmp 0x46587c
0x0000000000439bd3 : ja 0x439bd0 ; mov qword ptr [rsp + 0x10], rcx ; ret
0x000000000044c398 : ja 0x44c3ac ; lea rax, qword ptr [rip + 0x1ff] ; jmp rax
0x000000000044c3a7 : ja 0x44c3bb ; lea rax, qword ptr [rip + 0x270] ; jmp rax
0x000000000044c3b9 : ja 0x44c3cd ; lea rax, qword ptr [rip + 0x2de] ; jmp rax
0x000000000044c3cb : ja 0x44c3df ; lea rax, qword ptr [rip + 0x37c] ; jmp rax
0x000000000044c3dd : ja 0x44c3f1 ; lea rax, qword ptr [rip + 0x41a] ; jmp rax
0x000000000044c3ef : ja 0x44c403 ; lea rax, qword ptr [rip + 0x4b8] ; jmp rax
0x000000000044c401 : ja 0x44c415 ; lea rax, qword ptr [rip + 0x556] ; jmp rax
0x000000000044c413 : ja 0x44c427 ; lea rax, qword ptr [rip + 0x5f4] ; jmp rax
0x000000000044c425 : ja 0x44c439 ; lea rax, qword ptr [rip + 0x6b2] ; jmp rax
0x000000000044c437 : ja 0x44c44b ; lea rax, qword ptr [rip + 0x770] ; jmp rax
0x000000000044c449 : ja 0x44c45d ; lea rax, qword ptr [rip + 0x82e] ; jmp rax
0x000000000044c45b : ja 0x44c46f ; lea rax, qword ptr [rip + 0x8ec] ; jmp rax
0x000000000044c46d : ja 0x44c481 ; lea rax, qword ptr [rip + 0x9aa] ; jmp rax
0x000000000044c47f : ja 0x44c493 ; lea rax, qword ptr [rip + 0xa68] ; jmp rax
0x000000000044c491 : ja 0x44c4a5 ; lea rax, qword ptr [rip + 0xb26] ; jmp rax
0x000000000044c4a3 : ja 0x44c4b7 ; lea rax, qword ptr [rip + 0xbe4] ; jmp rax
0x000000000044c4b5 : ja 0x44c4c9 ; lea rax, qword ptr [rip + 0xca2] ; jmp rax
0x000000000044c4c7 : ja 0x44c4db ; lea rax, qword ptr [rip + 0xd60] ; jmp rax
0x000000000044c4d9 : ja 0x44c4ed ; lea rax, qword ptr [rip + 0xe1e] ; jmp rax
0x000000000044c4eb : ja 0x44c4ff ; lea rax, qword ptr [rip + 0xedc] ; jmp rax
0x000000000044c4fd : ja 0x44c511 ; lea rax, qword ptr [rip + 0xf9a] ; jmp rax
0x000000000044c50f : ja 0x44c523 ; lea rax, qword ptr [rip + 0x1058] ; jmp rax
0x000000000044c521 : ja 0x44c535 ; lea rax, qword ptr [rip + 0x1116] ; jmp rax
0x000000000044c533 : ja 0x44c547 ; lea rax, qword ptr [rip + 0x11d4] ; jmp rax
0x000000000044c545 : ja 0x44c559 ; lea rax, qword ptr [rip + 0x1292] ; jmp rax
0x000000000044c557 : ja 0x44c56b ; lea rax, qword ptr [rip + 0x1350] ; jmp rax
0x000000000044e273 : ja 0x44e23f ; add byte ptr [rax], al ; ret
0x000000000044e68a : ja 0x44e6dd ; mov dword ptr [rax], 0xffffffff ; ret
0x000000000044ee55 : ja 0x44ee22 ; mov byte ptr [rdi], al ; mov byte ptr [rdi + rbx - 1], al ; ret
0x000000000043f60a : jae 0x43f5f5 ; mov qword ptr [rsp + 0x10], rcx ; ret
0x000000000044e61e : jae 0x44e5ef ; mov qword ptr [r8], rdx ; ret
0x0000000000457527 : jae 0x457532 ; inc rdx ; jmp 0x457511
0x0000000000457667 : jae 0x457672 ; inc rdx ; jmp 0x457651
0x000000000046cc56 : jae 0x46cc67 ; lea rdx, qword ptr [rdx + rsi + 1] ; jmp 0x46cc2a
0x00000000004100cb : jb 0x4100bb ; ret
0x0000000000410131 : jb 0x4100e2 ; ret
0x000000000041016b : jb 0x41015b ; ret
0x000000000044f03e : jb 0x44f04b ; mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x00000000004180c8 : jbe 0x4180e0 ; add byte ptr [rcx], al ; ret 0x8b48
0x0000000000486a56 : jbe 0x486ada ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000402709 : je 0x4026c4 ; mov byte ptr [rsp + 0x10], 1 ; ret
0x000000000040c235 : je 0x40c21c ; mov qword ptr [rsp + 0x10], rdx ; ret
0x00000000004268c1 : je 0x4268d0 ; mov byte ptr [rsp + 0x10], 0 ; ret
0x00000000004268d7 : je 0x4268e6 ; mov byte ptr [rsp + 0x10], 0 ; ret
0x0000000000426917 : je 0x426926 ; mov byte ptr [rsp + 0x10], 0 ; ret
0x0000000000433814 : je 0x4337f7 ; ret
0x000000000043506e : je 0x43507a ; mov dword ptr [rax], edx ; mov dword ptr [rsp + 0x20], ebx ; ret
0x0000000000436049 : je 0x43603c ; mov byte ptr [rsp + 0x10], 1 ; ret
0x0000000000444eb5 : je 0x444ebb ; add cl, ch ; ret
0x000000000044a0b4 : je 0x44a0c3 ; mov byte ptr [rsp + 0x18], 1 ; ret
0x000000000044c251 : je 0x44c265 ; lea rax, qword ptr [rip - 0xe4da] ; call rax
0x000000000044e22f : je 0x44e1d2 ; mov byte ptr [rax], 0 ; ret
0x000000000044e26f : je 0x44e23d ; vzeroupper ; mov byte ptr [rax], 0 ; ret
0x000000000044e296 : je 0x44e280 ; mov byte ptr [rax], 0 ; ret
0x000000000044e63c : je 0x44e5ef ; mov qword ptr [r8], rdx ; ret
0x000000000044e61a : je 0x44e5f3 ; cmp edx, ebx ; jae 0x44e5f3 ; mov qword ptr [r8], rdx ; ret
0x000000000044efd5 : je 0x44efe4 ; mov rcx, rbx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044f104 : je 0x44f12e ; loopne 0x44f104 ; movq qword ptr [rdi + rbx - 0x10], mm7 ; ret
0x000000000044fc76 : je 0x44fca1 ; adc byte ptr [rax - 0x39], cl ; ret 0
0x000000000044fca1 : je 0x44fcae ; mov dword ptr [rsp + 0x30], eax ; ret
0x00000000004505f1 : je 0x4505c5 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x00000000004505f0 : je 0x4505c6 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x00000000004522e1 : je 0x4522b5 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x00000000004522e0 : je 0x4522b6 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x0000000000455c34 : je 0x455be5 ; jmp 0x455bfe
0x00000000004561c4 : je 0x4561a9 ; mov rax, qword ptr [rdx] ; call rax
0x000000000046106d : je 0x461098 ; or byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000462abe : je 0x462acf ; movsd qword ptr [rsp + 0x18], xmm0 ; ret
0x000000000046697d : je 0x46698a ; inc rbx ; jmp 0x46694d
0x0000000000466c3e : je 0x466c67 ; pop rax ; ret
0x000000000046d95b : je 0x46d925 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000046da2b : je 0x46d9f5 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x0000000000472cb6 : je 0x472ce3 ; push 0x24348948 ; call rbx
0x000000000047b9e9 : je 0x47ba16 ; js 0x47ba3c ; mov dword ptr [rsp], esi ; call rbx
0x00000000004824ae : je 0x4824bb ; dec rbx ; jmp 0x48247e
0x00000000004824ad : je 0x4824bc ; dec rbx ; jmp 0x48247f
0x0000000000483bb5 : je 0x483bdf ; and al, ch ; ret
0x000000000048b248 : je 0x48b253 ; add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x48b21d
0x00000000004067a8 : jg 0x4067b3 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000421ccb : jg 0x421c63 ; mov byte ptr [rsp + 0x10], 1 ; ret
0x0000000000421c5a : jg 0x421c69 ; mov byte ptr [rsp + 0x10], 0 ; ret
0x000000000044e8fe : jg 0x44e942 ; ret
0x000000000044ee7e : jg 0x44ee8f ; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0 ; ret
0x000000000044f083 : jg 0x44f094 ; movdqu xmmword ptr [rdi + rbx - 0x10], xmm1 ; ret
0x000000000044f3a7 : jg 0x44f40d ; loopne 0x44f3a7 ; movq qword ptr [rbx - 0x10], mm4 ; ret
0x000000000044f483 : jg 0x44f4e7 ; loopne 0x44f483 ; movq qword ptr [rcx - 0x10], mm4 ; ret
0x000000000047036a : jg 0x470371 ; add byte ptr [rsi - 9], ah ; ret
0x0000000000470432 : jg 0x470439 ; add byte ptr [rsi - 9], ah ; ret
0x00000000004226c5 : jl 0x42268f ; ret
0x00000000004226c4 : jl 0x422690 ; ret
0x000000000042fa58 : jl 0x42fa83 ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000042fb72 : jl 0x42fb9d ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000434209 : jl 0x434234 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000434363 : jl 0x43438e ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000436a8d : jl 0x436a98 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx - 0x77] ; ret 0x8948
0x0000000000436a8c : jl 0x436a99 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx - 0x77] ; ret 0x8948
0x0000000000439bb9 : jl 0x439b93 ; ret
0x000000000043b9bc : jl 0x43b9ae ; mov dword ptr [rsp + 0x10], edx ; ret
0x000000000044c3d0 : jl 0x44c3d9 ; add byte ptr [rax], al ; jmp rax
0x0000000000466058 : jl 0x466055 ; mov qword ptr [rsp + 0x20], rax ; ret
0x0000000000466ea4 : jl 0x466ecf ; xor byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000472068 : jl 0x472058 ; mov dword ptr [rsp + 0x28], edx ; ret
0x0000000000486a57 : jl 0x486a5a ; dec dword ptr [rax - 0x77] ; ret
0x000000000049090e : jl 0x4908f5 ; ret
0x0000000000457555 : jle 0x457560 ; inc rdx ; jmp 0x457511
0x0000000000457695 : jle 0x4576a0 ; inc rdx ; jmp 0x457651
0x0000000000402db5 : jmp 0x402d41
0x00000000004081fd : jmp 0x40803b
0x00000000004081fd : jmp 0x40803c
0x000000000040b248 : jmp 0x40b1a3
0x000000000040d3f2 : jmp 0x40d3b7
0x000000000040e4c6 : jmp 0x40e48b
0x0000000000410eb9 : jmp 0x410ea9
0x0000000000414de6 : jmp 0x414bdc
0x0000000000416fb0 : jmp 0x416f75
0x0000000000417e79 : jmp 0x417e3f
0x000000000041a183 : jmp 0x419dcd
0x000000000041c17c : jmp 0x41c142
0x0000000000424e44 : jmp 0x424dba
0x0000000000424ea4 : jmp 0x424e2b
0x00000000004258fa : jmp 0x4258bf
0x00000000004285f5 : jmp 0x4284d6
0x0000000000428bc5 : jmp 0x428afe
0x0000000000428e18 : jmp 0x428ddd
0x0000000000429d17 : jmp 0x429c68
0x0000000000429dde : jmp 0x429ded
0x000000000042d217 : jmp 0x42d1dc
0x000000000042d4a2 : jmp 0x42d467
0x000000000042ed0a : jmp 0x42eccf
0x000000000042f29a : jmp 0x42f1be
0x000000000043292f : jmp 0x43264c
0x0000000000432ad5 : jmp 0x43296e
0x00000000004356a4 : jmp 0x43568b
0x0000000000437c91 : jmp 0x437711
0x0000000000438672 : jmp 0x4385fb
0x000000000043cc8f : jmp 0x43cc54
0x000000000044055b : jmp 0x4404c6
0x000000000044a174 : jmp 0x44a191
0x000000000045005f : jmp 0x450053
0x00000000004510a5 : jmp 0x45106a
0x00000000004515f5 : jmp 0x4515ba
0x000000000045255a : jmp 0x452520
0x0000000000452725 : jmp 0x4526ea
0x0000000000455b63 : jmp 0x455ae9
0x0000000000455c36 : jmp 0x455bfc
0x000000000045cdb1 : jmp 0x458fca
0x000000000045cda2 : jmp 0x459022
0x000000000045cd93 : jmp 0x45907a
0x000000000045e283 : jmp 0x45e132
0x000000000045e282 : jmp 0x45e133
0x0000000000462683 : jmp 0x462618
0x0000000000462672 : jmp 0x462653
0x0000000000465531 : jmp 0x4654f6
0x00000000004658b5 : jmp 0x46587b
0x0000000000466982 : jmp 0x466948
0x0000000000466ce6 : jmp 0x466d1c
0x0000000000466d16 : jmp 0x466d58
0x0000000000466d46 : jmp 0x466d8b
0x0000000000467084 : jmp 0x466e39
0x000000000046c0bc : jmp 0x46bebc
0x000000000046cc5d : jmp 0x46cc23
0x000000000046e0b4 : jmp 0x46e07a
0x0000000000475002 : jmp 0x474c53
0x0000000000475d14 : jmp 0x475cfb
0x0000000000475eba : jmp 0x475ea1
0x0000000000477919 : jmp 0x47792d
0x0000000000477d52 : jmp 0x477c70
0x0000000000477fdc : jmp 0x478093
0x000000000047861a : jmp 0x478396
0x00000000004786c7 : jmp 0x4786db
0x0000000000479200 : jmp 0x4791c5
0x000000000047f9b5 : jmp 0x47f97a
0x0000000000481172 : jmp 0x48109d
0x00000000004824b3 : jmp 0x482479
0x0000000000484f57 : jmp 0x484c20
0x0000000000484fb8 : jmp 0x484fae
0x0000000000486588 : jmp 0x48654e
0x000000000048b250 : jmp 0x48b215
0x000000000048b751 : jmp 0x48b703
0x0000000000490535 : jmp 0x4904fa
0x0000000000465ff3 : jmp 0xb565ff9
0x000000000044fde2 : jmp 0xf44fdeb
0x0000000000435bb8 : jmp 0xffffffffc3cca3c4
0x000000000044875c : jmp qword ptr [rax]
0x000000000044c0a5 : jmp qword ptr [rbx]
0x00000000004101da : jmp qword ptr [rcx]
0x000000000043a21d : jmp qword ptr [rdi]
0x00000000004145dd : jmp qword ptr [rsi]
0x000000000040581f : jmp rax
0x000000000044c195 : jmp rbx
0x000000000044c2c9 : jmp rdi
0x000000000041db4d : jmp rsi
0x000000000040b12e : jne 0x40b10c ; mov qword ptr [rsp + 0x20], r8 ; ret
0x000000000040b2d8 : jne 0x40b2c0 ; xchg qword ptr [rdi], rax ; inc qword ptr [rbx + 8] ; ret
0x000000000040e6a1 : jne 0x40e652 ; mov qword ptr [rsp], rsi ; call 0x41a8e8
0x0000000000417e77 : jne 0x417ed1 ; jmp 0x417e41
0x0000000000426926 : jne 0x426920 ; mov byte ptr [rsp + 0x10], 1 ; ret
0x000000000042e5d9 : jne 0x42e5de ; ret
0x0000000000433776 : jne 0x433770 ; mov dword ptr [rsp + 0x10], ecx ; ret
0x000000000043dd16 : jne 0x43dd05 ; mov qword ptr [rsp + 0x10], rcx ; ret
0x0000000000446ecb : jne 0x446eda ; movups xmmword ptr [rsp + 0x10], xmm0 ; ret
0x000000000044bb82 : jne 0x44bb91 ; mov byte ptr [rsp + 0x10], 0x21 ; ret
0x000000000044c1da : jne 0x44c1ee ; lea rax, qword ptr [rip - 0x23af3] ; jmp rax
0x000000000044d989 : jne 0x44d986 ; ret
0x000000000044e5e8 : jne 0x44e5fb ; mov qword ptr [r8], -1 ; ret
0x0000000000453585 : jne 0x453592 ; jnp 0x453577 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x0000000000457541 : jne 0x45754c ; inc rdx ; jmp 0x457511
0x0000000000457681 : jne 0x45768c ; inc rdx ; jmp 0x457651
0x000000000046cbf2 : jne 0x46cbea ; mov byte ptr [rsp + 0x20], 1 ; ret
0x000000000046d6a4 : jne 0x46d6b1 ; jnp 0x46d697 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000046d755 : jne 0x46d762 ; jnp 0x46d747 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x0000000000484c6e : jne 0x484c7f ; mov qword ptr [rdi], rax ; mov rdx, rax ; jmp 0x484c12
0x000000000048a38f : jne 0x48a3a0 ; mov qword ptr [rdi], rax ; mov rdx, rax ; jmp 0x48a333
0x00000000004280fc : jno 0x428114 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000453587 : jnp 0x453575 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000046d6a6 : jnp 0x46d695 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000046d757 : jnp 0x46d745 ; mov byte ptr [rsp + 0x18], 0 ; ret
0x000000000041819e : jo 0x4181ed ; add esp, 0x78 ; ret
0x000000000041b597 : jo 0x41b5e6 ; add esp, 0x78 ; ret
0x00000000004202c6 : jo 0x4202cc ; add al, ch ; ret 0x69
0x0000000000420a08 : jo 0x4209f4 ; ret 0x2dc
0x0000000000421b07 : jo 0x421b0e ; add byte ptr [rax], al ; ret
0x0000000000422bee : jo 0x422c3d ; add esp, 0x78 ; ret
0x0000000000422c39 : jo 0x422c88 ; add esp, 0x78 ; ret
0x00000000004379b6 : jo 0x437a05 ; add esp, 0x78 ; ret
0x0000000000437bdc : jo 0x437c2b ; add esp, 0x78 ; ret
0x0000000000437bfe : jo 0x437c4d ; add esp, 0x78 ; ret
0x0000000000437c14 : jo 0x437c63 ; add esp, 0x78 ; ret
0x0000000000437c83 : jo 0x437cd2 ; add esp, 0x78 ; ret
0x0000000000437cec : jo 0x437d3b ; add esp, 0x78 ; ret
0x00000000004410c3 : jo 0x441112 ; add esp, 0x78 ; ret
0x00000000004411ae : jo 0x4411fd ; add esp, 0x78 ; ret
0x000000000044c3ac : jo 0x44c3b4 ; add byte ptr [rax], al ; jmp rax
0x000000000044c43c : jo 0x44c449 ; add byte ptr [rax], al ; jmp rax
0x000000000046195b : jo 0x4619aa ; add esp, 0x78 ; ret
0x0000000000461a5d : jo 0x461aac ; add esp, 0x78 ; ret
0x000000000046aefb : jo 0x46af4a ; add esp, 0x78 ; ret
0x000000000046b6a2 : jo 0x46b6f1 ; add esp, 0x78 ; ret
0x000000000046b7f7 : jo 0x46b846 ; add esp, 0x78 ; ret
0x000000000046b8a0 : jo 0x46b8ef ; add esp, 0x78 ; ret
0x00000000004831be : jo 0x48320d ; mov dword ptr [rsp], edx ; call rax
0x0000000000483364 : jo 0x4833b3 ; mov dword ptr [rsp], edx ; call rax
0x000000000048533a : jo 0x485389 ; add esp, 0x78 ; ret
0x0000000000485800 : jo 0x48584f ; add esp, 0x78 ; ret
0x0000000000485875 : jo 0x4858c4 ; add esp, 0x78 ; ret
0x0000000000485bb2 : jo 0x485c01 ; add esp, 0x78 ; ret
0x000000000048fe47 : jo 0x48fe96 ; add esp, 0x78 ; ret
0x000000000048fee3 : jo 0x48ff32 ; add esp, 0x78 ; ret
0x0000000000436c90 : jp 0x436c9b ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx - 0x77] ; ret
0x000000000044baa2 : jp 0x44ba51 ; std ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x000000000040cbc3 : jrcxz 0x40cbcc ; add al, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000004101d7 : jrcxz 0x410169 ; push rbx ; jmp qword ptr [rcx]
0x000000000044e297 : jrcxz 0x44e263 ; add byte ptr [rax], al ; ret
0x000000000044f976 : jrcxz 0x44f9c5 ; and esp, 0xfffffff0 ; call rax
0x000000000044fb83 : jrcxz 0x44fbd6 ; and esp, 0xfffffff0 ; mov qword ptr [rsp], rbx ; call rax
0x000000000044fc01 : jrcxz 0x44fc54 ; and esp, 0xfffffff0 ; mov qword ptr [rsp], rbx ; call rax
0x0000000000403363 : js 0x4033b5 ; add esp, 0x80 ; ret
0x0000000000403401 : js 0x403453 ; add esp, 0x80 ; ret
0x00000000004035d3 : js 0x403625 ; add esp, 0x80 ; ret
0x00000000004037b7 : js 0x403809 ; add esp, 0x80 ; ret
0x0000000000403813 : js 0x403865 ; add esp, 0x80 ; ret
0x000000000040384e : js 0x4038a0 ; add esp, 0x80 ; ret
0x00000000004145f9 : js 0x41464b ; add esp, 0x80 ; ret
0x000000000041467e : js 0x4146d0 ; add esp, 0x80 ; ret
0x000000000042f6c2 : js 0x42f714 ; add esp, 0x80 ; ret
0x0000000000433c8b : js 0x433cdd ; add esp, 0x80 ; ret
0x0000000000433ce8 : js 0x433d3a ; add esp, 0x80 ; ret
0x0000000000433dbf : js 0x433e11 ; add esp, 0x80 ; ret
0x0000000000444c41 : js 0x444c49 ; add byte ptr [rax], al ; ret
0x0000000000444cd4 : js 0x444d26 ; add esp, 0x80 ; ret
0x000000000044e736 : js 0x44e788 ; add esp, 0x80 ; ret
0x0000000000468b9f : js 0x468bf1 ; add esp, 0x80 ; ret
0x0000000000468c9c : js 0x468cee ; add esp, 0x80 ; ret
0x0000000000468d51 : js 0x468da3 ; add esp, 0x80 ; ret
0x0000000000468db9 : js 0x468e0b ; add esp, 0x80 ; ret
0x0000000000468eb6 : js 0x468f08 ; add esp, 0x80 ; ret
0x000000000046cd59 : js 0x46cdab ; add esp, 0x80 ; ret
0x000000000046cd6e : js 0x46cdc0 ; add esp, 0x80 ; ret
0x000000000046cd83 : js 0x46cdd5 ; add esp, 0x80 ; ret
0x000000000046ce0d : js 0x46ce5f ; add esp, 0x80 ; ret
0x000000000046ce97 : js 0x46cee9 ; add esp, 0x80 ; ret
0x000000000046cf33 : js 0x46cf85 ; add esp, 0x80 ; ret
0x000000000046cfce : js 0x46d020 ; add esp, 0x80 ; ret
0x000000000046cffd : js 0x46d04f ; add esp, 0x80 ; ret
0x000000000046dc07 : js 0x46dc59 ; add esp, 0x80 ; ret
0x000000000047679b : js 0x4767ed ; add esp, 0x80 ; ret
0x00000000004782a2 : js 0x4782f4 ; add esp, 0x80 ; ret
0x00000000004782ca : js 0x47831c ; add esp, 0x80 ; ret
0x00000000004782f5 : js 0x478347 ; add esp, 0x80 ; ret
0x000000000047b981 : js 0x47b9d0 ; mov dword ptr [rsp], edx ; call rcx
0x000000000047b9eb : js 0x47ba3a ; mov dword ptr [rsp], esi ; call rbx
0x000000000047ba34 : js 0x47ba83 ; mov dword ptr [rsp], ecx ; call rax
0x0000000000480789 : js 0x4807db ; add esp, 0x80 ; ret
0x00000000004808e1 : js 0x480933 ; add esp, 0x80 ; ret
0x0000000000480b39 : js 0x480b8b ; add esp, 0x80 ; ret
0x0000000000480c84 : js 0x480cd6 ; add esp, 0x80 ; ret
0x0000000000481ccb : js 0x481d1d ; add esp, 0x80 ; ret
0x0000000000481dea : js 0x481e3c ; add esp, 0x80 ; ret
0x0000000000489243 : js 0x48924e ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, esp ; ret 0x850f
0x000000000040f9d8 : lahf ; nop ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044576b : lahf ; ret
0x0000000000461bad : lahf ; ret 0xfffa
0x0000000000439bb2 : lea eax, dword ptr [rcx + 1] ; cmp rax, 0x1a ; jl 0x439b9a ; ret
0x000000000044e454 : lea eax, dword ptr [rcx + rax*2 - 1] ; mov qword ptr [r9], rax ; ret
0x000000000043de4c : lea eax, dword ptr [rdx + rbx] ; mov dword ptr [rsp + 8], eax ; ret
0x000000000044c512 : lea eax, dword ptr [rip + 0x1058] ; jmp rax
0x000000000044c524 : lea eax, dword ptr [rip + 0x1116] ; jmp rax
0x000000000044c536 : lea eax, dword ptr [rip + 0x11d4] ; jmp rax
0x000000000044c548 : lea eax, dword ptr [rip + 0x1292] ; jmp rax
0x000000000044c55a : lea eax, dword ptr [rip + 0x1350] ; jmp rax
0x000000000044c39b : lea eax, dword ptr [rip + 0x1ff] ; jmp rax
0x000000000044c3aa : lea eax, dword ptr [rip + 0x270] ; jmp rax
0x000000000044c3bc : lea eax, dword ptr [rip + 0x2de] ; jmp rax
0x000000000044c3ce : lea eax, dword ptr [rip + 0x37c] ; jmp rax
0x000000000044c3e0 : lea eax, dword ptr [rip + 0x41a] ; jmp rax
0x000000000044c3f2 : lea eax, dword ptr [rip + 0x4b8] ; jmp rax
0x000000000044c404 : lea eax, dword ptr [rip + 0x556] ; jmp rax
0x000000000044c416 : lea eax, dword ptr [rip + 0x5f4] ; jmp rax
0x000000000044c428 : lea eax, dword ptr [rip + 0x6b2] ; jmp rax
0x000000000044c43a : lea eax, dword ptr [rip + 0x770] ; jmp rax
0x000000000044c44c : lea eax, dword ptr [rip + 0x82e] ; jmp rax
0x000000000044c45e : lea eax, dword ptr [rip + 0x8ec] ; jmp rax
0x000000000044c470 : lea eax, dword ptr [rip + 0x9aa] ; jmp rax
0x000000000044c482 : lea eax, dword ptr [rip + 0xa68] ; jmp rax
0x000000000044c494 : lea eax, dword ptr [rip + 0xb26] ; jmp rax
0x000000000044c4a6 : lea eax, dword ptr [rip + 0xbe4] ; jmp rax
0x000000000044c4b8 : lea eax, dword ptr [rip + 0xca2] ; jmp rax
0x000000000044c4ca : lea eax, dword ptr [rip + 0xd60] ; jmp rax
0x000000000044c4dc : lea eax, dword ptr [rip + 0xe1e] ; jmp rax
0x000000000044c4ee : lea eax, dword ptr [rip + 0xedc] ; jmp rax
0x000000000044c500 : lea eax, dword ptr [rip + 0xf9a] ; jmp rax
0x000000000044f9fb : lea eax, dword ptr [rip - 0x17981] ; call rax
0x000000000044c1fd : lea eax, dword ptr [rip - 0x23ad3] ; jmp rax
0x000000000044c1dd : lea eax, dword ptr [rip - 0x23af3] ; jmp rax
0x000000000044c563 : lea eax, dword ptr [rip - 0x23df9] ; jmp rax
0x000000000044c254 : lea eax, dword ptr [rip - 0xe4da] ; call rax
0x00000000004019c3 : lea eax, dword ptr [rsp + 0x18] ; sete byte ptr [rax] ; ret
0x0000000000425ff1 : lea eax, dword ptr [rsp + 8] ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000439106 : lea ecx, dword ptr [rax - 0x77000000] ; ret 0x8348
0x00000000004191dc : lea ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000416fe9 : lea ecx, dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000490908 : lea ecx, dword ptr [rdi + 1] ; cmp rbx, rax ; jl 0x4908fb ; ret
0x000000000044e8fd : lea edi, dword ptr [rdi + 0x40] ; ret
0x000000000046cc59 : lea edx, dword ptr [rdx + rsi + 1] ; jmp 0x46cc27
0x000000000042b8ae : lea edx, dword ptr [rip + 0x9d984] ; call rax
0x000000000042b858 : lea edx, dword ptr [rip + 0x9d9da] ; call rax
0x0000000000427a0a : lea edx, dword ptr [rip + 0xa1780] ; call rax
0x00000000004279c2 : lea edx, dword ptr [rip + 0xa17c0] ; call rax
0x000000000042769d : lea edx, dword ptr [rip + 0xa1abd] ; call rcx
0x000000000042762b : lea edx, dword ptr [rip + 0xa1b2f] ; call rax
0x0000000000449156 : lea edx, dword ptr [rsp + 0x80] ; call rax
0x000000000044c06f : lea esi, dword ptr [rip + 0x1a5b] ; call rax
0x000000000044f80e : lea esi, dword ptr [rsp] ; call rax
0x000000000041008f : lea esp, dword ptr [rax + 1] ; add byte ptr [rdi], cl ; or ebp, eax ; salc ; ret 3
0x000000000044e453 : lea rax, qword ptr [rcx + rax*2 - 1] ; mov qword ptr [r9], rax ; ret
0x000000000044c511 : lea rax, qword ptr [rip + 0x1058] ; jmp rax
0x000000000044c523 : lea rax, qword ptr [rip + 0x1116] ; jmp rax
0x000000000044c535 : lea rax, qword ptr [rip + 0x11d4] ; jmp rax
0x000000000044c547 : lea rax, qword ptr [rip + 0x1292] ; jmp rax
0x000000000044c559 : lea rax, qword ptr [rip + 0x1350] ; jmp rax
0x000000000044c39a : lea rax, qword ptr [rip + 0x1ff] ; jmp rax
0x000000000044c3a9 : lea rax, qword ptr [rip + 0x270] ; jmp rax
0x000000000044c3bb : lea rax, qword ptr [rip + 0x2de] ; jmp rax
0x000000000044c3cd : lea rax, qword ptr [rip + 0x37c] ; jmp rax
0x000000000044c3df : lea rax, qword ptr [rip + 0x41a] ; jmp rax
0x000000000044c3f1 : lea rax, qword ptr [rip + 0x4b8] ; jmp rax
0x000000000044c403 : lea rax, qword ptr [rip + 0x556] ; jmp rax
0x000000000044c415 : lea rax, qword ptr [rip + 0x5f4] ; jmp rax
0x000000000044c427 : lea rax, qword ptr [rip + 0x6b2] ; jmp rax
0x000000000044c439 : lea rax, qword ptr [rip + 0x770] ; jmp rax
0x000000000044c44b : lea rax, qword ptr [rip + 0x82e] ; jmp rax
0x000000000044c45d : lea rax, qword ptr [rip + 0x8ec] ; jmp rax
0x000000000044c46f : lea rax, qword ptr [rip + 0x9aa] ; jmp rax
0x000000000044c481 : lea rax, qword ptr [rip + 0xa68] ; jmp rax
0x000000000044c493 : lea rax, qword ptr [rip + 0xb26] ; jmp rax
0x000000000044c4a5 : lea rax, qword ptr [rip + 0xbe4] ; jmp rax
0x000000000044c4b7 : lea rax, qword ptr [rip + 0xca2] ; jmp rax
0x000000000044c4c9 : lea rax, qword ptr [rip + 0xd60] ; jmp rax
0x000000000044c4db : lea rax, qword ptr [rip + 0xe1e] ; jmp rax
0x000000000044c4ed : lea rax, qword ptr [rip + 0xedc] ; jmp rax
0x000000000044c4ff : lea rax, qword ptr [rip + 0xf9a] ; jmp rax
0x000000000044f9fa : lea rax, qword ptr [rip - 0x17981] ; call rax
0x000000000044c1fc : lea rax, qword ptr [rip - 0x23ad3] ; jmp rax
0x000000000044c1dc : lea rax, qword ptr [rip - 0x23af3] ; jmp rax
0x000000000044c562 : lea rax, qword ptr [rip - 0x23df9] ; jmp rax
0x000000000044c253 : lea rax, qword ptr [rip - 0xe4da] ; call rax
0x00000000004019c2 : lea rax, qword ptr [rsp + 0x18] ; sete byte ptr [rax] ; ret
0x0000000000490907 : lea rcx, qword ptr [rdi + 1] ; cmp rbx, rax ; jl 0x4908fc ; ret
0x000000000044e8fc : lea rdi, qword ptr [rdi + 0x40] ; ret
0x000000000046cc58 : lea rdx, qword ptr [rdx + rsi + 1] ; jmp 0x46cc28
0x000000000042b8ad : lea rdx, qword ptr [rip + 0x9d984] ; call rax
0x000000000042b857 : lea rdx, qword ptr [rip + 0x9d9da] ; call rax
0x0000000000427a09 : lea rdx, qword ptr [rip + 0xa1780] ; call rax
0x00000000004279c1 : lea rdx, qword ptr [rip + 0xa17c0] ; call rax
0x000000000042769c : lea rdx, qword ptr [rip + 0xa1abd] ; call rcx
0x000000000042762a : lea rdx, qword ptr [rip + 0xa1b2f] ; call rax
0x0000000000449155 : lea rdx, qword ptr [rsp + 0x80] ; call rax
0x000000000044c06e : lea rsi, qword ptr [rip + 0x1a5b] ; call rax
0x000000000044f80d : lea rsi, qword ptr [rsp] ; call rax
0x0000000000455b1d : leave ; add edi, esi ; ret
0x0000000000480df3 : leave ; cmp edi, edx ; dec dword ptr [rdi] ; or ebp, eax ; ret 0xfa3b
0x00000000004100c7 : leave ; cmp rdx, rax ; jb 0x4100bf ; ret
0x0000000000410167 : leave ; cmp rdx, rax ; jb 0x41015f ; ret
0x0000000000402708 : leave ; je 0x4026c5 ; mov byte ptr [rsp + 0x10], 1 ; ret
0x000000000044a0b3 : leave ; je 0x44a0c4 ; mov byte ptr [rsp + 0x18], 1 ; ret
0x0000000000421c59 : leave ; jg 0x421c6a ; mov byte ptr [rsp + 0x10], 0 ; ret
0x0000000000410eb8 : leave ; jmp 0x410eaa
0x000000000046c0bb : leave ; jmp 0x46bebd
0x0000000000446eca : leave ; jne 0x446edb ; movups xmmword ptr [rsp + 0x10], xmm0 ; ret
0x0000000000410d2b : leave ; lock add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000044dbe0 : leave ; movq qword ptr [rdx], xmm1 ; ret
0x0000000000486584 : leave ; xorps xmm0, xmm0 ; jmp 0x486552
0x0000000000448bd9 : ljmp ptr [rdi + 0x75] ; or ecx, dword ptr [rcx - 0x77] ; ret 0x8948
0x000000000046319c : ljmp ptr [rip - 0x7cb7ef8b] ; ret
0x0000000000463485 : ljmp ptr [rip - 0x7cb7ef8b] ; ret 0x4802
0x0000000000410d2c : lock add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000048a4d5 : lock add byte ptr [rax], al ; add cl, ch ; ret
0x000000000040cbc6 : lock dec dword ptr [rax + 0x39] ; ret
0x000000000042f290 : lodsb al, byte ptr [rsi] ; call qword ptr [rax]
0x0000000000455c35 : lodsb al, byte ptr [rsi] ; jmp 0x455bfd
0x000000000044e63d : lodsb al, byte ptr [rsi] ; mov qword ptr [r8], rdx ; ret
0x0000000000475c65 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add bh, dh ; ret 7
0x0000000000410132 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000409aa8 : loop 0x409abc ; xchg eax, edi ; ret 0xd284
0x000000000041aa87 : loop 0x41aa11 ; stc ; and byte ptr [rcx], bl ; jmp qword ptr [rcx]
0x000000000043f60b : loop 0x43f65b ; mov dword ptr [rsp + 0x10], ecx ; ret
0x0000000000457112 : loop 0x457117 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x5489
0x0000000000457332 : loop 0x457337 ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x5489
0x0000000000462bb3 : loop 0x462bfb ; mov qword ptr [rsp + 0x18], rdx ; ret
0x0000000000470368 : loop 0x470370 ; jg 0x470373 ; add byte ptr [rsi - 9], ah ; ret
0x0000000000470430 : loop 0x470438 ; jg 0x47043b ; add byte ptr [rsi - 9], ah ; ret
0x0000000000475d15 : loop 0x475d10 ; ret 7
0x0000000000475ebb : loop 0x475eb6 ; ret 7
0x000000000041c174 : loope 0x41c107 ; mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040fc31 : loopne 0x40fbbe ; ret
0x0000000000413183 : loopne 0x413189 ; add byte ptr [rax], al ; ret
0x00000000004132c1 : loopne 0x4132c7 ; add byte ptr [rax], al ; ret
0x000000000041336f : loopne 0x413375 ; add byte ptr [rax], al ; ret
0x000000000041337f : loopne 0x413385 ; add byte ptr [rax], al ; ret
0x000000000041338f : loopne 0x413395 ; add byte ptr [rax], al ; ret
0x0000000000438ee3 : loopne 0x438ef0 ; ret
0x000000000044c561 : loopne 0x44c5b3 ; lea eax, dword ptr [rip - 0x23df9] ; jmp rax
0x000000000044ee95 : loopne 0x44ee91 ; movq qword ptr [rdi + rbx - 0x10], mm0 ; ret
0x000000000044eec1 : loopne 0x44eebd ; movq qword ptr [rdi + rbx - 0x10], mm0 ; ret
0x000000000044ef19 : loopne 0x44ef15 ; movq qword ptr [rdi + rbx - 0x10], mm0 ; ret
0x000000000044f0af : loopne 0x44f0ab ; movq qword ptr [rdi + rbx - 0x10], mm3 ; ret
0x000000000044f106 : loopne 0x44f102 ; movq qword ptr [rdi + rbx - 0x10], mm7 ; ret
0x000000000044f1c4 : loopne 0x44f1c1 ; movq qword ptr [rdi + rbx - 0x10], mm7 ; ret
0x000000000044f3a9 : loopne 0x44f3a5 ; movq qword ptr [rbx - 0x10], mm4 ; ret
0x000000000044f485 : loopne 0x44f481 ; movq qword ptr [rcx - 0x10], mm4 ; ret
0x000000000046e6ea : loopne 0x46e712 ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000477f17 : loopne 0x477f3f ; mov qword ptr [rsp + 0x20], rax ; ret
0x000000000048a343 : loopne 0x48a349 ; add byte ptr [rax], al ; ret
0x000000000040581d : mov ah, 0x5c ; jmp rax
0x00000000004056c5 : mov ah, 9 ; add byte ptr [rax + 0x39], cl ; ret 0x7975
0x0000000000408846 : mov al, 0 ; add byte ptr [rax], al ; ret
0x000000000043b8f6 : mov al, 1 ; add byte ptr [rax], al ; ret
0x0000000000463d6d : mov al, 3 ; add byte ptr [rax], al ; ret
0x000000000046b0d9 : mov bh, 0x3d ; ret 0x569
0x0000000000448edb : mov bh, 0x51 ; add ah, byte ptr [rsi - 9] ; ret 1
0x00000000004724c7 : mov bh, 0x51 ; add dword ptr [rsi - 0x3f], esp ; ret 0x4808
0x0000000000404643 : mov bh, 0x51 ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x348
0x000000000047330b : mov bh, 0x52 ; add dword ptr [rsi - 0x3f], esp ; ret 0x4808
0x000000000041300c : mov bh, 0x5a ; xor ah, byte ptr [rsi - 9] ; ret
0x0000000000446e86 : mov bh, 0xc1 ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000404775 : mov bl, 0x68 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000482f92 : mov byte ptr [r12 + 0x18], r8b ; ret
0x000000000042bead : mov byte ptr [rax + 0x114], 1 ; ret
0x000000000044e231 : mov byte ptr [rax], 0 ; ret
0x0000000000407214 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043bd1f : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000044f04e : mov byte ptr [rdi + 2], cl ; ret
0x000000000044ee59 : mov byte ptr [rdi + rbx - 1], al ; ret
0x000000000044f034 : mov byte ptr [rdi + rbx - 1], cl ; ret
0x000000000044ee57 : mov byte ptr [rdi], al ; mov byte ptr [rdi + rbx - 1], al ; ret
0x000000000044f032 : mov byte ptr [rdi], al ; mov byte ptr [rdi + rbx - 1], cl ; ret
0x0000000000410cfb : mov byte ptr [rdx], al ; shr r8, 8 ; inc rdx ; jmp 0x410cf2
0x0000000000410e2e : mov byte ptr [rdx], al ; shr r8, 8 ; inc rdx ; jmp 0x410e10
0x0000000000410cfa : mov byte ptr [rdx], r8b ; shr r8, 8 ; inc rdx ; jmp 0x410cf3
0x0000000000410e2d : mov byte ptr [rdx], r8b ; shr r8, 8 ; inc rdx ; jmp 0x410e11
0x0000000000404830 : mov byte ptr [rip + 0x156952], al ; ret
0x0000000000402719 : mov byte ptr [rsp + 0x10], 0 ; ret
0x000000000044bb84 : mov byte ptr [rsp + 0x10], 0x21 ; ret
0x000000000044bb90 : mov byte ptr [rsp + 0x10], 0x3c ; ret
0x000000000044bb96 : mov byte ptr [rsp + 0x10], 0x3e ; ret
0x000000000040270b : mov byte ptr [rsp + 0x10], 1 ; ret
0x0000000000432ebc : mov byte ptr [rsp + 0x10], al ; ret
0x000000000047b9bd : mov byte ptr [rsp + 0x18], 0 ; call 0x477c17
0x000000000044a0bc : mov byte ptr [rsp + 0x18], 0 ; ret
0x00000000004019a0 : mov byte ptr [rsp + 0x18], 1 ; ret
0x0000000000401a53 : mov byte ptr [rsp + 0x18], al ; ret
0x0000000000401a7d : mov byte ptr [rsp + 0x18], cl ; ret
0x000000000043dbc7 : mov byte ptr [rsp + 0x20], 0 ; ret
0x000000000043dc0c : mov byte ptr [rsp + 0x20], 1 ; ret
0x0000000000466c97 : mov byte ptr [rsp + 0x58], al ; ret
0x0000000000466c3d : mov byte ptr [rsp + 0x58], dh ; ret
0x0000000000466c3c : mov byte ptr [rsp + 0x58], sil ; ret
0x000000000041c175 : mov byte ptr [rsp + 0x98], cl ; jmp 0x41c149
0x0000000000432167 : mov byte ptr [rsp + 8], bl ; ret
0x0000000000482fdd : mov byte ptr [rsp + r12 + 0x18], al ; ret
0x0000000000482fcf : mov byte ptr [rsp + r12 + 0x18], r8b ; ret
0x0000000000401162 : mov cl, 0x4d ; add byte ptr [rdi], cl ; xchg eax, esp ; and al, 0x20 ; ret
0x00000000004337c4 : mov cl, 0x51 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000042e945 : mov cl, 0x51 ; or al, 0xf ; xchg eax, esp ; ret 0xd284
0x000000000043380c : mov cl, 0x59 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000433e79 : mov cl, 0x59 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000042ee6d : mov cl, 0x5a ; or al, 0xf ; xchg eax, esp ; ret 0xd284
0x0000000000404774 : mov cl, 0xb3 ; push 0xf000001 ; xchg eax, esp ; ret
0x0000000000433260 : mov cl, 0xe0 ; add eax, 0x940f0000 ; ret 0xd284
0x00000000004055d1 : mov cl, 9 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000044f048 : mov cl, byte ptr [rsi + 2] ; mov word ptr [rdi], ax ; mov byte ptr [rdi + 2], cl ; ret
0x000000000043ecc5 : mov cs, word ptr [rax - 0x77] ; ret 0x8948
0x0000000000448754 : mov dh, 0x34 ; or ecx, dword ptr [rbp - 0x7fbfbf82] ; jmp qword ptr [rax]
0x0000000000480f51 : mov dh, 0x3c ; cmp ecx, dword ptr [rbp + 0x39] ; sal dword ptr [rdx - 0x34], -0x17 ; ret
0x0000000000482f90 : mov dh, 0x40 ; mov byte ptr [r12 + 0x18], r8b ; ret
0x0000000000482fdb : mov dh, 0x40 ; mov byte ptr [rsp + r12 + 0x18], al ; ret
0x0000000000482fcd : mov dh, 0x40 ; mov byte ptr [rsp + r12 + 0x18], r8b ; ret
0x0000000000407782 : mov dh, 0x42 ; or byte ptr [rax - 0x7d], cl ; ret 0x8308
0x00000000004510a1 : mov dh, 0x44 ; and al, 0x18 ; jmp 0x45106e
0x00000000004515f1 : mov dh, 0x44 ; and al, 0x18 ; jmp 0x4515be
0x0000000000452721 : mov dh, 0x44 ; and al, 0x18 ; jmp 0x4526ee
0x000000000047f9b1 : mov dh, 0x44 ; and al, 0x18 ; jmp 0x47f97e
0x0000000000490531 : mov dh, 0x44 ; and al, 0x18 ; jmp 0x4904fe
0x0000000000474c39 : mov dh, 0x50 ; adc al, 0xf6 ; ret 0xf01
0x0000000000409e67 : mov dh, 0x50 ; or byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000000000408257 : mov dh, 0x50 ; or dword ptr [rdi], ecx ; mov dh, 0x58 ; or dh, dh ; ret
0x00000000004462c4 : mov dh, 0x52 ; adc al, 0xf6 ; ret 0x7402
0x0000000000408ca2 : mov dh, 0x52 ; or dh, dh ; ret 0x7408
0x00000000004079a2 : mov dh, 0x53 ; or byte ptr [rcx - 0xa], al ; ret 0xf08
0x000000000040825b : mov dh, 0x58 ; or dh, dh ; ret
0x000000000040ac80 : mov dh, 0x59 ; adc al, 0xf6 ; ret
0x00000000004086ec : mov dh, 0x59 ; or dh, dh ; ret
0x0000000000447b0e : mov dh, 0x5a ; adc al, 0xf6 ; ret
0x00000000004071e4 : mov dh, 0x5a ; or dh, dh ; ret
0x000000000040835a : mov dh, 0x5b ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000444bd1 : mov dh, 0x84 ; and al, 0x88 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000429ce6 : mov dh, 0x88 ; ret
0x000000000043bb91 : mov dh, 0x88 ; ret 0
0x000000000042f75f : mov dh, 0x89 ; ret
0x0000000000417e59 : mov dh, 0x91 ; ret
0x0000000000429c05 : mov dh, 0x98 ; ret
0x0000000000429c3f : mov dh, 0x98 ; ret 0
0x0000000000417eea : mov dh, 0x99 ; ret
0x000000000042ed2b : mov dh, 0xd ; pop rdi ; ret
0x00000000004760ae : mov dh, 0xe9 ; ret
0x0000000000469283 : mov dh, 0xfb ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x00000000004576c0 : mov dh, 4 ; or byte ptr [rbp + rcx*4 + 0x5a], cl ; add dword ptr [rcx + 0x39], ecx ; ret
0x000000000042a9ae : mov dh, 5 ; ret
0x000000000044c42a : mov dl, 6 ; add byte ptr [rax], al ; jmp rax
0x00000000004052c7 : mov dl, 9 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000044dac7 : mov dword ptr [0xfffffffffffffff8], ebx ; ret
0x000000000044dad2 : mov dword ptr [0xfffffffffffffff8], edi ; ret
0x000000000044c2bb : mov dword ptr [rax + 0x38], 0 ; ret
0x000000000040eefc : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000474691 : mov dword ptr [rax + 0x48000000], ebx ; mov dword ptr [rsp], edx ; call rcx
0x000000000043b36e : mov dword ptr [rax + 0x68], ecx ; ret
0x0000000000406623 : mov dword ptr [rax + 0xa], ecx ; ret
0x0000000000466df7 : mov dword ptr [rax + 8], ecx ; ret
0x000000000044e5eb : mov dword ptr [rax], 0xffffffff ; ret
0x000000000044e5f9 : mov dword ptr [rax], edi ; ret
0x0000000000435070 : mov dword ptr [rax], edx ; mov dword ptr [rsp + 0x20], ebx ; ret
0x000000000044e621 : mov dword ptr [rax], edx ; ret
0x000000000044e6a1 : mov dword ptr [rax], edx ; vzeroupper ; ret
0x0000000000428e12 : mov dword ptr [rcx + 0x140], edx ; jmp 0x428de3
0x000000000044e3a6 : mov dword ptr [rcx], eax ; ret
0x000000000044ee63 : mov dword ptr [rdi + rbx - 2], eax ; ret
0x000000000044ee6a : mov dword ptr [rdi + rbx - 4], eax ; ret
0x000000000044f05a : mov dword ptr [rdi + rbx - 4], ecx ; ret
0x000000000044ee77 : mov dword ptr [rdi + rbx - 8], eax ; ret
0x000000000044f072 : mov dword ptr [rdi + rbx - 8], ecx ; ret
0x0000000000477917 : mov dword ptr [rdi], eax ; jmp 0x47792f
0x00000000004786c5 : mov dword ptr [rdi], eax ; jmp 0x4786dd
0x000000000044f04c : mov dword ptr [rdi], eax ; mov byte ptr [rdi + 2], cl ; ret
0x000000000044ee68 : mov dword ptr [rdi], eax ; mov dword ptr [rdi + rbx - 4], eax ; ret
0x000000000044f058 : mov dword ptr [rdi], eax ; mov dword ptr [rdi + rbx - 4], ecx ; ret
0x000000000044ee74 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + rbx - 8], rax ; ret
0x000000000044f06f : mov dword ptr [rdi], eax ; mov qword ptr [rdi + rbx - 8], rcx ; ret
0x0000000000484c71 : mov dword ptr [rdi], eax ; mov rdx, rax ; jmp 0x484c0f
0x000000000048a392 : mov dword ptr [rdi], eax ; mov rdx, rax ; jmp 0x48a330
0x000000000044ee60 : mov dword ptr [rdi], eax ; mov word ptr [rdi + rbx - 2], ax ; ret
0x000000000044ee70 : mov dword ptr [rdi], eax ; ret
0x000000000042034e : mov dword ptr [rdx], ecx ; xorps xmm0, xmm0 ; movups xmmword ptr [rax], xmm0 ; ret
0x0000000000417d7b : mov dword ptr [rip + 0x12796b], eax ; ret
0x0000000000427913 : mov dword ptr [rip + 0x133987], eax ; call 0x413b78
0x00000000004046f4 : mov dword ptr [rsp + 0x10], 0 ; ret
0x0000000000403aa7 : mov dword ptr [rsp + 0x10], eax ; call 0x40fd26
0x000000000048b0f1 : mov dword ptr [rsp + 0x10], eax ; mov byte ptr [rsp + 0x18], 1 ; ret
0x000000000042603d : mov dword ptr [rsp + 0x10], eax ; mov qword ptr [rsp + 0x18], rcx ; ret
0x00000000004046ee : mov dword ptr [rsp + 0x10], eax ; ret
0x0000000000482f1e : mov dword ptr [rsp + 0x10], ecx ; mov byte ptr [rsp + 0x18], al ; ret
0x000000000045dc1a : mov dword ptr [rsp + 0x10], ecx ; mov rax, qword ptr [rdx] ; call rax
0x0000000000433778 : mov dword ptr [rsp + 0x10], ecx ; ret
0x000000000047bb3a : mov dword ptr [rsp + 0x10], edx ; call 0x477de6
0x000000000040c238 : mov dword ptr [rsp + 0x10], edx ; ret
0x0000000000422f3b : mov dword ptr [rsp + 0x18], 0 ; ret
0x000000000045fd7d : mov dword ptr [rsp + 0x18], 0xb ; ret
0x00000000004011a6 : mov dword ptr [rsp + 0x18], eax ; ret
0x000000000048f4c5 : mov dword ptr [rsp + 0x18], ebx ; mov qword ptr [rsp], rcx ; call rax
0x000000000045d3f2 : mov dword ptr [rsp + 0x18], ecx ; mov dword ptr [rsp + 0x1c], edx ; ret
0x0000000000471c32 : mov dword ptr [rsp + 0x18], ecx ; mov qword ptr [rsp + 0x20], rax ; ret
0x000000000045d6d5 : mov dword ptr [rsp + 0x18], ecx ; mov qword ptr [rsp], r8 ; call rax
0x00000000004065a1 : mov dword ptr [rsp + 0x18], ecx ; ret
0x0000000000462bb6 : mov dword ptr [rsp + 0x18], edx ; ret
0x000000000043dc08 : mov dword ptr [rsp + 0x18], esi ; mov byte ptr [rsp + 0x20], 1 ; ret
0x000000000045d3f6 : mov dword ptr [rsp + 0x1c], edx ; ret
0x000000000040b137 : mov dword ptr [rsp + 0x20], 0 ; ret
0x000000000043505d : mov dword ptr [rsp + 0x20], 0x7fffffff ; ret
0x000000000043a7c2 : mov dword ptr [rsp + 0x20], eax ; call 0x426a56
0x00000000004051f0 : mov dword ptr [rsp + 0x20], eax ; ret
0x0000000000435072 : mov dword ptr [rsp + 0x20], ebx ; ret
0x000000000044f94b : mov dword ptr [rsp + 0x28], eax ; ret
0x000000000047206a : mov dword ptr [rsp + 0x28], edx ; ret
0x000000000044fb47 : mov dword ptr [rsp + 0x30], 0 ; ret
0x000000000044fb3c : mov dword ptr [rsp + 0x30], eax ; ret
0x0000000000466c38 : mov dword ptr [rsp + 0x50], edx ; mov byte ptr [rsp + 0x58], sil ; ret
0x000000000045d40c : mov dword ptr [rsp + 0xc], edx ; ret
0x00000000004409dc : mov dword ptr [rsp + 8], 0 ; ret
0x0000000000479672 : mov dword ptr [rsp + 8], eax ; call 0x425946
0x000000000044f820 : mov dword ptr [rsp + 8], eax ; mov dword ptr [rsp + 0x10], edx ; ret
0x000000000045d408 : mov dword ptr [rsp + 8], eax ; mov dword ptr [rsp + 0xc], edx ; ret
0x000000000040170a : mov dword ptr [rsp + 8], eax ; mov rax, qword ptr [rdx] ; call rax
0x0000000000408779 : mov dword ptr [rsp + 8], eax ; mov rcx, qword ptr [rdx] ; call rcx
0x00000000004334ff : mov dword ptr [rsp + 8], eax ; ret
0x0000000000470c50 : mov dword ptr [rsp + 8], ebx ; mov qword ptr [rsp], rcx ; call rax
0x0000000000443f12 : mov dword ptr [rsp + 8], ebx ; mov rsi, qword ptr [rax] ; mov rdx, rax ; call rsi
0x0000000000407162 : mov dword ptr [rsp + 8], ebx ; mov rsi, qword ptr [rdx] ; call rsi
0x0000000000407bee : mov dword ptr [rsp + 8], ecx ; mov rax, qword ptr [rdx] ; call rax
0x0000000000407b58 : mov dword ptr [rsp + 8], ecx ; mov rbx, qword ptr [rdx] ; call rbx
0x000000000044614f : mov dword ptr [rsp + 8], ecx ; mov rcx, qword ptr [rax] ; mov rdx, rax ; call rcx
0x0000000000406ce9 : mov dword ptr [rsp + 8], ecx ; mov rcx, qword ptr [rdx] ; call rcx
0x0000000000406f20 : mov dword ptr [rsp + 8], ecx ; mov rsi, qword ptr [rdx] ; call rsi
0x0000000000479654 : mov dword ptr [rsp + 8], edi ; call 0x425946
0x0000000000488644 : mov dword ptr [rsp + 8], edx ; mov qword ptr [rsp], rcx ; call rax
0x00000000004025e8 : mov dword ptr [rsp], 0 ; call 0x42e839
0x0000000000454d22 : mov dword ptr [rsp], eax ; call 0x401005
0x0000000000461ba9 : mov dword ptr [rsp], eax ; call 0x40de55
0x000000000040e6af : mov dword ptr [rsp], eax ; call 0x41a8e5
0x0000000000418cea : mov dword ptr [rsp], eax ; call 0x41d109
0x000000000041af4b : mov dword ptr [rsp], eax ; call 0x427245
0x0000000000437011 : mov dword ptr [rsp], eax ; call 0x427249
0x00000000004202c1 : mov dword ptr [rsp], eax ; call 0x427359
0x000000000045d6da : mov dword ptr [rsp], eax ; call rax
0x0000000000456aa1 : mov dword ptr [rsp], eax ; call rbx
0x00000000004256fc : mov dword ptr [rsp], eax ; call rcx
0x0000000000427797 : mov dword ptr [rsp], eax ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000044fb89 : mov dword ptr [rsp], ebx ; call rax
0x0000000000472d2c : mov dword ptr [rsp], ebx ; call rdx
0x0000000000408c5a : mov dword ptr [rsp], ebx ; mov rbx, qword ptr [rdx] ; call rbx
0x00000000004257aa : mov dword ptr [rsp], ecx ; call rax
0x0000000000470ced : mov dword ptr [rsp], ecx ; call rdx
0x00000000004079c9 : mov dword ptr [rsp], ecx ; mov rax, qword ptr [rdx] ; call rax
0x0000000000460b36 : mov dword ptr [rsp], ecx ; mov rcx, qword ptr [rdx] ; call rcx
0x00000000004086d6 : mov dword ptr [rsp], edi ; mov rax, qword ptr [rdx] ; call rax
0x0000000000473680 : mov dword ptr [rsp], edx ; call 0x46f985
0x00000000004831c0 : mov dword ptr [rsp], edx ; call rax
0x0000000000461463 : mov dword ptr [rsp], edx ; call rcx
0x000000000040a029 : mov dword ptr [rsp], edx ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000040e6a4 : mov dword ptr [rsp], esi ; call 0x41a8e5
0x0000000000472cba : mov dword ptr [rsp], esi ; call rbx
0x0000000000464806 : mov dword ptr [rsp], esi ; call rcx
0x0000000000406c1b : mov dword ptr [rsp], esi ; mov rdi, qword ptr [rdx] ; call rdi
0x000000000040aabc : mov dword ptr [rsp], esp ; mov rax, qword ptr [rdx] ; call rax
0x000000000044e6b0 : mov eax, 0 ; ret
0x000000000044fd80 : mov eax, 0x18 ; syscall ; ret
0x000000000044fc2f : mov eax, 0x1c ; syscall ; ret
0x000000000044f79e : mov eax, 0x26 ; syscall ; ret
0x000000000044f77d : mov eax, 0x3e ; syscall ; ret
0x000000000044fe32 : mov eax, 0x48 ; syscall ; ret
0x000000000042d8eb : mov eax, 0x84000000 ; add cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000045a454 : mov eax, 0x8500100e ; ror byte ptr [rdi], 0x85 ; ret
0x000000000044f75d : mov eax, 0xc8 ; syscall ; ret
0x000000000044f604 : mov eax, 0xe7 ; syscall ; ret
0x0000000000444eb4 : mov eax, 0xe9000074 ; ret
0x000000000044f673 : mov eax, 0xffffffff ; mov dword ptr [rsp + 0x10], eax ; ret
0x000000000044f652 : mov eax, 0xffffffff ; mov dword ptr [rsp + 0x18], eax ; ret
0x000000000044f69d : mov eax, 0xffffffff ; mov dword ptr [rsp + 0x20], eax ; ret
0x0000000000482f74 : mov eax, 1 ; mov byte ptr [rsp + 0x18], al ; ret
0x000000000048e7d6 : mov eax, dword ptr [rax + 0x28] ; mov qword ptr [rsp], rcx ; call rax
0x00000000004707a6 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsp + 0x10], rax ; ret
0x00000000004409fc : mov eax, dword ptr [rax + 8] ; mov qword ptr [rsp + 8], rax ; ret
0x00000000004046eb : mov eax, dword ptr [rax] ; mov qword ptr [rsp + 0x10], rax ; ret
0x00000000004286e6 : mov eax, dword ptr [rax] ; mov qword ptr [rsp + 0x18], rax ; ret
0x0000000000419ffb : mov eax, dword ptr [rbx] ; mov rdx, rbx ; call rax
0x000000000042e5d3 : mov eax, dword ptr [rcx + 0x50] ; test rax, rax ; jne 0x42e5e4 ; ret
0x000000000042a940 : mov eax, dword ptr [rcx] ; mov rdx, rcx ; call rax
0x00000000004257a6 : mov eax, dword ptr [rdx + 0x18] ; mov qword ptr [rsp], rcx ; call rax
0x000000000040170f : mov eax, dword ptr [rdx] ; call rax
0x000000000040630b : mov eax, dword ptr [rip + 0x155027] ; imul r8, rdx ; jmp 0x4062bd
0x000000000044f8cb : mov eax, dword ptr [rip + 0xdb7f7] ; call rax
0x000000000044f835 : mov eax, dword ptr [rip + 0xdb88d] ; call rax
0x000000000044fae3 : mov eax, dword ptr [rip + 0xeef17] ; jmp rax
0x000000000044faa3 : mov eax, dword ptr [rip + 0xeef57] ; jmp rax
0x000000000044f040 : mov eax, dword ptr [rsi] ; mov dword ptr [rdi], eax ; ret
0x000000000044f060 : mov eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; ret
0x000000000042ed06 : mov eax, dword ptr [rsp + 0x10] ; jmp 0x42ecd3
0x00000000004011a1 : mov eax, dword ptr [rsp + 0x10] ; mov qword ptr [rsp + 0x18], rax ; ret
0x00000000004051eb : mov eax, dword ptr [rsp + 0x10] ; mov qword ptr [rsp + 0x20], rax ; ret
0x0000000000401175 : mov eax, dword ptr [rsp + 0x10] ; xchg dword ptr [rbp], eax ; ret
0x0000000000401186 : mov eax, dword ptr [rsp + 0x10] ; xchg qword ptr [rbp], rax ; ret
0x000000000048b24c : mov eax, dword ptr [rsp + 0x1c] ; jmp 0x48b219
0x000000000040e4c2 : mov eax, dword ptr [rsp + 0x30] ; jmp 0x40e48f
0x0000000000456a9c : mov eax, dword ptr [rsp + 0x68] ; mov qword ptr [rsp], rax ; call rbx
0x000000000046e701 : mov eax, dword ptr [rsp + 8] ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000042f759 : mov eax, eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x89 ; ret
0x0000000000416fab : mov eax, eax ; mov rdi, rdx ; jmp 0x416f7a
0x0000000000483a82 : mov eax, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call rcx
0x000000000046e0b2 : mov eax, edx ; jmp 0x46e07c
0x000000000040551e : mov ebp, 0x39480009 ; ret 0x7975
0x00000000004020b4 : mov ebp, dword ptr [rsp + 0x10] ; add rsp, 0x18 ; ret
0x000000000040161e : mov ebp, dword ptr [rsp + 0x18] ; add rsp, 0x20 ; ret
0x000000000040106b : mov ebp, dword ptr [rsp + 0x20] ; add rsp, 0x28 ; ret
0x00000000004023b8 : mov ebp, dword ptr [rsp + 0x28] ; add rsp, 0x30 ; ret
0x00000000004021d6 : mov ebp, dword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000402dce : mov ebp, dword ptr [rsp + 0x38] ; add rsp, 0x40 ; ret
0x0000000000406f87 : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; ret
0x000000000040172c : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x50 ; ret
0x000000000040496a : mov ebp, dword ptr [rsp + 0x50] ; add rsp, 0x58 ; ret
0x0000000000402460 : mov ebp, dword ptr [rsp + 0x58] ; add rsp, 0x60 ; ret
0x0000000000402af3 : mov ebp, dword ptr [rsp + 0x60] ; add rsp, 0x68 ; ret
0x00000000004022b5 : mov ebp, dword ptr [rsp + 0x68] ; add rsp, 0x70 ; ret
0x000000000041819b : mov ebp, dword ptr [rsp + 0x70] ; add rsp, 0x78 ; ret
0x0000000000408b2c : mov ebp, dword ptr [rsp + 8] ; add rsp, 0x10 ; ret
0x0000000000404787 : mov ebp, dword ptr [rsp] ; add rsp, 8 ; ret
0x000000000044f9a5 : mov ebp, esp ; and rsp, 0xfffffffffffffff0 ; call rax
0x000000000044c192 : mov ebx, dword ptr [rbx + 8] ; jmp rbx
0x0000000000455b61 : mov ebx, dword ptr [rcx] ; jmp 0x455aeb
0x0000000000403975 : mov ebx, dword ptr [rdx] ; call rbx
0x000000000044d9b9 : mov ebx, dword ptr [rdx] ; jmp rbx
0x00000000004798a0 : mov ebx, dword ptr [rsp + 0x38] ; mov qword ptr [rsp], rbx ; call rdx
0x0000000000472d27 : mov ebx, dword ptr [rsp + 0x68] ; mov qword ptr [rsp], rbx ; call rdx
0x000000000043cc8d : mov ebx, edi ; jmp 0x43cc56
0x000000000044f975 : mov ebx, esp ; and rsp, 0xfffffffffffffff0 ; call rax
0x000000000040d3ed : mov ecx, 0x10 ; jmp 0x40d3bc
0x0000000000405938 : mov ecx, 0x39480009 ; ret
0x0000000000446154 : mov ecx, dword ptr [rax] ; mov rdx, rax ; call rcx
0x00000000004256f8 : mov ecx, dword ptr [rcx + 0x18] ; mov qword ptr [rsp], rax ; call rcx
0x000000000046145f : mov ecx, dword ptr [rcx + 0x18] ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000464802 : mov ecx, dword ptr [rcx + 0x18] ; mov qword ptr [rsp], rsi ; call rcx
0x000000000048b28a : mov ecx, dword ptr [rcx + 0x20] ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000406cee : mov ecx, dword ptr [rdx] ; call rcx
0x000000000047990d : mov ecx, dword ptr [rsp + 0x38] ; mov qword ptr [rsp], rcx ; call rax
0x000000000047a67e : mov ecx, dword ptr [rsp + 0x40] ; mov qword ptr [rsp], rcx ; call rax
0x000000000047a81e : mov ecx, dword ptr [rsp + 0x48] ; mov qword ptr [rsp], rcx ; call rax
0x0000000000472d4d : mov ecx, dword ptr [rsp + 0x58] ; mov qword ptr [rsp], rcx ; call rax
0x00000000004860a7 : mov ecx, dword ptr [rsp + 0x68] ; mov qword ptr [rsp], rcx ; call rax
0x000000000047ba31 : mov ecx, dword ptr [rsp + 0x78] ; mov qword ptr [rsp], rcx ; call rax
0x000000000044da6c : mov ecx, ebx ; call rax
0x000000000044efd8 : mov ecx, ebx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000410eb7 : mov ecx, ecx ; jmp 0x410eab
0x000000000044c06c : mov ecx, edi ; lea rsi, qword ptr [rip + 0x1a5b] ; call rax
0x000000000044f808 : mov edi, 0 ; lea rsi, qword ptr [rsp] ; call rax
0x0000000000405432 : mov edi, 0x39480009 ; ret 0x850f
0x000000000044f898 : mov edi, 1 ; lea rsi, qword ptr [rsp] ; call rax
0x000000000044c1f7 : mov edi, dword ptr [rdi] ; call rdi
0x000000000044c2c7 : mov edi, dword ptr [rdi] ; jmp rdi
0x0000000000406c1f : mov edi, dword ptr [rdx] ; call rdi
0x0000000000402db1 : mov edi, dword ptr [rsp + 0x14] ; jmp 0x402d45
0x0000000000440557 : mov edi, dword ptr [rsp + 0x28] ; jmp 0x4404ca
0x000000000044da69 : mov edi, ebx ; mov rcx, rbx ; call rax
0x00000000004658b3 : mov edi, ecx ; jmp 0x46587d
0x0000000000416fae : mov edi, edx ; jmp 0x416f77
0x000000000046552f : mov edi, edx ; jmp 0x4654f8
0x000000000044c5d0 : mov edi, esp ; rep movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x38] ; call qword ptr [rdx]
0x000000000044c650 : mov edi, esp ; rep movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x58] ; call qword ptr [rdx]
0x0000000000405837 : mov edx, 0x39480009 ; ret 0x850f
0x000000000042a93e : mov edx, 0x48018b48 ; mov edx, ecx ; call rax
0x0000000000419e71 : mov edx, 0x8aeb00e0 ; mov rax, qword ptr [rdx] ; call rax
0x000000000042681c : mov edx, 0x920f01e1 ; ret 0x2fe9
0x000000000045271d : mov edx, 0xb60fffff ; and al, 0x18 ; jmp 0x4526f2
0x0000000000419eea : mov edx, 0xf74800e3 ; ret
0x0000000000486b9e : mov edx, dword ptr [rax + 0x48] ; mov qword ptr [rsp], rcx ; call rdx
0x000000000044d772 : mov edx, dword ptr [rsp + 0x10000018] ; call qword ptr [rdx]
0x000000000044d432 : mov edx, dword ptr [rsp + 0x1000018] ; call qword ptr [rdx]
0x000000000044d0f2 : mov edx, dword ptr [rsp + 0x100018] ; call qword ptr [rdx]
0x000000000044cdb2 : mov edx, dword ptr [rsp + 0x10018] ; call qword ptr [rdx]
0x000000000044ca72 : mov edx, dword ptr [rsp + 0x1018] ; call qword ptr [rdx]
0x000000000044c79c : mov edx, dword ptr [rsp + 0x118] ; call qword ptr [rdx]
0x000000000044d842 : mov edx, dword ptr [rsp + 0x20000018] ; call qword ptr [rdx]
0x000000000044d502 : mov edx, dword ptr [rsp + 0x2000018] ; call qword ptr [rdx]
0x000000000044d1c2 : mov edx, dword ptr [rsp + 0x200018] ; call qword ptr [rdx]
0x000000000044ce82 : mov edx, dword ptr [rsp + 0x20018] ; call qword ptr [rdx]
0x000000000044cb42 : mov edx, dword ptr [rsp + 0x2018] ; call qword ptr [rdx]
0x000000000044c84c : mov edx, dword ptr [rsp + 0x218] ; call qword ptr [rdx]
0x000000000040c083 : mov edx, dword ptr [rsp + 0x28] ; mov rax, qword ptr [rdx] ; call rax
0x000000000044c5d5 : mov edx, dword ptr [rsp + 0x38] ; call qword ptr [rdx]
0x00000000004720a7 : mov edx, dword ptr [rsp + 0x38] ; mov qword ptr [rsp], rdx ; call rcx
0x000000000044d912 : mov edx, dword ptr [rsp + 0x40000018] ; call qword ptr [rdx]
0x000000000044d5d2 : mov edx, dword ptr [rsp + 0x4000018] ; call qword ptr [rdx]
0x000000000044d292 : mov edx, dword ptr [rsp + 0x400018] ; call qword ptr [rdx]
0x000000000044cf52 : mov edx, dword ptr [rsp + 0x40018] ; call qword ptr [rdx]
0x000000000044cc12 : mov edx, dword ptr [rsp + 0x4018] ; call qword ptr [rdx]
0x0000000000479b07 : mov edx, dword ptr [rsp + 0x40] ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000455f15 : mov edx, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rdx] ; call rax
0x000000000048bf6b : mov edx, dword ptr [rsp + 0x40] ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000044c8fc : mov edx, dword ptr [rsp + 0x418] ; call qword ptr [rdx]
0x0000000000403970 : mov edx, dword ptr [rsp + 0x50] ; mov rbx, qword ptr [rdx] ; call rbx
0x000000000044c655 : mov edx, dword ptr [rsp + 0x58] ; call qword ptr [rdx]
0x0000000000472c8a : mov edx, dword ptr [rsp + 0x58] ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000472d6e : mov edx, dword ptr [rsp + 0x68] ; mov qword ptr [rsp], rdx ; call rcx
0x000000000042ad41 : mov edx, dword ptr [rsp + 0x68] ; mov rax, qword ptr [rdx] ; call rax
0x00000000004831bb : mov edx, dword ptr [rsp + 0x70] ; mov qword ptr [rsp], rdx ; call rax
0x000000000047b97e : mov edx, dword ptr [rsp + 0x78] ; mov qword ptr [rsp], rdx ; call rcx
0x000000000044d6a2 : mov edx, dword ptr [rsp + 0x8000018] ; call qword ptr [rdx]
0x000000000044d362 : mov edx, dword ptr [rsp + 0x800018] ; call qword ptr [rdx]
0x000000000044d022 : mov edx, dword ptr [rsp + 0x80018] ; call qword ptr [rdx]
0x000000000044cce2 : mov edx, dword ptr [rsp + 0x8018] ; call qword ptr [rdx]
0x000000000044c9ac : mov edx, dword ptr [rsp + 0x818] ; call qword ptr [rdx]
0x000000000044c6e9 : mov edx, dword ptr [rsp + 0x98] ; call qword ptr [rdx]
0x0000000000446157 : mov edx, eax ; call rcx
0x0000000000443f1a : mov edx, eax ; call rsi
0x0000000000410450 : mov edx, eax ; jmp 0x410401
0x0000000000435797 : mov edx, eax ; jmp 0x43573c
0x000000000045e1bb : mov edx, eax ; jmp 0x45e192
0x0000000000484c74 : mov edx, eax ; jmp 0x484c0c
0x000000000048a395 : mov edx, eax ; jmp 0x48a32d
0x000000000048b98a : mov edx, eax ; jmp 0x48b922
0x0000000000419ffe : mov edx, ebx ; call rax
0x000000000042a943 : mov edx, ecx ; call rax
0x000000000044c1f4 : mov edx, edi ; mov rdi, qword ptr [rdi] ; call rdi
0x000000000044c2c4 : mov edx, edi ; mov rdi, qword ptr [rdi] ; jmp rdi
0x0000000000443f17 : mov esi, dword ptr [rax] ; mov rdx, rax ; call rsi
0x0000000000406f25 : mov esi, dword ptr [rdx] ; call rsi
0x0000000000472cb5 : mov esi, dword ptr [rsp + 0x68] ; mov qword ptr [rsp], rsi ; call rbx
0x000000000047b9e8 : mov esi, dword ptr [rsp + 0x78] ; mov qword ptr [rsp], rsi ; call rbx
0x000000000041012c : mov esi, eax ; cmp rcx, rdx ; jb 0x4100e7 ; ret
0x000000000044e63a : mov esp, 0x49ac74d2 ; mov dword ptr [rax], edx ; ret
0x000000000041818f : mov esp, 0x8824 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000489a69 : mov esp, 0xe824 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000475d10 : mov esp, 0xebfffd89 ; loop 0x475d15 ; ret 7
0x000000000044f9ae : mov esp, ebp ; pop rbp ; ret
0x000000000044c28f : mov esp, ebx ; mov rdx, rdi ; mov rdi, qword ptr [rdi] ; call rdi
0x000000000044da88 : mov esp, esi ; mov dword ptr [rsp + 0x18], eax ; ret
0x00000000004148f9 : mov gs, word ptr [rcx] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044dac6 : mov qword ptr [0xfffffffffffffff8], rbx ; ret
0x000000000044dad1 : mov qword ptr [0xfffffffffffffff8], rdi ; ret
0x000000000044e5ea : mov qword ptr [r8], -1 ; ret
0x000000000044e5f8 : mov qword ptr [r8], rdi ; ret
0x000000000044e620 : mov qword ptr [r8], rdx ; ret
0x000000000044e6a0 : mov qword ptr [r8], rdx ; vzeroupper ; ret
0x000000000044e3a5 : mov qword ptr [r9], rax ; ret
0x000000000044c2ba : mov qword ptr [rax + 0x38], 0 ; ret
0x000000000040eefb : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000043b36d : mov qword ptr [rax + 0x68], rcx ; ret
0x0000000000466df6 : mov qword ptr [rax + 8], rcx ; ret
0x0000000000428e11 : mov qword ptr [rcx + 0x140], rdx ; jmp 0x428de4
0x000000000044ee76 : mov qword ptr [rdi + rbx - 8], rax ; ret
0x000000000044f071 : mov qword ptr [rdi + rbx - 8], rcx ; ret
0x0000000000477916 : mov qword ptr [rdi], rax ; jmp 0x477930
0x00000000004786c4 : mov qword ptr [rdi], rax ; jmp 0x4786de
0x000000000044ee73 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + rbx - 8], rax ; ret
0x000000000044f06e : mov qword ptr [rdi], rax ; mov qword ptr [rdi + rbx - 8], rcx ; ret
0x0000000000484c70 : mov qword ptr [rdi], rax ; mov rdx, rax ; jmp 0x484c10
0x000000000048a391 : mov qword ptr [rdi], rax ; mov rdx, rax ; jmp 0x48a331
0x000000000044ee6f : mov qword ptr [rdi], rax ; ret
0x000000000042034d : mov qword ptr [rdx], rcx ; xorps xmm0, xmm0 ; movups xmmword ptr [rax], xmm0 ; ret
0x0000000000427912 : mov qword ptr [rip + 0x133987], rax ; call 0x413b79
0x00000000004046f3 : mov qword ptr [rsp + 0x10], 0 ; ret
0x000000000045dc19 : mov qword ptr [rsp + 0x10], r9 ; mov rax, qword ptr [rdx] ; call rax
0x0000000000403aa6 : mov qword ptr [rsp + 0x10], rax ; call 0x40fd27
0x0000000000403aa5 : mov qword ptr [rsp + 0x10], rax ; call 0x40fd28
0x00000000004046ed : mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000482f1d : mov qword ptr [rsp + 0x10], rcx ; mov byte ptr [rsp + 0x18], al ; ret
0x0000000000439bd5 : mov qword ptr [rsp + 0x10], rcx ; ret
0x000000000047bb39 : mov qword ptr [rsp + 0x10], rdx ; call 0x477de7
0x000000000040c237 : mov qword ptr [rsp + 0x10], rdx ; ret
0x0000000000422f3a : mov qword ptr [rsp + 0x18], 0 ; ret
0x000000000045fd7c : mov qword ptr [rsp + 0x18], 0xb ; ret
0x000000000045d6d4 : mov qword ptr [rsp + 0x18], r9 ; mov qword ptr [rsp], r8 ; call rax
0x00000000004011a5 : mov qword ptr [rsp + 0x18], rax ; ret
0x00000000004065a0 : mov qword ptr [rsp + 0x18], rcx ; ret
0x0000000000462bb5 : mov qword ptr [rsp + 0x18], rdx ; ret
0x000000000040b136 : mov qword ptr [rsp + 0x20], 0 ; ret
0x000000000040b130 : mov qword ptr [rsp + 0x20], r8 ; ret
0x000000000043a7c1 : mov qword ptr [rsp + 0x20], rax ; call 0x426a57
0x00000000004051ef : mov qword ptr [rsp + 0x20], rax ; ret
0x000000000043b509 : mov qword ptr [rsp + 0x20], rbx ; ret
0x000000000044fb46 : mov qword ptr [rsp + 0x30], 0 ; ret
0x000000000044fb3b : mov qword ptr [rsp + 0x30], rax ; ret
0x00000000004409db : mov qword ptr [rsp + 8], 0 ; ret
0x0000000000407bed : mov qword ptr [rsp + 8], r9 ; mov rax, qword ptr [rdx] ; call rax
0x0000000000479671 : mov qword ptr [rsp + 8], rax ; call 0x425947
0x000000000044f81f : mov qword ptr [rsp + 8], rax ; mov dword ptr [rsp + 0x10], edx ; ret
0x0000000000401709 : mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rdx] ; call rax
0x0000000000408778 : mov qword ptr [rsp + 8], rax ; mov rcx, qword ptr [rdx] ; call rcx
0x00000000004334fe : mov qword ptr [rsp + 8], rax ; ret
0x0000000000470c4f : mov qword ptr [rsp + 8], rbx ; mov qword ptr [rsp], rcx ; call rax
0x0000000000407161 : mov qword ptr [rsp + 8], rbx ; mov rsi, qword ptr [rdx] ; call rsi
0x0000000000407b57 : mov qword ptr [rsp + 8], rcx ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000406ce8 : mov qword ptr [rsp + 8], rcx ; mov rcx, qword ptr [rdx] ; call rcx
0x0000000000406f1f : mov qword ptr [rsp + 8], rcx ; mov rsi, qword ptr [rdx] ; call rsi
0x0000000000479653 : mov qword ptr [rsp + 8], rdi ; call 0x425947
0x0000000000488643 : mov qword ptr [rsp + 8], rdx ; mov qword ptr [rsp], rcx ; call rax
0x000000000040a028 : mov qword ptr [rsp], r10 ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000040aabb : mov qword ptr [rsp], r12 ; mov rax, qword ptr [rdx] ; call rax
0x00000000004086d5 : mov qword ptr [rsp], r15 ; mov rax, qword ptr [rdx] ; call rax
0x000000000045d6d9 : mov qword ptr [rsp], r8 ; call rax
0x00000000004079c8 : mov qword ptr [rsp], r9 ; mov rax, qword ptr [rdx] ; call rax
0x0000000000454d21 : mov qword ptr [rsp], rax ; call 0x401006
0x0000000000454d20 : mov qword ptr [rsp], rax ; call 0x401007
0x0000000000461ba8 : mov qword ptr [rsp], rax ; call 0x40de56
0x000000000040e6ae : mov qword ptr [rsp], rax ; call 0x41a8e6
0x000000000041af4a : mov qword ptr [rsp], rax ; call 0x427246
0x000000000041af70 : mov qword ptr [rsp], rax ; call 0x427247
0x0000000000456aa0 : mov qword ptr [rsp], rax ; call rbx
0x00000000004256fb : mov qword ptr [rsp], rax ; call rcx
0x0000000000427796 : mov qword ptr [rsp], rax ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000044fb88 : mov qword ptr [rsp], rbx ; call rax
0x0000000000472d2b : mov qword ptr [rsp], rbx ; call rdx
0x0000000000408c59 : mov qword ptr [rsp], rbx ; mov rbx, qword ptr [rdx] ; call rbx
0x00000000004257a9 : mov qword ptr [rsp], rcx ; call rax
0x0000000000470cec : mov qword ptr [rsp], rcx ; call rdx
0x000000000042b014 : mov qword ptr [rsp], rcx ; mov rax, qword ptr [rdx] ; call rax
0x0000000000460b35 : mov qword ptr [rsp], rcx ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000047367f : mov qword ptr [rsp], rdx ; call 0x46f986
0x00000000004831bf : mov qword ptr [rsp], rdx ; call rax
0x0000000000461462 : mov qword ptr [rsp], rdx ; call rcx
0x000000000040e6a3 : mov qword ptr [rsp], rsi ; call 0x41a8e6
0x0000000000472cb9 : mov qword ptr [rsp], rsi ; call rbx
0x0000000000464805 : mov qword ptr [rsp], rsi ; call rcx
0x0000000000406c1a : mov qword ptr [rsp], rsi ; mov rdi, qword ptr [rdx] ; call rdi
0x000000000044dac5 : mov qword ptr fs:[0xfffffffffffffff8], rbx ; ret
0x000000000044dad0 : mov qword ptr fs:[0xfffffffffffffff8], rdi ; ret
0x000000000046e0b1 : mov r8, rdx ; jmp 0x46e07d
0x0000000000410eb6 : mov r9, rcx ; jmp 0x410eac
0x0000000000405937 : mov r9d, 0x39480009 ; ret
0x000000000044fc2e : mov rax, 0x1c ; syscall ; ret
0x000000000048e7d5 : mov rax, qword ptr [rax + 0x28] ; mov qword ptr [rsp], rcx ; call rax
0x00000000004707a5 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsp + 0x10], rax ; ret
0x00000000004409fb : mov rax, qword ptr [rax + 8] ; mov qword ptr [rsp + 8], rax ; ret
0x00000000004046ea : mov rax, qword ptr [rax] ; mov qword ptr [rsp + 0x10], rax ; ret
0x00000000004286e5 : mov rax, qword ptr [rax] ; mov qword ptr [rsp + 0x18], rax ; ret
0x0000000000419ffa : mov rax, qword ptr [rbx] ; mov rdx, rbx ; call rax
0x000000000042e5d2 : mov rax, qword ptr [rcx + 0x50] ; test rax, rax ; jne 0x42e5e5 ; ret
0x000000000042a93f : mov rax, qword ptr [rcx] ; mov rdx, rcx ; call rax
0x00000000004257a5 : mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rsp], rcx ; call rax
0x000000000040170e : mov rax, qword ptr [rdx] ; call rax
0x000000000044f8ca : mov rax, qword ptr [rip + 0xdb7f7] ; call rax
0x000000000044f834 : mov rax, qword ptr [rip + 0xdb88d] ; call rax
0x000000000044fae2 : mov rax, qword ptr [rip + 0xeef17] ; jmp rax
0x000000000044faa2 : mov rax, qword ptr [rip + 0xeef57] ; jmp rax
0x000000000044f05f : mov rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; ret
0x000000000042ed05 : mov rax, qword ptr [rsp + 0x10] ; jmp 0x42ecd4
0x0000000000401185 : mov rax, qword ptr [rsp + 0x10] ; xchg qword ptr [rbp], rax ; ret
0x000000000040e4c1 : mov rax, qword ptr [rsp + 0x30] ; jmp 0x40e490
0x0000000000456a9b : mov rax, qword ptr [rsp + 0x68] ; mov qword ptr [rsp], rax ; call rbx
0x0000000000416faa : mov rax, r8 ; mov rdi, rdx ; jmp 0x416f7b
0x00000000004020b3 : mov rbp, qword ptr [rsp + 0x10] ; add rsp, 0x18 ; ret
0x000000000040161d : mov rbp, qword ptr [rsp + 0x18] ; add rsp, 0x20 ; ret
0x000000000040106a : mov rbp, qword ptr [rsp + 0x20] ; add rsp, 0x28 ; ret
0x00000000004023b7 : mov rbp, qword ptr [rsp + 0x28] ; add rsp, 0x30 ; ret
0x00000000004021d5 : mov rbp, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000402dcd : mov rbp, qword ptr [rsp + 0x38] ; add rsp, 0x40 ; ret
0x0000000000406f86 : mov rbp, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; ret
0x000000000040172b : mov rbp, qword ptr [rsp + 0x48] ; add rsp, 0x50 ; ret
0x0000000000404969 : mov rbp, qword ptr [rsp + 0x50] ; add rsp, 0x58 ; ret
0x000000000040245f : mov rbp, qword ptr [rsp + 0x58] ; add rsp, 0x60 ; ret
0x0000000000402af2 : mov rbp, qword ptr [rsp + 0x60] ; add rsp, 0x68 ; ret
0x00000000004022b4 : mov rbp, qword ptr [rsp + 0x68] ; add rsp, 0x70 ; ret
0x000000000041819a : mov rbp, qword ptr [rsp + 0x70] ; add rsp, 0x78 ; ret
0x0000000000408b2b : mov rbp, qword ptr [rsp + 8] ; add rsp, 0x10 ; ret
0x0000000000404786 : mov rbp, qword ptr [rsp] ; add rsp, 8 ; ret
0x000000000044f9a4 : mov rbp, rsp ; and rsp, 0xfffffffffffffff0 ; call rax
0x000000000044c191 : mov rbx, qword ptr [rbx + 8] ; jmp rbx
0x0000000000403974 : mov rbx, qword ptr [rdx] ; call rbx
0x000000000044d9b8 : mov rbx, qword ptr [rdx] ; jmp rbx
0x000000000047989f : mov rbx, qword ptr [rsp + 0x38] ; mov qword ptr [rsp], rbx ; call rdx
0x0000000000472d26 : mov rbx, qword ptr [rsp + 0x68] ; mov qword ptr [rsp], rbx ; call rdx
0x000000000043cc8c : mov rbx, rdi ; jmp 0x43cc57
0x000000000044f974 : mov rbx, rsp ; and rsp, 0xfffffffffffffff0 ; call rax
0x0000000000446153 : mov rcx, qword ptr [rax] ; mov rdx, rax ; call rcx
0x00000000004256f7 : mov rcx, qword ptr [rcx + 0x18] ; mov qword ptr [rsp], rax ; call rcx
0x000000000046145e : mov rcx, qword ptr [rcx + 0x18] ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000464801 : mov rcx, qword ptr [rcx + 0x18] ; mov qword ptr [rsp], rsi ; call rcx
0x000000000048b289 : mov rcx, qword ptr [rcx + 0x20] ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000406ced : mov rcx, qword ptr [rdx] ; call rcx
0x000000000047990c : mov rcx, qword ptr [rsp + 0x38] ; mov qword ptr [rsp], rcx ; call rax
0x000000000047a67d : mov rcx, qword ptr [rsp + 0x40] ; mov qword ptr [rsp], rcx ; call rax
0x000000000047a81d : mov rcx, qword ptr [rsp + 0x48] ; mov qword ptr [rsp], rcx ; call rax
0x0000000000472d4c : mov rcx, qword ptr [rsp + 0x58] ; mov qword ptr [rsp], rcx ; call rax
0x00000000004860a6 : mov rcx, qword ptr [rsp + 0x68] ; mov qword ptr [rsp], rcx ; call rax
0x000000000047ba30 : mov rcx, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rcx ; call rax
0x000000000044da6b : mov rcx, rbx ; call rax
0x000000000044efd7 : mov rcx, rbx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044c1f6 : mov rdi, qword ptr [rdi] ; call rdi
0x000000000044c2c6 : mov rdi, qword ptr [rdi] ; jmp rdi
0x0000000000406c1e : mov rdi, qword ptr [rdx] ; call rdi
0x0000000000440556 : mov rdi, qword ptr [rsp + 0x28] ; jmp 0x4404cb
0x000000000044da68 : mov rdi, rbx ; mov rcx, rbx ; call rax
0x00000000004658b2 : mov rdi, rcx ; jmp 0x46587e
0x0000000000416fad : mov rdi, rdx ; jmp 0x416f78
0x000000000046552e : mov rdi, rdx ; jmp 0x4654f9
0x0000000000486b9d : mov rdx, qword ptr [rax + 0x48] ; mov qword ptr [rsp], rcx ; call rdx
0x000000000044d771 : mov rdx, qword ptr [rsp + 0x10000018] ; call qword ptr [rdx]
0x000000000044d431 : mov rdx, qword ptr [rsp + 0x1000018] ; call qword ptr [rdx]
0x000000000044d0f1 : mov rdx, qword ptr [rsp + 0x100018] ; call qword ptr [rdx]
0x000000000044cdb1 : mov rdx, qword ptr [rsp + 0x10018] ; call qword ptr [rdx]
0x000000000044ca71 : mov rdx, qword ptr [rsp + 0x1018] ; call qword ptr [rdx]
0x000000000044c79b : mov rdx, qword ptr [rsp + 0x118] ; call qword ptr [rdx]
0x000000000044d841 : mov rdx, qword ptr [rsp + 0x20000018] ; call qword ptr [rdx]
0x000000000044d501 : mov rdx, qword ptr [rsp + 0x2000018] ; call qword ptr [rdx]
0x000000000044d1c1 : mov rdx, qword ptr [rsp + 0x200018] ; call qword ptr [rdx]
0x000000000044ce81 : mov rdx, qword ptr [rsp + 0x20018] ; call qword ptr [rdx]
0x000000000044cb41 : mov rdx, qword ptr [rsp + 0x2018] ; call qword ptr [rdx]
0x000000000044c84b : mov rdx, qword ptr [rsp + 0x218] ; call qword ptr [rdx]
0x000000000040c082 : mov rdx, qword ptr [rsp + 0x28] ; mov rax, qword ptr [rdx] ; call rax
0x000000000044c5d4 : mov rdx, qword ptr [rsp + 0x38] ; call qword ptr [rdx]
0x00000000004720a6 : mov rdx, qword ptr [rsp + 0x38] ; mov qword ptr [rsp], rdx ; call rcx
0x000000000044d911 : mov rdx, qword ptr [rsp + 0x40000018] ; call qword ptr [rdx]
0x000000000044d5d1 : mov rdx, qword ptr [rsp + 0x4000018] ; call qword ptr [rdx]
0x000000000044d291 : mov rdx, qword ptr [rsp + 0x400018] ; call qword ptr [rdx]
0x000000000044cf51 : mov rdx, qword ptr [rsp + 0x40018] ; call qword ptr [rdx]
0x000000000044cc11 : mov rdx, qword ptr [rsp + 0x4018] ; call qword ptr [rdx]
0x0000000000479b06 : mov rdx, qword ptr [rsp + 0x40] ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000455f14 : mov rdx, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rdx] ; call rax
0x000000000048bf6a : mov rdx, qword ptr [rsp + 0x40] ; mov rcx, qword ptr [rdx] ; call rcx
0x000000000044c8fb : mov rdx, qword ptr [rsp + 0x418] ; call qword ptr [rdx]
0x000000000040396f : mov rdx, qword ptr [rsp + 0x50] ; mov rbx, qword ptr [rdx] ; call rbx
0x000000000044c654 : mov rdx, qword ptr [rsp + 0x58] ; call qword ptr [rdx]
0x0000000000472c89 : mov rdx, qword ptr [rsp + 0x58] ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000472d6d : mov rdx, qword ptr [rsp + 0x68] ; mov qword ptr [rsp], rdx ; call rcx
0x000000000042ad40 : mov rdx, qword ptr [rsp + 0x68] ; mov rax, qword ptr [rdx] ; call rax
0x00000000004831ba : mov rdx, qword ptr [rsp + 0x70] ; mov qword ptr [rsp], rdx ; call rax
0x000000000047b97d : mov rdx, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rdx ; call rcx
0x000000000044d6a1 : mov rdx, qword ptr [rsp + 0x8000018] ; call qword ptr [rdx]
0x000000000044d361 : mov rdx, qword ptr [rsp + 0x800018] ; call qword ptr [rdx]
0x000000000044d021 : mov rdx, qword ptr [rsp + 0x80018] ; call qword ptr [rdx]
0x000000000044cce1 : mov rdx, qword ptr [rsp + 0x8018] ; call qword ptr [rdx]
0x000000000044c9ab : mov rdx, qword ptr [rsp + 0x818] ; call qword ptr [rdx]
0x000000000044c6e8 : mov rdx, qword ptr [rsp + 0x98] ; call qword ptr [rdx]
0x000000000048b989 : mov rdx, r8 ; jmp 0x48b923
0x0000000000446156 : mov rdx, rax ; call rcx
0x0000000000443f19 : mov rdx, rax ; call rsi
0x000000000041044f : mov rdx, rax ; jmp 0x410402
0x0000000000435796 : mov rdx, rax ; jmp 0x43573d
0x000000000045e1ba : mov rdx, rax ; jmp 0x45e193
0x0000000000484c73 : mov rdx, rax ; jmp 0x484c0d
0x000000000048a394 : mov rdx, rax ; jmp 0x48a32e
0x0000000000419ffd : mov rdx, rbx ; call rax
0x000000000042a942 : mov rdx, rcx ; call rax
0x000000000044c1f3 : mov rdx, rdi ; mov rdi, qword ptr [rdi] ; call rdi
0x000000000044c2c3 : mov rdx, rdi ; mov rdi, qword ptr [rdi] ; jmp rdi
0x0000000000443f16 : mov rsi, qword ptr [rax] ; mov rdx, rax ; call rsi
0x0000000000406f24 : mov rsi, qword ptr [rdx] ; call rsi
0x0000000000472cb4 : mov rsi, qword ptr [rsp + 0x68] ; mov qword ptr [rsp], rsi ; call rbx
0x000000000047b9e7 : mov rsi, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rsi ; call rbx
0x000000000041012b : mov rsi, r8 ; cmp rcx, rdx ; jb 0x4100e8 ; ret
0x000000000044f9ad : mov rsp, rbp ; pop rbp ; ret
0x000000000044c28e : mov rsp, rbx ; mov rdx, rdi ; mov rdi, qword ptr [rdi] ; call rdi
0x000000000044da87 : mov rsp, rsi ; mov dword ptr [rsp + 0x18], eax ; ret
0x0000000000406622 : mov word ptr [rax + 0xa], cx ; ret
0x00000000004394c3 : mov word ptr [rax + rax + 0x39480000], cs ; ret
0x000000000043ca91 : mov word ptr [rax + rbp*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x000000000041c176 : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000004723e0 : mov word ptr [rax + rcx*2], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000474408 : mov word ptr [rax + rdx*8], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7e7d
0x000000000044ee62 : mov word ptr [rdi + rbx - 2], ax ; ret
0x000000000044f04b : mov word ptr [rdi], ax ; mov byte ptr [rdi + 2], cl ; ret
0x000000000044ee5f : mov word ptr [rdi], ax ; mov word ptr [rdi + rbx - 2], ax ; ret
0x000000000044ab3a : movabs byte ptr [0x8949c88949000f46], al ; ret 0x8b48
0x000000000040f901 : movabs dword ptr [0x2948d18949001352], eax ; ret 0x8948
0x000000000044f558 : movdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x000000000044f3aa : movdqu xmmword ptr [rbx - 0x10], xmm12 ; ret
0x000000000044f486 : movdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x000000000044ee80 : movdqu xmmword ptr [rdi + rbx - 0x10], xmm0 ; ret
0x000000000044f085 : movdqu xmmword ptr [rdi + rbx - 0x10], xmm1 ; ret
0x000000000044f1c5 : movdqu xmmword ptr [rdi + rbx - 0x10], xmm15 ; ret
0x000000000044f0b0 : movdqu xmmword ptr [rdi + rbx - 0x10], xmm3 ; ret
0x000000000044f107 : movdqu xmmword ptr [rdi + rbx - 0x10], xmm7 ; ret
0x000000000044f55a : movq qword ptr [rax + 0x70], mm4 ; ret
0x000000000044f3ac : movq qword ptr [rbx - 0x10], mm4 ; ret
0x000000000044f488 : movq qword ptr [rcx - 0x10], mm4 ; ret
0x000000000044ee81 : movq qword ptr [rdi + rbx - 0x10], mm0 ; ret
0x000000000044f086 : movq qword ptr [rdi + rbx - 0x10], mm1 ; ret
0x000000000044f0b1 : movq qword ptr [rdi + rbx - 0x10], mm3 ; ret
0x000000000044f108 : movq qword ptr [rdi + rbx - 0x10], mm7 ; ret
0x000000000044ee7d : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0 ; ret
0x000000000044f082 : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + rbx - 0x10], xmm1 ; ret
0x000000000044dc03 : movq qword ptr [rdx], xmm0 ; ret
0x000000000044dbe1 : movq qword ptr [rdx], xmm1 ; ret
0x000000000044dc4f : movq qword ptr [rdx], xmm2 ; ret
0x000000000044dcf0 : movq qword ptr [rdx], xmm4 ; ret
0x000000000044de76 : movq qword ptr [rdx], xmm8 ; ret
0x000000000044e0dc : movq qword ptr [rsp + 0x18], xmm0 ; ret
0x00000000004630f2 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044d770 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x10000018] ; call qword ptr [rdx]
0x000000000044d430 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x1000018] ; call qword ptr [rdx]
0x000000000044d0f0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x100018] ; call qword ptr [rdx]
0x000000000044cdb0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x10018] ; call qword ptr [rdx]
0x000000000044ca70 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x1018] ; call qword ptr [rdx]
0x000000000044c79a : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x118] ; call qword ptr [rdx]
0x000000000044d840 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x20000018] ; call qword ptr [rdx]
0x000000000044d500 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x2000018] ; call qword ptr [rdx]
0x000000000044d1c0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x200018] ; call qword ptr [rdx]
0x000000000044ce80 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x20018] ; call qword ptr [rdx]
0x000000000044cb40 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x2018] ; call qword ptr [rdx]
0x000000000044c84a : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x218] ; call qword ptr [rdx]
0x000000000044c5d3 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x38] ; call qword ptr [rdx]
0x000000000044d910 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x40000018] ; call qword ptr [rdx]
0x000000000044d5d0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x4000018] ; call qword ptr [rdx]
0x000000000044d290 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x400018] ; call qword ptr [rdx]
0x000000000044cf50 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x40018] ; call qword ptr [rdx]
0x000000000044cc10 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x4018] ; call qword ptr [rdx]
0x000000000044c8fa : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x418] ; call qword ptr [rdx]
0x000000000044c653 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x58] ; call qword ptr [rdx]
0x000000000044d6a0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x8000018] ; call qword ptr [rdx]
0x000000000044d360 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x800018] ; call qword ptr [rdx]
0x000000000044d020 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x80018] ; call qword ptr [rdx]
0x000000000044cce0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x8018] ; call qword ptr [rdx]
0x000000000044c9aa : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x818] ; call qword ptr [rdx]
0x000000000044c6e7 : movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x98] ; call qword ptr [rdx]
0x000000000044efdb : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045fce7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000041417b : movsd qword ptr [rbx + 0x48], xmm0 ; ret
0x00000000004061b6 : movsd qword ptr [rsp + 0x10], xmm0 ; ret
0x0000000000462ac0 : movsd qword ptr [rsp + 0x18], xmm0 ; ret
0x00000000004334fa : movsxd rax, dword ptr [rax + 8] ; mov qword ptr [rsp + 8], rax ; ret
0x000000000044f3ae : movsxd rsi, eax ; ret
0x000000000040e22c : movups xmm0, xmm2 ; jmp 0x40e203
0x0000000000420353 : movups xmmword ptr [rax], xmm0 ; ret
0x000000000041417c : movups xmmword ptr [rbx + 0x48], xmm0 ; ret
0x000000000044e8f8 : movups xmmword ptr [rdi + 0x30], xmm0 ; lea rdi, qword ptr [rdi + 0x40] ; ret
0x000000000044ec89 : movups xmmword ptr [rdi], xmm0 ; add rdi, 0x10 ; ret
0x00000000004061b7 : movups xmmword ptr [rsp + 0x10], xmm0 ; ret
0x0000000000462ac1 : movups xmmword ptr [rsp + 0x18], xmm0 ; ret
0x000000000046e6c5 : movzx eax, byte ptr [rax + 0x15] ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000046e6d5 : movzx eax, byte ptr [rax + 0x16] ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000482fda : movzx eax, byte ptr [rax + 0x4a] ; mov byte ptr [rsp + 0x18], al ; ret
0x0000000000482f8f : movzx eax, byte ptr [rax + 0x4d] ; mov byte ptr [rsp + 0x18], al ; ret
0x0000000000482fcc : movzx eax, byte ptr [rax + 0x4e] ; mov byte ptr [rsp + 0x18], al ; ret
0x00000000004510a0 : movzx eax, byte ptr [rsp + 0x18] ; jmp 0x45106f
0x00000000004515f0 : movzx eax, byte ptr [rsp + 0x18] ; jmp 0x4515bf
0x0000000000452720 : movzx eax, byte ptr [rsp + 0x18] ; jmp 0x4526ef
0x000000000047f9b0 : movzx eax, byte ptr [rsp + 0x18] ; jmp 0x47f97f
0x0000000000490530 : movzx eax, byte ptr [rsp + 0x18] ; jmp 0x4904ff
0x0000000000446e85 : movzx eax, cx ; mov qword ptr [rsp + 0x10], rax ; ret
0x000000000041ab15 : mul byte ptr [rcx] ; test bl, 0x10 ; setne dl ; jmp 0x41aab6
0x0000000000462b96 : mulps xmm0, xmm1 ; movsd qword ptr [rsp + 0x18], xmm0 ; ret
0x000000000040f9d9 : nop ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040fa91 : nop ; adc al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c10
0x000000000048fcbf : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000413337 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc77
0x0000000000470d37 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call rcx
0x0000000000470d73 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x00000000004166fa : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000044a2e8 : nop ; add byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0fd05], al ; ret
0x00000000004356a1 : nop ; add dword ptr [rax], eax ; jmp 0x43568e
0x0000000000470ce7 : nop ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x000000000044d985 : nop ; sub eax, 1 ; jne 0x44d98a ; ret
0x000000000042fb89 : not byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040eef9 : not ecx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000040eef8 : not rcx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000040eef6 : or al, 0x11 ; not rcx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000457550 : or al, 0x16 ; cmp r9, rax ; jle 0x457565 ; inc rdx ; jmp 0x457516
0x0000000000457690 : or al, 0x16 ; cmp r9, rax ; jle 0x4576a5 ; inc rdx ; jmp 0x457656
0x00000000004257ab : or al, 0x24 ; call rax
0x0000000000470cee : or al, 0x24 ; call rdx
0x00000000004079ca : or al, 0x24 ; mov rax, qword ptr [rdx] ; call rax
0x0000000000460b37 : or al, 0x24 ; mov rcx, qword ptr [rdx] ; call rcx
0x0000000000455f13 : or al, 0x48 ; mov edx, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rdx] ; call rax
0x000000000040fc2f : or al, 0xd1 ; loopne 0x40fbc0 ; ret
0x000000000042e947 : or al, 0xf ; xchg eax, esp ; ret 0xd284
0x0000000000428abc : or al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x404dc6
0x000000000046ad80 : or al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0a306], al ; ret
0x000000000042762f : or al, byte ptr [rax] ; call rax
0x00000000004276a1 : or al, byte ptr [rax] ; call rcx
0x0000000000427a07 : or al, byte ptr [rax] ; lea rdx, qword ptr [rip + 0xa1780] ; call rax
0x00000000004279bf : or al, byte ptr [rax] ; lea rdx, qword ptr [rip + 0xa17c0] ; call rax
0x000000000042769a : or al, byte ptr [rax] ; lea rdx, qword ptr [rip + 0xa1abd] ; call rcx
0x0000000000427628 : or al, byte ptr [rax] ; lea rdx, qword ptr [rip + 0xa1b2f] ; call rax
0x00000000004490db : or al, byte ptr [rbp + rcx*4 + 0x62] ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000479693 : or al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfffa
0x000000000043afbd : or al, ch ; int 0xc3
0x000000000043954c : or al, ch ; out dx, al ; ret
0x000000000040954b : or al, ch ; out dx, eax ; ret
0x0000000000411817 : or al, ch ; ret
0x000000000046dc2d : or bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000040e22a : or bl, al ; movups xmm0, xmm2 ; jmp 0x40e205
0x000000000040b2e0 : or bl, al ; ret
0x000000000044d983 : or bl, dh ; nop ; sub eax, 1 ; jne 0x44d98c ; ret
0x0000000000433728 : or byte ptr [r8 - 0x77], cl ; ret 0x8948
0x000000000046106f : or byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000417b21 : or byte ptr [rax + 0x39], cl ; ret
0x00000000004175b0 : or byte ptr [rax + 0x39], cl ; ret 0x1d74
0x00000000004177d3 : or byte ptr [rax + 0x39], cl ; ret 0x5175
0x000000000040f7ce : or byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000043e273 : or byte ptr [rax + 0x39], cl ; ret 0xd76
0x000000000044e292 : or byte ptr [rax + 0x39], cl ; sal dword ptr [rbx - 0x3a], 1 ; add byte ptr [rax], al ; ret
0x000000000044f77c : or byte ptr [rax + 0x3e], bh ; syscall ; ret
0x000000000044f75c : or byte ptr [rax + 0xc8], bh ; syscall ; ret
0x000000000044f603 : or byte ptr [rax + 0xe7], bh ; syscall ; ret
0x0000000000466fe8 : or byte ptr [rax + 1], cl ; fmul dword ptr [rax + 0x39] ; ret 0xf7c
0x000000000046f5e7 : or byte ptr [rax + 1], cl ; ret 0x284
0x000000000044b135 : or byte ptr [rax + rax], bl ; add byte ptr [rax], al ; call 0x427397
0x0000000000485551 : or byte ptr [rax - 0x73], cl ; pop rdx ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000408b44 : or byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; and al, 0x10 ; ret
0x000000000048b288 : or byte ptr [rax - 0x75], cl ; and byte ptr [r8 - 0x77], cl ; adc al, 0x24 ; call rcx
0x000000000044fc73 : or byte ptr [rax - 0x75], cl ; je 0x44fca4 ; adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000446152 : or byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0xd1ff
0x00000000004760f1 : or byte ptr [rax - 0x75], cl ; ret
0x000000000048afd4 : or byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x77], cl ; adc al, 0x24 ; call rcx
0x00000000004089e4 : or byte ptr [rax - 0x75], cl ; sub al, 0x24 ; add rsp, 8 ; ret
0x0000000000443f15 : or byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; ret 0xd6ff
0x0000000000425ff4 : or byte ptr [rax - 0x77], cl ; and al, 0x10 ; ret
0x00000000004334fd : or byte ptr [rax - 0x77], cl ; and al, 8 ; ret
0x0000000000470c53 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x0000000000466f1f : or byte ptr [rax - 0x77], cl ; ret
0x000000000043d8ad : or byte ptr [rax - 0x77], cl ; ret 0x3ae9
0x0000000000433729 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000445f41 : or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000446155 : or byte ptr [rax - 0x77], cl ; ret 0xd1ff
0x0000000000407784 : or byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000410d3e : or byte ptr [rax - 0x7d], cl ; ret 0xebfe
0x0000000000410da9 : or byte ptr [rax - 1], cl ; ret
0x000000000040c0d9 : or byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000410e33 : or byte ptr [rax - 1], cl ; ret 0xcfeb
0x0000000000410d00 : or byte ptr [rax - 1], cl ; ret 0xe4eb
0x000000000045fdcd : or byte ptr [rax - 9], cl ; ret 0xfff8
0x00000000004172f5 : or byte ptr [rax - 9], cl ; ret 0xffff
0x000000000044cb85 : or byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x000000000044d135 : or byte ptr [rax], al ; adc byte ptr [rax], al ; ret
0x000000000044cf95 : or byte ptr [rax], al ; add al, 0 ; ret
0x000000000044cec5 : or byte ptr [rax], al ; add al, byte ptr [rax] ; ret
0x000000000044d885 : or byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000041b0b3 : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x427396
0x000000000044d6e5 : or byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000000000044d7b5 : or byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000044d475 : or byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x000000000046b0d5 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x3d ; ret 0x569
0x000000000044d545 : or byte ptr [rax], al ; add byte ptr [rdx], al ; ret
0x000000000044cdf5 : or byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x000000000044d060 : or byte ptr [rax], al ; add rsp, 0x80008 ; ret
0x000000000044d205 : or byte ptr [rax], al ; and byte ptr [rax], al ; ret
0x000000000044d027 : or byte ptr [rax], al ; call qword ptr [rdx]
0x000000000044d065 : or byte ptr [rax], al ; or byte ptr [rax], al ; ret
0x000000000044d067 : or byte ptr [rax], al ; ret
0x000000000044c9ef : or byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000044cab5 : or byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x00000000004576c2 : or byte ptr [rbp + rcx*4 + 0x5a], cl ; add dword ptr [rcx + 0x39], ecx ; ret
0x000000000043b13b : or byte ptr [rbx], dl ; add byte ptr [rax], al ; add al, ch ; ret 0xfffe
0x000000000040a027 : or byte ptr [rcx + rcx*4 + 0x14], cl ; and al, 0x48 ; mov ecx, dword ptr [rdx] ; call rcx
0x000000000040aaba : or byte ptr [rcx + rcx*4 + 0x24], cl ; and al, 0x48 ; mov eax, dword ptr [rdx] ; call rax
0x00000000004086d4 : or byte ptr [rcx + rcx*4 + 0x3c], cl ; and al, 0x48 ; mov eax, dword ptr [rdx] ; call rax
0x000000000045dc18 : or byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rax, qword ptr [rdx] ; call rax
0x00000000004079c7 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0x48 ; mov eax, dword ptr [rdx] ; call rax
0x000000000040835c : or byte ptr [rcx - 0xa], al ; ret
0x00000000004079a4 : or byte ptr [rcx - 0xa], al ; ret 0xf08
0x000000000043e553 : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000426287 : or byte ptr [rcx], cl ; add byte ptr [rax], al ; add al, ch ; call qword ptr [rax]
0x000000000040c1c3 : or byte ptr [rcx], cl ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000041afef : or byte ptr [rcx], cl ; add byte ptr [rax], al ; add al, ch ; xchg eax, edi ; ret
0x000000000046cbde : or byte ptr [rcx], dh ; fucomi st(3) ; add ecx, dword ptr [rax - 1] ; ret
0x0000000000417ce1 : or byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x00000000004505b9 : or byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8348
0x0000000000417ce0 : or byte ptr [rcx], sil ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x0000000000482f8e : or byte ptr [rdi], cl ; mov dh, 0x40 ; mov byte ptr [r12 + 0x18], r8b ; ret
0x0000000000482fd9 : or byte ptr [rdi], cl ; mov dh, 0x40 ; mov byte ptr [rsp + r12 + 0x18], al ; ret
0x0000000000482fcb : or byte ptr [rdi], cl ; mov dh, 0x40 ; mov byte ptr [rsp + r12 + 0x18], r8b ; ret
0x000000000042a9ac : or byte ptr [rdi], cl ; mov dh, 5 ; ret
0x0000000000406c6a : or byte ptr [rdi], cl ; test byte ptr [rax], ch ; add dword ptr [rax], eax ; add byte ptr [rax + 0x21], cl ; ret
0x0000000000406e9d : or byte ptr [rdi], cl ; test byte ptr [rdx], dh ; add dword ptr [rax], eax ; add byte ptr [rax + 0x21], cl ; ret
0x0000000000433e7b : or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000442f67 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000000000439d49 : or byte ptr [rdi], dl ; add byte ptr [rax], al ; add al, ch ; int 0xc3
0x000000000040f5c4 : or byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; ret 0x17d
0x000000000041b0dc : or byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; stosb byte ptr [rdi], al ; ret 0
0x000000000044c88f : or byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000428abb : or byte ptr [rdx], cl ; add byte ptr [rax], al ; add al, ch ; sti ; ret 0xfffd
0x0000000000409854 : or byte ptr [rip - 0x18000000], dl ; ret 0x1c8
0x0000000000439d7f : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add al, ch ; xchg eax, edi ; ret
0x0000000000456ad9 : or cl, byte ptr [rax + 0x39] ; ret 0x8176
0x000000000042ce0f : or cl, byte ptr [rax - 0x77] ; ret 0x8b48
0x00000000004071e6 : or dh, dh ; ret
0x0000000000408ca4 : or dh, dh ; ret 0x7408
0x00000000004061b5 : or dl, dh ; movups xmmword ptr [rsp + 0x10], xmm0 ; ret
0x00000000004269ae : or dword ptr [rax + 0x29], ecx ; ret 0x8948
0x000000000044c510 : or dword ptr [rax - 0x73], ecx ; add eax, 0x1058 ; jmp rax
0x000000000044c522 : or dword ptr [rax - 0x73], ecx ; add eax, 0x1116 ; jmp rax
0x000000000044c534 : or dword ptr [rax - 0x73], ecx ; add eax, 0x11d4 ; jmp rax
0x000000000044c546 : or dword ptr [rax - 0x73], ecx ; add eax, 0x1292 ; jmp rax
0x000000000044c558 : or dword ptr [rax - 0x73], ecx ; add eax, 0x1350 ; jmp rax
0x000000000044c399 : or dword ptr [rax - 0x73], ecx ; add eax, 0x1ff ; jmp rax
0x000000000044c3a8 : or dword ptr [rax - 0x73], ecx ; add eax, 0x270 ; jmp rax
0x000000000044c3ba : or dword ptr [rax - 0x73], ecx ; add eax, 0x2de ; jmp rax
0x000000000044c3cc : or dword ptr [rax - 0x73], ecx ; add eax, 0x37c ; jmp rax
0x000000000044c3de : or dword ptr [rax - 0x73], ecx ; add eax, 0x41a ; jmp rax
0x000000000044c3f0 : or dword ptr [rax - 0x73], ecx ; add eax, 0x4b8 ; jmp rax
0x000000000044c402 : or dword ptr [rax - 0x73], ecx ; add eax, 0x556 ; jmp rax
0x000000000044c414 : or dword ptr [rax - 0x73], ecx ; add eax, 0x5f4 ; jmp rax
0x000000000044c426 : or dword ptr [rax - 0x73], ecx ; add eax, 0x6b2 ; jmp rax
0x000000000044c438 : or dword ptr [rax - 0x73], ecx ; add eax, 0x770 ; jmp rax
0x000000000044c44a : or dword ptr [rax - 0x73], ecx ; add eax, 0x82e ; jmp rax
0x000000000044c45c : or dword ptr [rax - 0x73], ecx ; add eax, 0x8ec ; jmp rax
0x000000000044c46e : or dword ptr [rax - 0x73], ecx ; add eax, 0x9aa ; jmp rax
0x000000000044c480 : or dword ptr [rax - 0x73], ecx ; add eax, 0xa68 ; jmp rax
0x000000000044c492 : or dword ptr [rax - 0x73], ecx ; add eax, 0xb26 ; jmp rax
0x000000000044c4a4 : or dword ptr [rax - 0x73], ecx ; add eax, 0xbe4 ; jmp rax
0x000000000044c4b6 : or dword ptr [rax - 0x73], ecx ; add eax, 0xca2 ; jmp rax
0x000000000044c4c8 : or dword ptr [rax - 0x73], ecx ; add eax, 0xd60 ; jmp rax
0x000000000044c4da : or dword ptr [rax - 0x73], ecx ; add eax, 0xe1e ; jmp rax
0x000000000044c4ec : or dword ptr [rax - 0x73], ecx ; add eax, 0xedc ; jmp rax
0x000000000044c4fe : or dword ptr [rax - 0x73], ecx ; add eax, 0xf9a ; jmp rax
0x000000000044c1db : or dword ptr [rax - 0x73], ecx ; add eax, 0xfffdc50d ; jmp rax
0x000000000044c252 : or dword ptr [rax - 0x73], ecx ; add eax, 0xffff1b26 ; call rax
0x00000000004046e9 : or dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x77], cl ; and al, 0x10 ; ret
0x000000000044b086 : or dword ptr [rax - 0x75], ecx ; sub al, 0x24 ; add rsp, 8 ; ret
0x0000000000428e10 : or dword ptr [rax - 0x77], ecx ; xchg eax, ecx ; add dword ptr [rax], eax ; add bl, ch ; ret 0x8948
0x0000000000461e89 : or dword ptr [rax - 0x7d], 0xfffffffb ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000046bff6 : or dword ptr [rax - 1], ecx ; ret
0x000000000042b85c : or dword ptr [rax], eax ; call rax
0x000000000042b8ab : or dword ptr [rax], eax ; lea rdx, qword ptr [rip + 0x9d984] ; call rax
0x000000000042b855 : or dword ptr [rax], eax ; lea rdx, qword ptr [rip + 0x9d9da] ; call rax
0x0000000000460147 : or dword ptr [rcx + 0xf], eax ; xchg eax, esp ; ret 0x8445
0x0000000000408357 : or dword ptr [rdi + rcx - 0x4a], eax ; pop rbx ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000408259 : or dword ptr [rdi], ecx ; mov dh, 0x58 ; or dh, dh ; ret
0x0000000000426019 : or dword ptr [rdi], ecx ; push rdi ; ror byte ptr [rdi], 0x11 ; and al, 0x10 ; ret
0x000000000041a216 : or eax, 0x244c8b48 ; xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000043321b : or eax, 0x940f0000 ; ret
0x0000000000432f22 : or eax, 0x940f0000 ; ret 0xd284
0x0000000000462b44 : or eax, 0xff20007 ; adc dword ptr [rsp + 0x18], eax ; ret
0x0000000000425f15 : or eax, dword ptr [rax] ; add al, ch ; ret
0x000000000045fd81 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000046eaa0 : or eax, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret 0x4f75
0x000000000040f2c3 : or ebp, eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; rol byte ptr [rbx], 1 ; add cl, ch ; ret 0xfffe
0x000000000043a21b : or ebp, eax ; jmp qword ptr [rdi]
0x0000000000430ff1 : or ebp, eax ; pop rcx ; cmp edi, edi ; dec dword ptr [rdi] ; or ebp, eax ; ret 0xff39
0x0000000000428600 : or ebp, eax ; ret
0x00000000004389a8 : or ebp, eax ; ret 0x139
0x000000000041c7a8 : or ebp, eax ; ret 0x2fb
0x0000000000480df8 : or ebp, eax ; ret 0xfa3b
0x0000000000430ff8 : or ebp, eax ; ret 0xff39
0x0000000000410094 : or ebp, eax ; salc ; ret 3
0x00000000004750a0 : or ebp, eax ; sbb bh, cl ; cli ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x0000000000417984 : or ecx, dword ptr [rax - 0x75] ; add ecx, dword ptr [rax - 0x77] ; ret
0x0000000000448756 : or ecx, dword ptr [rbp - 0x7fbfbf82] ; jmp qword ptr [rax]
0x0000000000448bdc : or ecx, dword ptr [rcx - 0x77] ; ret 0x8948
0x0000000000405431 : or edi, dword ptr [rdi + 0x39480009] ; ret 0x850f
0x000000000040b2df : or r11b, al ; ret
0x000000000044f605 : out 0, eax ; add byte ptr [rax], al ; syscall ; ret
0x000000000043dd17 : out 0x48, al ; mov dword ptr [rsp + 0x10], ecx ; ret
0x0000000000422f53 : out 0x48, al ; mov dword ptr [rsp + 0x18], ecx ; ret
0x0000000000455c2e : out 0xc1, al ; cli ; add eax, dword ptr [rbp - 0x14538b2e] ; ret
0x000000000044c5d1 : out 0xf3, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x38] ; call qword ptr [rdx]
0x000000000044c651 : out 0xf3, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x58] ; call qword ptr [rdx]
0x000000000047f9ad : out 0xfc, eax ; dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x47f982
0x0000000000466884 : out 0xff, eax ; ret 0x1488
0x000000000043954e : out dx, al ; ret
0x0000000000463390 : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xbe02
0x000000000046cbf3 : out dx, eax ; mov byte ptr [rsp + 0x20], 1 ; ret
0x000000000044dceb : out dx, eax ; pxor xmm4, xmm5 ; movq qword ptr [rdx], xmm4 ; ret
0x000000000040954d : out dx, eax ; ret
0x000000000044de6a : out dx, eax ; ret 0x4566
0x0000000000443c00 : outsb dx, byte ptr [rsi] ; imul esp, dword ptr [rbx + 0x48], 0x940fd639 ; ret 0xd284
0x000000000040590e : outsb dx, byte ptr [rsi] ; mov dl, 9 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000044e4fd : outsd dx, dword ptr [rsi] ; and ch, al ; in eax, 0x74 ; ret 0xfdc5
0x000000000044e4fc : outsd dx, dword ptr [rsi] ; outsd dx, dword ptr [rsi] ; and ch, al ; in eax, 0x74 ; ret 0xfdc5
0x000000000044d984 : pause ; sub eax, 1 ; jne 0x44d98b ; ret
0x0000000000402463 : pop rax ; add rsp, 0x60 ; ret
0x000000000041994a : pop rax ; call 0x426a59
0x000000000044c658 : pop rax ; call qword ptr [rdx]
0x000000000046c3de : pop rax ; dec dword ptr [rax + 0x39] ; ret
0x000000000044c1fb : pop rax ; lea rax, qword ptr [rip - 0x23ad3] ; jmp rax
0x0000000000446391 : pop rax ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000409298 : pop rax ; mov qword ptr [rsp], rbx ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000472d50 : pop rax ; mov qword ptr [rsp], rcx ; call rax
0x0000000000472c8d : pop rax ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000406c19 : pop rax ; mov qword ptr [rsp], rsi ; mov rdi, qword ptr [rdx] ; call rdi
0x000000000040825c : pop rax ; or dh, dh ; ret
0x0000000000404971 : pop rax ; ret
0x000000000041432e : pop rax ; ret 0xff2
0x00000000004629f1 : pop rax ; sub byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; ret 0x1074
0x0000000000409a73 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 1] ; ret 0xf44
0x0000000000410d5a : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], cl ; ret 0x7f
0x00000000004180c7 : pop rbp ; jbe 0x4180e1 ; add byte ptr [rcx], al ; ret 0x8b48
0x000000000044f9b0 : pop rbp ; ret
0x0000000000410429 : pop rbx ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000044f3a8 : pop rbx ; loopne 0x44f3a6 ; movq qword ptr [rbx - 0x10], mm4 ; ret
0x000000000040835b : pop rbx ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040ac81 : pop rcx ; adc al, 0xf6 ; ret
0x000000000043642a : pop rcx ; adc byte ptr [rax + 0x39], cl ; ret
0x000000000043380d : pop rcx ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000484c04 : pop rcx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000040894e : pop rcx ; and byte ptr [rax - 0x7f], cl ; ret 0x401
0x0000000000430ff3 : pop rcx ; cmp edi, edi ; dec dword ptr [rdi] ; or ebp, eax ; ret 0xff39
0x0000000000463724 : pop rcx ; dec dword ptr [rbp + 0x21] ; ret
0x000000000044f484 : pop rcx ; loopne 0x44f482 ; movq qword ptr [rcx - 0x10], mm4 ; ret
0x0000000000433e7a : pop rcx ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004086ed : pop rcx ; or dh, dh ; ret
0x0000000000414316 : pop rcx ; ret
0x000000000041c890 : pop rcx ; ret 0x48f2
0x0000000000462b97 : pop rcx ; sal edx, 0xf ; adc dword ptr [rsp + 0x18], eax ; ret
0x000000000042ed2d : pop rdi ; ret
0x0000000000447b0f : pop rdx ; adc al, 0xf6 ; ret
0x0000000000485554 : pop rdx ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000040894a : pop rdx ; add dword ptr [rax - 0x77], ecx ; pop rcx ; and byte ptr [rax - 0x7f], cl ; ret 0x401
0x0000000000457585 : pop rdx ; add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000481923 : pop rdx ; and byte ptr [rax + 0x39], cl ; ret
0x000000000042ee6e : pop rdx ; or al, 0xf ; xchg eax, esp ; ret 0xd284
0x0000000000417b20 : pop rdx ; or byte ptr [rax + 0x39], cl ; ret
0x00000000004071e5 : pop rdx ; or dh, dh ; ret
0x0000000000425b82 : pop rdx ; sub byte ptr [rax + 0x39], cl ; ret
0x0000000000432048 : pop rdx ; sub byte ptr [rax - 0x7f], cl ; ret
0x000000000041300d : pop rdx ; xor ah, byte ptr [rsi - 9] ; ret
0x00000000004072e7 : pop rsi ; dec dword ptr [rax + 0x21] ; ret
0x0000000000414306 : pop rsi ; fiadd word ptr [rdi + rcx + 0x10] ; sal dl, 0xf ; pop rsp ; ret 0xf44
0x0000000000414179 : pop rsi ; ret 0xff2
0x000000000048f4c6 : pop rsp ; and al, 0x18 ; mov qword ptr [rsp], rcx ; call rax
0x0000000000435073 : pop rsp ; and al, 0x20 ; ret
0x00000000004798a1 : pop rsp ; and al, 0x38 ; mov qword ptr [rsp], rbx ; call rdx
0x0000000000472d28 : pop rsp ; and al, 0x68 ; mov qword ptr [rsp], rbx ; call rdx
0x0000000000470c51 : pop rsp ; and al, 8 ; mov qword ptr [rsp], rcx ; call rax
0x0000000000443f13 : pop rsp ; and al, 8 ; mov rsi, qword ptr [rax] ; mov rdx, rax ; call rsi
0x0000000000407163 : pop rsp ; and al, 8 ; mov rsi, qword ptr [rdx] ; call rsi
0x0000000000432168 : pop rsp ; and al, 8 ; ret
0x000000000040581e : pop rsp ; jmp rax
0x000000000041cb45 : pop rsp ; ret 0x48f8
0x000000000041430e : pop rsp ; ret 0xf44
0x000000000040d300 : popfq ; add dword ptr [rax], eax ; call 0x426ce9
0x0000000000423e1f : popfq ; ret
0x000000000047bb3f : popfq ; ret 0xffff
0x000000000045cb64 : push -0x160000e5 ; ret
0x000000000048b987 : push -0x3d76b33d ; jmp 0x48b925
0x0000000000427886 : push -0x7bffffff ; add cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000456a9f : push 0x24048948 ; call rbx
0x00000000004860aa : push 0x240c8948 ; call rax
0x0000000000472d71 : push 0x24148948 ; call rcx
0x0000000000472d2a : push 0x241c8948 ; call rdx
0x0000000000472cb8 : push 0x24348948 ; call rbx
0x000000000040584f : push 0x5cb4f981 ; jmp rax
0x00000000004200b2 : push 0x60 ; add byte ptr [rax], al ; ud2 ; call 0x44c378
0x00000000004022b8 : push 0x70c48348 ; ret
0x0000000000404776 : push 0xf000001 ; xchg eax, esp ; ret
0x000000000044e26e : push qword ptr [rsp + rax*8 - 0x3b] ; clc ; ja 0x44e244 ; add byte ptr [rax], al ; ret
0x000000000042e5d4 : push r8 ; test rax, rax ; jne 0x42e5e3 ; ret
0x0000000000474c3a : push rax ; adc al, 0xf6 ; ret 0xf01
0x000000000040630e : push rax ; adc eax, 0xaf0f4c00 ; ret 0x9deb
0x0000000000466c92 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsp + 0x58], al ; ret
0x000000000040496d : push rax ; add rsp, 0x58 ; ret
0x000000000045e16d : push rax ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000004250b5 : push rax ; dec dword ptr [rbp + 0x39] ; ret 0x830f
0x0000000000466c3b : push rax ; mov byte ptr [rsp + 0x58], sil ; ret
0x000000000044637d : push rax ; mov qword ptr [rsp + 0x10], rax ; ret
0x0000000000486b9f : push rax ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000403973 : push rax ; mov rbx, qword ptr [rdx] ; call rbx
0x000000000044c1f2 : push rax ; mov rdx, rdi ; mov rdi, qword ptr [rdi] ; call rdi
0x000000000046f5e6 : push rax ; or byte ptr [rax + 1], cl ; ret 0x284
0x0000000000409e68 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000000000408258 : push rax ; or dword ptr [rdi], ecx ; mov dh, 0x58 ; or dh, dh ; ret
0x0000000000401733 : push rax ; ret
0x000000000042e5d5 : push rax ; test rax, rax ; jne 0x42e5e2 ; ret
0x0000000000417e78 : push rbp ; jmp 0x417e40
0x000000000044f9a3 : push rbp ; mov rbp, rsp ; and rsp, 0xfffffffffffffff0 ; call rax
0x000000000042d214 : push rbx ; add dword ptr [rax], eax ; jmp 0x42d1df
0x00000000004101d9 : push rbx ; jmp qword ptr [rcx]
0x00000000004079a3 : push rbx ; or byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000000000466f8e : push rcx ; adc byte ptr [rax - 0x7d], cl ; ret 0x48c1
0x0000000000468f1d : push rcx ; adc byte ptr [rax - 1], cl ; ret 0x8948
0x00000000004337c5 : push rcx ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000448edc : push rcx ; add ah, byte ptr [rsi - 9] ; ret 1
0x000000000042d49f : push rcx ; add dword ptr [rax], eax ; jmp 0x42d46a
0x000000000046efdb : push rcx ; add dword ptr [rcx + 0x39], ecx ; ret 0x407f
0x00000000004724c8 : push rcx ; add dword ptr [rsi - 0x3f], esp ; ret 0x4808
0x000000000043ada2 : push rcx ; cmp byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000042e946 : push rcx ; or al, 0xf ; xchg eax, esp ; ret 0xd284
0x00000000004175af : push rcx ; or byte ptr [rax + 0x39], cl ; ret 0x1d74
0x00000000004177d2 : push rcx ; or byte ptr [rax + 0x39], cl ; ret 0x5175
0x000000000043e272 : push rcx ; or byte ptr [rax + 0x39], cl ; ret 0xd76
0x000000000040c0d8 : push rcx ; or byte ptr [rax - 1], cl ; ret 0x8948
0x000000000044b13b : push rcx ; ret 0xfffd
0x0000000000419ed4 : push rcx ; sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000404644 : push rcx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x348
0x00000000004748c0 : push rdi ; add cl, byte ptr [rbp + 0x39] ; ret 0x870f
0x0000000000486583 : push rdi ; leave ; xorps xmm0, xmm0 ; jmp 0x486553
0x0000000000485550 : push rdi ; or byte ptr [rax - 0x73], cl ; pop rdx ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000455b67 : push rdi ; ret
0x000000000042601b : push rdi ; ror byte ptr [rdi], 0x11 ; and al, 0x10 ; ret
0x00000000004462c5 : push rdx ; adc al, 0xf6 ; ret 0x7402
0x000000000042c196 : push rdx ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000047330c : push rdx ; add dword ptr [rsi - 0x3f], esp ; ret 0x4808
0x0000000000462bd8 : push rdx ; movups xmmword ptr [rsp + 0x18], xmm0 ; ret
0x0000000000408ca3 : push rdx ; or dh, dh ; ret 0x7408
0x000000000042791a : push rdx ; ret 0xfffe
0x000000000044589d : push rdx ; ret 7
0x0000000000490905 : push rsi ; add dword ptr [rax - 0x73], ecx ; add qword ptr [r8 + 0x39], r9 ; ret
0x00000000004093be : push rsi ; dec dword ptr [rax + 0x21] ; ret 0x8b48
0x000000000047bb3b : push rsp ; and al, 0x10 ; call 0x477de5
0x000000000040c239 : push rsp ; and al, 0x10 ; ret
0x0000000000462bb7 : push rsp ; and al, 0x18 ; ret
0x000000000045d3f7 : push rsp ; and al, 0x1c ; ret
0x0000000000419ff7 : push rsp ; and al, 0x20 ; mov rax, qword ptr [rbx] ; mov rdx, rbx ; call rax
0x000000000040c084 : push rsp ; and al, 0x28 ; mov rax, qword ptr [rdx] ; call rax
0x000000000044daa2 : push rsp ; and al, 0x28 ; mov rdi, rbx ; mov rcx, rbx ; call rax
0x000000000047206b : push rsp ; and al, 0x28 ; ret
0x000000000044c5d6 : push rsp ; and al, 0x38 ; call qword ptr [rdx]
0x00000000004720a8 : push rsp ; and al, 0x38 ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000479b08 : push rsp ; and al, 0x40 ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000455f16 : push rsp ; and al, 0x40 ; mov rax, qword ptr [rdx] ; call rax
0x000000000048bf6c : push rsp ; and al, 0x40 ; mov rcx, qword ptr [rdx] ; call rcx
0x0000000000466c39 : push rsp ; and al, 0x50 ; mov byte ptr [rsp + 0x58], sil ; ret
0x0000000000403971 : push rsp ; and al, 0x50 ; mov rbx, qword ptr [rdx] ; call rbx
0x000000000044c656 : push rsp ; and al, 0x58 ; call qword ptr [rdx]
0x0000000000472c8b : push rsp ; and al, 0x58 ; mov qword ptr [rsp], rdx ; call rcx
0x0000000000472d6f : push rsp ; and al, 0x68 ; mov qword ptr [rsp], rdx ; call rcx
0x000000000042ad42 : push rsp ; and al, 0x68 ; mov rax, qword ptr [rdx] ; call rax
0x00000000004831bc : push rsp ; and al, 0x70 ; mov qword ptr [rsp], rdx ; call rax
0x000000000047b97f : push rsp ; and al, 0x78 ; mov qword ptr [rsp], rdx ; call rcx
0x000000000045d40d : push rsp ; and al, 0xc ; ret
0x0000000000488645 : push rsp ; and al, 8 ; mov qword ptr [rsp], rcx ; call rax
0x000000000046cc5a : push rsp ; xor al, byte ptr [rcx] ; jmp 0x46cc26
0x000000000046692f : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8d48
0x0000000000413053 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000471991 : pushfq ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000044e230 : pushfq ; mov byte ptr [rax], 0 ; ret
0x000000000040e6ad : pushfq ; mov qword ptr [rsp], rax ; call 0x41a8e7
0x0000000000478620 : pushfq ; ret
0x0000000000481287 : pushfq ; ret 0xd284
0x000000000044de73 : pxor mm0, mm1 ; movq qword ptr [rdx], xmm8 ; ret
0x000000000044dc4c : pxor mm2, mm3 ; movq qword ptr [rdx], xmm2 ; ret
0x000000000044dced : pxor mm4, mm5 ; movq qword ptr [rdx], xmm4 ; ret
0x000000000044dc4b : pxor xmm2, xmm3 ; movq qword ptr [rdx], xmm2 ; ret
0x000000000044dcec : pxor xmm4, xmm5 ; movq qword ptr [rdx], xmm4 ; ret
0x000000000044637c : rcl byte ptr [rax + 0x48], 0x89 ; and al, 0x10 ; ret
0x00000000004791fc : rcl byte ptr [rbp + rdi*8 - 1], 1 ; jmp 0x4791c9
0x000000000044e0d9 : rcl dword ptr [rax], cl ; add byte ptr [rsi + 0xf], ah ; salc ; and al, 0x18 ; ret
0x0000000000446390 : rcr byte ptr [rax + 0x48], 0x89 ; and al, 0x10 ; ret
0x000000000044c5d2 : rep movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x38] ; call qword ptr [rdx]
0x000000000044c652 : rep movsb byte ptr [rdi], byte ptr [rsi] ; mov rdx, qword ptr [rsp + 0x58] ; call qword ptr [rdx]
0x000000000044efda : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000401073 : ret
0x0000000000403aad : ret 0
0x0000000000408838 : ret 0x1074
0x0000000000475f28 : ret 0x1089
0x000000000041600a : ret 0x10a
0x0000000000431b2a : ret 0x10d6
0x0000000000430e7a : ret 0x10df
0x0000000000410437 : ret 0x1188
0x00000000004127d3 : ret 0x12
0x0000000000436b4a : ret 0x1247
0x000000000041858a : ret 0x126c
0x000000000041b972 : ret 0x1292
0x000000000041aeea : ret 0x129c
0x00000000004127ea : ret 0x12c2
0x0000000000417812 : ret 0x12f8
0x000000000042b982 : ret 0x12f9
0x000000000040f1ca : ret 0x135c
0x00000000004389aa : ret 0x139
0x000000000041b6c3 : ret 0x13fa
0x000000000041564a : ret 0x145f
0x0000000000466886 : ret 0x1488
0x000000000040d3f3 : ret 0x158b
0x000000000042ae6f : ret 0x167d
0x000000000043891a : ret 0x16d
0x000000000040f5ca : ret 0x17d
0x0000000000428b49 : ret 0x184
0x000000000043504a : ret 0x197c
0x000000000048b251 : ret 0x19e8
0x000000000044a60a : ret 0x1c
0x000000000042ffaa : ret 0x1c3
0x00000000004455ac : ret 0x1c75
0x000000000040985a : ret 0x1c8
0x000000000042ed5a : ret 0x1d4
0x00000000004175b3 : ret 0x1d74
0x000000000042fa0a : ret 0x1ec
0x0000000000424eab : ret 0x1fff
0x0000000000429929 : ret 0x2075
0x0000000000466aff : ret 0x214c
0x00000000004294e0 : ret 0x2275
0x000000000046e236 : ret 0x237d
0x000000000042b6fe : ret 0x24e9
0x0000000000412197 : ret 0x2548
0x000000000042a444 : ret 0x257d
0x0000000000429c9a : ret 0x25b
0x000000000046f5ea : ret 0x284
0x000000000040caae : ret 0x2948
0x000000000044f3f7 : ret 0x294c
0x0000000000467374 : ret 0x294d
0x00000000004415d6 : ret 0x2ae9
0x0000000000463409 : ret 0x2d75
0x0000000000420a0a : ret 0x2dc
0x00000000004633cd : ret 0x2f7d
0x000000000041c7aa : ret 0x2fb
0x0000000000426821 : ret 0x2fe9
0x00000000004363ba : ret 0x3141
0x000000000046be35 : ret 0x31d0
0x0000000000472a9d : ret 0x31e9
0x0000000000417ceb : ret 0x327d
0x0000000000472709 : ret 0x32e9
0x00000000004175bb : ret 0x3475
0x0000000000404649 : ret 0x348
0x0000000000477d5a : ret 0x34c
0x0000000000490536 : ret 0x34e8
0x0000000000428d84 : ret 0x370
0x000000000046e076 : ret 0x387e
0x0000000000404e07 : ret 0x3948
0x0000000000430ce3 : ret 0x3949
0x000000000041112d : ret 0x394d
0x000000000046f843 : ret 0x3a77
0x000000000043d8b0 : ret 0x3ae9
0x000000000040db9a : ret 0x3bc
0x0000000000423d51 : ret 0x3d48
0x000000000042d19a : ret 0x3e
0x000000000040efe1 : ret 0x3f
0x000000000040f2ff : ret 0x3f73
0x000000000042a820 : ret 0x400
0x0000000000408952 : ret 0x401
0x000000000046efdf : ret 0x407f
0x000000000046952d : ret 0x4130
0x000000000045e914 : ret 0x417d
0x00000000004472ee : ret 0x438b
0x0000000000452726 : ret 0x44e8
0x000000000046ae33 : ret 0x44fc
0x000000000040d94f : ret 0x4566
0x00000000004700d5 : ret 0x4573
0x000000000041cc8e : ret 0x4574
0x0000000000402ab3 : ret 0x4677
0x000000000046348b : ret 0x4802
0x00000000004100c3 : ret 0x4804
0x0000000000424df1 : ret 0x4807
0x000000000040fd75 : ret 0x4808
0x000000000044848c : ret 0x4810
0x0000000000460b61 : ret 0x4828
0x0000000000466faa : ret 0x4840
0x0000000000462b8f : ret 0x4866
0x0000000000466f92 : ret 0x48c1
0x00000000004226ea : ret 0x48f0
0x000000000047a48a : ret 0x48f1
0x000000000041c891 : ret 0x48f2
0x000000000047a41a : ret 0x48f3
0x000000000041cb46 : ret 0x48f8
0x0000000000477fe4 : ret 0x4b6
0x000000000044aac2 : ret 0x4be9
0x000000000047197d : ret 0x4c08
0x000000000040fa97 : ret 0x4c10
0x0000000000409e5e : ret 0x4c28
0x000000000040a32e : ret 0x4c48
0x000000000045b9fa : ret 0x4cf
0x000000000046e072 : ret 0x4cfe
0x0000000000409e8c : ret 0x4d04
0x000000000040a35c : ret 0x4d08
0x000000000044260a : ret 0x4e75
0x000000000046eaa5 : ret 0x4f75
0x00000000004177d6 : ret 0x5175
0x000000000046f832 : ret 0x5273
0x0000000000457118 : ret 0x5489
0x000000000046b0db : ret 0x569
0x00000000004141da : ret 0x570f
0x0000000000432109 : ret 0x5b7d
0x00000000004104b7 : ret 0x5f74
0x0000000000478215 : ret 0x60
0x000000000044067f : ret 0x6348
0x00000000004202ca : ret 0x69
0x0000000000470447 : ret 0x6b73
0x0000000000456d6b : ret 0x6c2
0x000000000040f708 : ret 0x6ce9
0x000000000048f63b : ret 0x7275
0x0000000000416362 : ret 0x727d
0x00000000004462c8 : ret 0x7402
0x0000000000408ca6 : ret 0x7408
0x00000000004784b1 : ret 0x7420
0x0000000000465d9f : ret 0x747e
0x00000000004515f6 : ret 0x74e8
0x000000000040b4a6 : ret 0x7501
0x0000000000479b20 : ret 0x7520
0x00000000004676c2 : ret 0x7676
0x0000000000405523 : ret 0x7975
0x000000000041cefa : ret 0x7a
0x0000000000487488 : ret 0x7ae9
0x0000000000445c7d : ret 0x7bd
0x0000000000471f8c : ret 0x7c75
0x0000000000474410 : ret 0x7e7d
0x0000000000410d60 : ret 0x7f
0x000000000046ef3d : ret 0x7fff
0x0000000000461017 : ret 0x8148
0x0000000000456adc : ret 0x8176
0x000000000040f7d1 : ret 0x820f
0x0000000000407787 : ret 0x8308
0x00000000004250b9 : ret 0x830f
0x0000000000406ca5 : ret 0x8348
0x00000000004070c2 : ret 0x8349
0x0000000000410878 : ret 0x840f
0x000000000046014b : ret 0x8445
0x00000000004052cc : ret 0x850f
0x0000000000402d57 : ret 0x8548
0x000000000043c34d : ret 0x85d
0x0000000000462ab0 : ret 0x860f
0x000000000041ba24 : ret 0x8675
0x0000000000402a90 : ret 0x870f
0x000000000043d8ab : ret 0x873
0x0000000000415a6e : ret 0x8748
0x000000000045dba0 : ret 0x87e
0x0000000000426ec3 : ret 0x8830
0x000000000040972b : ret 0x8873
0x000000000045313a : ret 0x8874
0x0000000000479552 : ret 0x8904
0x0000000000449091 : ret 0x8944
0x0000000000403147 : ret 0x8948
0x0000000000439682 : ret 0x8949
0x0000000000412db9 : ret 0x894c
0x00000000004105a3 : ret 0x894d
0x00000000004472de : ret 0x8b44
0x0000000000402e62 : ret 0x8b48
0x0000000000466aad : ret 0x8b4c
0x0000000000410378 : ret 0x8b9
0x0000000000431b93 : ret 0x8c0f
0x0000000000404e0a : ret 0x8d0f
0x000000000040e4c7 : ret 0x8d48
0x0000000000402ad3 : ret 0x8d4b
0x00000000004351ea : ret 0x8d4c
0x000000000040f987 : ret 0x8d4d
0x000000000041ce07 : ret 0x8e0f
0x000000000041ab1d : ret 0x8eeb
0x0000000000406b7e : ret 0x8f0f
0x000000000040c28d : ret 0x9189
0x0000000000413202 : ret 0x93e9
0x0000000000484c75 : ret 0x93eb
0x0000000000401ae9 : ret 0x940f
0x0000000000413310 : ret 0x977
0x000000000041fb5b : ret 0x9876
0x0000000000427550 : ret 0x9a4
0x0000000000401aec : ret 0x9b0f
0x0000000000413355 : ret 0x9c77
0x0000000000406314 : ret 0x9deb
0x000000000040b09a : ret 0x9e3
0x0000000000428bcd : ret 0x9f2
0x000000000043eb1a : ret 0xa
0x0000000000435798 : ret 0xa0eb
0x000000000041b358 : ret 0xa66
0x000000000040b4b1 : ret 0xa74
0x0000000000402802 : ret 0xa75
0x00000000004199d4 : ret 0xa8d
0x0000000000419953 : ret 0xaa3
0x0000000000410451 : ret 0xaceb
0x0000000000457559 : ret 0xb1eb
0x000000000047f9b6 : ret 0xb4e8
0x000000000040800b : ret 0xb60f
0x0000000000445843 : ret 0xb848
0x0000000000466dd6 : ret 0xbb
0x000000000040624c : ret 0xbb41
0x0000000000463396 : ret 0xbe02
0x000000000048f0ca : ret 0xc
0x00000000004122b8 : ret 0xc031
0x0000000000440678 : ret 0xc107
0x0000000000402d0c : ret 0xc148
0x000000000041a5c0 : ret 0xc149
0x00000000004342a5 : ret 0xc2ff
0x0000000000402e96 : ret 0xc477
0x00000000004510a6 : ret 0xc4e8
0x0000000000457545 : ret 0xc5eb
0x0000000000402dba : ret 0xc62
0x000000000041bbfe : ret 0xc74a
0x000000000042c2b0 : ret 0xc75
0x0000000000413325 : ret 0xc77
0x0000000000422c9d : ret 0xcccc
0x0000000000409439 : ret 0xcde9
0x0000000000410e36 : ret 0xcfeb
0x000000000045b8d7 : ret 0xd
0x000000000040e22e : ret 0xd0eb
0x000000000045710c : ret 0xd0f7
0x0000000000401af1 : ret 0xd121
0x0000000000466bf7 : ret 0xd148
0x0000000000446158 : ret 0xd1ff
0x00000000004667a6 : ret 0xd231
0x0000000000408032 : ret 0xd284
0x0000000000428d59 : ret 0xd285
0x000000000045e1bc : ret 0xd2eb
0x00000000004638ea : ret 0xd348
0x0000000000432cee : ret 0xd389
0x0000000000443f1b : ret 0xd6ff
0x000000000043e276 : ret 0xd76
0x0000000000482d4a : ret 0xd85
0x0000000000455b50 : ret 0xd889
0x0000000000479201 : ret 0xd8b
0x000000000043a293 : ret 0xdb31
0x000000000044aaba : ret 0xdb85
0x000000000040628c : ret 0xdbcf
0x000000000045752b : ret 0xdfeb
0x0000000000434c81 : ret 0xe075
0x0000000000416e10 : ret 0xe07c
0x00000000004667b0 : ret 0xe0eb
0x0000000000446ba2 : ret 0xe372
0x0000000000410d03 : ret 0xe4eb
0x00000000004174b2 : ret 0xe73
0x000000000042aa82 : ret 0xe875
0x000000000043b9bb : ret 0xea7c
0x000000000043655c : ret 0xeb10
0x0000000000436556 : ret 0xeb18
0x000000000043f600 : ret 0xeb77
0x0000000000486670 : ret 0xebb0
0x0000000000410d41 : ret 0xebfe
0x00000000004100ca : ret 0xec72
0x0000000000402815 : ret 0xed74
0x000000000041aaa9 : ret 0xf01
0x00000000004079a7 : ret 0xf08
0x00000000004751ac : ret 0xf20
0x00000000004673a2 : ret 0xf41
0x0000000000409682 : ret 0xf44
0x0000000000402b6e : ret 0xf45
0x0000000000466057 : ret 0xf47c
0x000000000046a5bb : ret 0xf48
0x000000000044e210 : ret 0xf66
0x000000000046678b : ret 0xf6d0
0x000000000041726c : ret 0xf748
0x0000000000466fee : ret 0xf7c
0x00000000004759d9 : ret 0xf80
0x0000000000455d46 : ret 0xf8c1
0x000000000047b91a : ret 0xf930
0x0000000000480dfa : ret 0xfa3b
0x000000000045bdea : ret 0xfada
0x00000000004055c5 : ret 0xfb0
0x0000000000453dfa : ret 0xfb23
0x0000000000452afa : ret 0xfb36
0x000000000046708a : ret 0xfbd8
0x000000000040e18f : ret 0xfc01
0x0000000000424e4b : ret 0xfc7f
0x0000000000461eae : ret 0xfce9
0x0000000000449bb2 : ret 0xfd4
0x000000000044e502 : ret 0xfdc5
0x000000000042cf2a : ret 0xfdf4
0x000000000044601a : ret 0xfe0c
0x000000000044360a : ret 0xfe34
0x000000000043701a : ret 0xfefc
0x0000000000445b7a : ret 0xff00
0x000000000045cb0a : ret 0xff1b
0x000000000041417a : ret 0xff2
0x0000000000430ffa : ret 0xff39
0x000000000045f94a : ret 0xff4b
0x0000000000463965 : ret 0xff50
0x000000000047c36a : ret 0xffc2
0x0000000000450f8a : ret 0xffd1
0x0000000000488289 : ret 0xffe8
0x000000000045fdd0 : ret 0xfff8
0x0000000000454d27 : ret 0xfffa
0x00000000004686c8 : ret 0xfffb
0x00000000004129ca : ret 0xfffd
0x000000000040f2ca : ret 0xfffe
0x0000000000410d32 : ret 0xffff
0x0000000000406bdb : ret 1
0x00000000004025f1 : ret 2
0x0000000000410097 : ret 3
0x000000000046530b : ret 4
0x0000000000439182 : ret 6
0x00000000004111e4 : ret 7
0x0000000000425d90 : ret 9
0x00000000004824b2 : retf ; jmp 0x48247a
0x0000000000446359 : rol byte ptr [rax + 0x48], 0x89 ; and al, 0x10 ; ret
0x0000000000430e81 : rol byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 0x39], 1 ; ret 0x870f
0x00000000004086e7 : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; mov dh, 0x59 ; or dh, dh ; ret
0x000000000042f75a : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; mov dh, 0x89 ; ret
0x0000000000455999 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000040f2c6 : rol byte ptr [rbx], 1 ; add cl, ch ; ret 0xfffe
0x0000000000443098 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x0000000000467eec : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8948
0x0000000000417d79 : rol byte ptr [rdx], 0x89 ; add eax, 0x12796b ; ret
0x0000000000450f85 : rol byte ptr [rsi], 0 ; add al, ch ; ret 0xffd1
0x000000000042ed26 : rol dword ptr [rax], 0 ; add byte ptr [rdi], cl ; mov dh, 0xd ; pop rdi ; ret
0x000000000048ee4f : rol dword ptr [rax], cl ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041a713 : rol dword ptr [rbp - 0x77], 1 ; ret 0x3948
0x0000000000470366 : rol dword ptr [rcx + 0x7fffe2], cl ; add byte ptr [rsi - 9], ah ; ret
0x00000000004285fb : rol ebx, -1 ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x000000000048ee4e : rol qword ptr [rax], cl ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000043399a : ror byte ptr [rax + 0x29], 1 ; ret
0x00000000004030a9 : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000446363 : ror byte ptr [rax + 0x48], 0x89 ; and al, 0x10 ; ret
0x0000000000416fac : ror byte ptr [rax - 0x77], 0xd7 ; jmp 0x416f79
0x000000000044db19 : ror byte ptr [rax - 0x77], 1 ; and al, 8 ; ret
0x000000000044f9ac : ror byte ptr [rax - 0x77], 1 ; in al, dx ; pop rbp ; ret
0x000000000046f848 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000043ae82 : ror byte ptr [rax - 0x77], 4 ; and al, 0xe8 ; ret
0x0000000000457507 : ror byte ptr [rax - 0x77], cl ; shr ebx, cl ; add ecx, dword ptr [rax - 1] ; ret
0x0000000000436559 : ror byte ptr [rax - 0x7d], 1 ; ret 0xeb10
0x0000000000402ad0 : ror byte ptr [rbp + 0x29], 1 ; ret 0x8d4b
0x000000000043f85e : ror byte ptr [rbp + 0x39], 1 ; ret 0x870f
0x00000000004112bd : ror byte ptr [rbp - 0x77], 1 ; ret 0x8349
0x0000000000466b60 : ror byte ptr [rbp - 0x77], cl ; ret
0x0000000000410426 : ror byte ptr [rcx - 0x73], cl ; pop rbx ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000045d407 : ror byte ptr [rcx - 0x76f7dbbc], 1 ; push rsp ; and al, 0xc ; ret
0x0000000000411159 : ror byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx - 9], cl ; ret
0x000000000041115c : ror byte ptr [rcx - 9], cl ; ret
0x000000000044e31e : ror byte ptr [rdi + rcx + 0x4c], 1 ; ret
0x000000000042601c : ror byte ptr [rdi], 0x11 ; and al, 0x10 ; ret
0x0000000000406bd8 : ror byte ptr [rdi], 0x84 ; ret 1
0x00000000004380f0 : ror byte ptr [rdi], 0x84 ; ret 3
0x000000000045a459 : ror byte ptr [rdi], 0x85 ; ret
0x000000000045b8d4 : ror byte ptr [rdi], 0x85 ; ret 0xd
0x00000000004148f7 : ror byte ptr [rdi], cl ; mov gs, word ptr [rcx] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000042aa79 : ror byte ptr [rdi], cl ; test byte ptr [rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xe875
0x000000000042c19a : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040f907 : ror dword ptr [rax + 0x29], 1 ; ret 0x8948
0x0000000000410a37 : ror dword ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000461014 : ror dword ptr [rax + 0x29], cl ; ret 0x8148
0x0000000000410d88 : ror dword ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000040f34f : ror dword ptr [rax + 0x29], cl ; ret 0xc148
0x0000000000430e87 : ror dword ptr [rax + 0x39], 1 ; ret 0x870f
0x0000000000415b0b : ror dword ptr [rax + 1], cl ; ret
0x000000000041aee6 : ror dword ptr [rax - 0x75], 5 ; ret 0x129c
0x0000000000446e87 : ror dword ptr [rax - 0x77], 0x44 ; and al, 0x10 ; ret
0x000000000040659f : ror dword ptr [rax - 0x77], 0x4c ; and al, 0x18 ; ret
0x000000000043b508 : ror dword ptr [rax - 0x77], 1 ; pop rsp ; and al, 0x20 ; ret
0x000000000040eefa : ror dword ptr [rax - 0x77], 1 ; ret
0x00000000004226c0 : ror dword ptr [rax - 0x7d], -7 ; jl 0x422694 ; ret
0x0000000000446b9f : ror dword ptr [rbp + 0x39], cl ; ret 0xe372
0x0000000000463721 : ror dword ptr [rbp - 0x73], 1 ; pop rcx ; dec dword ptr [rbp + 0x21] ; ret
0x0000000000408867 : ror dword ptr [rcx + 0xf], -0x51 ; ret 0x348
0x000000000044e31b : ror dword ptr [rcx - 0x77], cl ; ror byte ptr [rdi + rcx + 0x4c], 1 ; ret
0x0000000000446e84 : ror dword ptr [rdi], -0x49 ; ror dword ptr [rax - 0x77], 0x44 ; and al, 0x10 ; ret
0x0000000000417ec2 : ror dword ptr [rdi], -0x4a ; xchg eax, ecx ; ret
0x0000000000401ae6 : ror dword ptr [rdi], 0x2e ; ret 0x940f
0x0000000000448ed9 : ror dword ptr [rdi], 1 ; mov bh, 0x51 ; add ah, byte ptr [rsi - 9] ; ret 1
0x0000000000489248 : ror dword ptr [rdi], cl ; xchg eax, esp ; ret 0x850f
0x000000000048b504 : ror dword ptr [rdx], 1 ; add byte ptr [rcx], dh ; fucomi st(3) ; add ecx, dword ptr [rax - 1] ; ret
0x000000000044908b : sahf ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8944
0x000000000044634f : sal byte ptr [rax], 0x48 ; mov dword ptr [rsp + 0x10], eax ; ret
0x0000000000484c6d : sal byte ptr [rbp + 8], cl ; mov qword ptr [rdi], rax ; mov rdx, rax ; jmp 0x484c13
0x000000000048a38e : sal byte ptr [rbp + 8], cl ; mov qword ptr [rdi], rax ; mov rdx, rax ; jmp 0x48a334
0x000000000046697c : sal byte ptr [rbp + rax + 0x48], cl ; inc ebx ; jmp 0x46694e
0x0000000000433775 : sal byte ptr [rbp - 0xe], cl ; mov dword ptr [rsp + 0x10], ecx ; ret
0x000000000043f609 : sal byte ptr [rbx - 0x1e], 1 ; mov qword ptr [rsp + 0x10], rcx ; ret
0x000000000046be36 : sal byte ptr [rcx], 1 ; fucomi st(3) ; or byte ptr [rax - 1], cl ; ret
0x00000000004320ff : sal byte ptr [rcx], cl ; fucomi st(3) ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x0000000000462abd : sal byte ptr [rdi + rax - 0xe], 0xf ; adc dword ptr [rsp + 0x18], eax ; ret
0x0000000000408c9e : sal byte ptr [rdx + 0xf], 0xb6 ; push rdx ; or dh, dh ; ret 0x7408
0x000000000043506d : sal byte ptr [rdx + rax - 0x77], 0x10 ; mov dword ptr [rsp + 0x20], ebx ; ret
0x00000000004415d1 : sal byte ptr [rdx + rax*2 + 0x48], 0x89 ; ret 0x2ae9
0x00000000004561c3 : sal byte ptr [rsi + rbx*8 + 0x48], cl ; mov eax, dword ptr [rdx] ; call rax
0x0000000000481dc9 : sal byte ptr [rsp + rax + 0x48], 0x83 ; ret
0x000000000044e63b : sal byte ptr [rsp + rbp*4 + 0x49], cl ; mov dword ptr [rax], edx ; ret
0x0000000000455c33 : sal byte ptr [rsp + rbp*4 - 0x15], cl ; ret
0x000000000043e0fb : sal byte ptr [rsp + rdx + 0x49], 0x89 ; fmul dword ptr [rax - 0x77] ; ret
0x000000000046678c : sal dh, 1 ; ret 0xf01
0x000000000041430b : sal dl, 0xf ; pop rsp ; ret 0xf44
0x000000000046cc55 : sal dword ptr [rbx + 7], 0x48 ; lea edx, dword ptr [rdx + rsi + 1] ; jmp 0x46cc2b
0x000000000044e295 : sal dword ptr [rbx - 0x3a], 1 ; add byte ptr [rax], al ; ret
0x0000000000480f56 : sal dword ptr [rdx - 0x34], -0x17 ; ret
0x0000000000410130 : sal dword ptr [rdx - 0x53], 1 ; ret
0x0000000000462b98 : sal edx, 0xf ; adc dword ptr [rsp + 0x18], eax ; ret
0x00000000004258f6 : salc ; adc dword ptr [rax], eax ; add bl, ch ; ret 0x8948
0x000000000048e386 : salc ; add eax, 0x39480001 ; ret 0x850f
0x000000000044e0de : salc ; and al, 0x18 ; ret
0x0000000000439bba : salc ; ret
0x0000000000454d26 : salc ; ret 0xfffa
0x0000000000410096 : salc ; ret 3
0x000000000045109d : sar bh, 1 ; dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x451072
0x0000000000446372 : sar byte ptr [rax], 0x48 ; mov dword ptr [rsp + 0x10], eax ; ret
0x0000000000462680 : sar dh, 0xff ; jmp 0x46261b
0x000000000046266f : sar dh, 0xff ; jmp 0x462656
0x0000000000457554 : sar dword ptr [rsi + 5], 0x48 ; inc edx ; jmp 0x457512
0x0000000000457694 : sar dword ptr [rsi + 5], 0x48 ; inc edx ; jmp 0x457652
0x00000000004760ac : sar dword ptr [rsi + rsi*4 - 0x17], 1 ; ret
0x000000000048666e : sar dword ptr [rsi], cl ; ret 0xebb0
0x00000000004055c3 : sar dword ptr [rsi], cl ; ret 0xfb0
0x0000000000455c2f : sar edx, 3 ; test edx, edx ; je 0x455bea ; jmp 0x455c03
0x000000000044b136 : sbb al, 0 ; add byte ptr [rax], al ; call 0x427396
0x000000000044fc31 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x000000000044fb8a : sbb al, 0x24 ; call rax
0x0000000000472d2d : sbb al, 0x24 ; call rdx
0x0000000000408c5b : sbb al, 0x24 ; mov rbx, qword ptr [rdx] ; call rbx
0x000000000048b24f : sbb al, 0xeb ; ret 0x19e8
0x00000000004258f2 : sbb al, byte ptr [rax] ; add al, ch ; salc ; adc dword ptr [rax], eax ; add bl, ch ; ret 0x8948
0x00000000004750a2 : sbb bh, cl ; cli ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x0000000000446ee0 : sbb bl, al ; movups xmmword ptr [rsp + 0x10], xmm0 ; ret
0x0000000000490534 : sbb bl, ch ; ret 0x34e8
0x0000000000452724 : sbb bl, ch ; ret 0x44e8
0x00000000004515f4 : sbb bl, ch ; ret 0x74e8
0x000000000047f9b4 : sbb bl, ch ; ret 0xb4e8
0x00000000004510a4 : sbb bl, ch ; ret 0xc4e8
0x0000000000436557 : sbb bl, ch ; ror byte ptr [rax - 0x7d], 1 ; ret 0xeb10
0x0000000000461460 : sbb byte ptr [r8 - 0x77], cl ; adc al, 0x24 ; call rcx
0x00000000004256f9 : sbb byte ptr [r8 - 0x77], cl ; add al, 0x24 ; call rcx
0x0000000000464803 : sbb byte ptr [r8 - 0x77], cl ; xor al, 0x24 ; call rcx
0x000000000044f79d : sbb byte ptr [rax + 0x26], bh ; syscall ; ret
0x0000000000419ed5 : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004369a1 : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000470d4d : sbb byte ptr [rax + 0x48000000], 0x89 ; or al, 0x24 ; call rax
0x0000000000404645 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x348
0x0000000000404ba8 : sbb byte ptr [rax + 1], cl ; ret
0x000000000040396e : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x50 ; mov rbx, qword ptr [rdx] ; call rbx
0x0000000000404785 : sbb byte ptr [rax - 0x75], cl ; sub al, 0x24 ; add rsp, 8 ; ret
0x0000000000461461 : sbb byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call rcx
0x000000000041afd6 : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x427247
0x00000000004256fa : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call rcx
0x000000000043a7c0 : sbb byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x426a58
0x000000000043a7bf : sbb byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x426a59
0x0000000000471c35 : sbb byte ptr [rax - 0x77], cl ; and al, 0x20 ; ret
0x0000000000483bb2 : sbb byte ptr [rax - 0x77], cl ; je 0x483be2 ; and al, ch ; ret
0x00000000004257a8 : sbb byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x0000000000488311 : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000464804 : sbb byte ptr [rax - 0x77], cl ; xor al, 0x24 ; call rcx
0x000000000046ae30 : sbb byte ptr [rax - 0x7d], cl ; ret 0x44fc
0x0000000000424cc7 : sbb byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000463140 : sbb byte ptr [rax - 0x7f], cl ; call qword ptr [rax]
0x0000000000428e61 : sbb byte ptr [rax], ah ; add byte ptr [rax], al ; add al, ch ; xchg eax, ebp ; ret
0x000000000044cb45 : sbb byte ptr [rax], ah ; add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000044d0f5 : sbb byte ptr [rax], al ; adc byte ptr [rax], al ; call qword ptr [rdx]
0x000000000044cf55 : sbb byte ptr [rax], al ; add al, 0 ; call qword ptr [rdx]
0x000000000044ce85 : sbb byte ptr [rax], al ; add al, byte ptr [rax] ; call qword ptr [rdx]
0x000000000044d845 : sbb byte ptr [rax], al ; add byte ptr [rax], ah ; call qword ptr [rdx]
0x000000000044fd81 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall ; ret
0x000000000044d6a5 : sbb byte ptr [rax], al ; add byte ptr [rax], cl ; call qword ptr [rdx]
0x000000000044d775 : sbb byte ptr [rax], al ; add byte ptr [rax], dl ; call qword ptr [rdx]
0x000000000044d435 : sbb byte ptr [rax], al ; add byte ptr [rcx], al ; call qword ptr [rdx]
0x000000000044d505 : sbb byte ptr [rax], al ; add byte ptr [rdx], al ; call qword ptr [rdx]
0x000000000044cdb5 : sbb byte ptr [rax], al ; add dword ptr [rax], eax ; call qword ptr [rdx]
0x000000000044d1c5 : sbb byte ptr [rax], al ; and byte ptr [rax], al ; call qword ptr [rdx]
0x000000000047b9c0 : sbb byte ptr [rax], al ; call 0x477c14
0x000000000044d025 : sbb byte ptr [rax], al ; or byte ptr [rax], al ; call qword ptr [rdx]
0x000000000044a0bf : sbb byte ptr [rax], al ; ret
0x000000000044c9af : sbb byte ptr [rax], cl ; add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000044ca75 : sbb byte ptr [rax], dl ; add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000041ce04 : sbb byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000044c79f : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [rdx]
0x00000000004019a3 : sbb byte ptr [rcx], al ; ret
0x000000000044c84f : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000045bde4 : sbb byte ptr [rsi], cl ; add byte ptr [rax], al ; add al, ch ; ret 0xfada
0x0000000000417b37 : sbb cl, byte ptr [rax + 0x39] ; ret
0x0000000000407280 : sbb cl, byte ptr [rax - 1] ; ret
0x000000000042c1fa : sbb cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000040584d : sbb dh, byte ptr [rax + rbp*2 - 0x7f] ; stc ; mov ah, 0x5c ; jmp rax
0x00000000004100c0 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x000000000040c22f : sbb dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000436043 : sbb dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd284
0x0000000000462645 : sbb eax, 0xf30d8948 ; ret
0x00000000004245c1 : sbb ecx, dword ptr [rcx + rax] ; ret
0x000000000041ab14 : sbb esi, esi ; and ebx, esi ; test bl, 0x10 ; setne dl ; jmp 0x41aab7
0x000000000042f296 : scasb al, byte ptr [rdi] ; call qword ptr [rax]
0x000000000045cd76 : scasb al, byte ptr [rdi] ; ret
0x000000000040633a : scasd eax, dword ptr [rdi] ; fmul dword ptr [rax - 0x3f] ; ret
0x000000000040634c : scasd eax, dword ptr [rdi] ; ret
0x0000000000404648 : scasd eax, dword ptr [rdi] ; ret 0x348
0x00000000004142cd : scasd eax, dword ptr [rdi] ; ret 0x570f
0x000000000044067e : scasd eax, dword ptr [rdi] ; ret 0x6348
0x0000000000439950 : scasd eax, dword ptr [rdi] ; ret 0x8949
0x00000000004117d4 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000411def : scasd eax, dword ptr [rdi] ; ret 0x8d48
0x0000000000406313 : scasd eax, dword ptr [rdi] ; ret 0x9deb
0x000000000040f118 : scasd eax, dword ptr [rdi] ; ret 0xb60f
0x000000000040624b : scasd eax, dword ptr [rdi] ; ret 0xbb41
0x000000000040635d : scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000000000463401 : scasd eax, dword ptr [rdi] ; test dword ptr [rcx - 0x73], 0x3948330c ; ret 0x2d75
0x00000000004667ae : setae dl ; jmp 0x466795
0x0000000000432eb9 : sete al ; mov byte ptr [rsp + 0x10], al ; ret
0x0000000000401a50 : sete al ; mov byte ptr [rsp + 0x18], al ; ret
0x00000000004019c7 : sete byte ptr [rax] ; ret
0x0000000000401165 : sete byte ptr [rsp + 0x20] ; ret
0x000000000044e147 : sete byte ptr [rsp + 8] ; ret
0x000000000043380f : sete dl ; test dl, dl ; je 0x4337fc ; ret
0x0000000000472325 : setne al ; mov byte ptr [rsp + 0x10], al ; ret
0x000000000041ab1b : setne dl ; jmp 0x41aab0
0x0000000000401a78 : setnp al ; and ecx, eax ; mov byte ptr [rsp + 0x18], cl ; ret
0x0000000000401a7a : shl byte ptr [rcx], 0xc1 ; mov byte ptr [rsp + 0x18], cl ; ret
0x0000000000401aef : shl byte ptr [rcx], 0xc2 ; and ecx, edx ; mov byte ptr [rsp + 0x18], cl ; ret
0x0000000000401b27 : shl dword ptr [rsi + 0xf], 0x2e ; ret 0x940f
0x000000000044e2e8 : shl edi, cl ; sete byte ptr [rax] ; ret
0x0000000000462bb2 : shl edx, 0x3f ; mov qword ptr [rsp + 0x18], rdx ; ret
0x000000000044e2e7 : shl rdi, cl ; sete byte ptr [rax] ; ret
0x0000000000462bb1 : shl rdx, 0x3f ; mov qword ptr [rsp + 0x18], rdx ; ret
0x000000000046e0b3 : shr bl, 1 ; ret
0x000000000041635a : shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x00000000004300cb : shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8348
0x00000000004690a0 : shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x8b48
0x0000000000445f3f : shr bl, cl ; or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000410cfe : shr eax, 8 ; inc rdx ; jmp 0x410cef
0x0000000000410e31 : shr eax, 8 ; inc rdx ; jmp 0x410e0d
0x00000000004191e5 : shr ebx, 1 ; test byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000045750a : shr ebx, cl ; add ecx, dword ptr [rax - 1] ; ret
0x0000000000410cfd : shr r8, 8 ; inc rdx ; jmp 0x410cf0
0x0000000000410e30 : shr r8, 8 ; inc rdx ; jmp 0x410e0e
0x000000000044e143 : sldt word ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; and al, 8 ; ret
0x000000000044c503 : sldt word ptr [rax] ; jmp rax
0x0000000000461eaa : stc ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xfce9
0x000000000041aa89 : stc ; and byte ptr [rcx], bl ; jmp qword ptr [rcx]
0x00000000004750a3 : stc ; cli ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x00000000004226c3 : stc ; jl 0x422691 ; ret
0x000000000044c06d : stc ; lea rsi, qword ptr [rip + 0x1a5b] ; call rax
0x000000000040581c : stc ; mov ah, 0x5c ; jmp rax
0x000000000044d98a : stc ; ret
0x00000000004055c2 : stc ; sar dword ptr [rsi], cl ; ret 0xfb0
0x000000000041cc88 : std ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4574
0x000000000044baa4 : std ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x0000000000457113 : std ; inc dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x5489
0x0000000000432e27 : std ; ret
0x000000000044f03c : sti ; add al, 0x72 ; add eax, 0x789068b ; ret
0x000000000044a2ed : sti ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000047a414 : sti ; add eax, 0x83482476 ; ret 0x48f3
0x000000000049052e : sti ; dec dword ptr [rdi] ; mov dh, 0x44 ; and al, 0x18 ; jmp 0x490501
0x0000000000465ff4 : sti ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x000000000043cc8e : sti ; jmp 0x43cc55
0x0000000000428ac1 : sti ; ret 0xfffd
0x000000000041b0e2 : stosb byte ptr [rdi], al ; ret 0
0x000000000047791e : stosd dword ptr [rdi], eax ; ret
0x000000000047a4e1 : sub al, 0 ; add byte ptr [rax], al ; mov qword ptr [rsp], rcx ; call rax
0x0000000000404788 : sub al, 0x24 ; add rsp, 8 ; ret
0x0000000000429927 : sub al, 0x39 ; ret 0x2075
0x000000000044062b : sub al, 0x48 ; mov ebp, dword ptr [rsp] ; add rsp, 8 ; ret
0x00000000004356a0 : sub al, 0x90 ; add dword ptr [rax], eax ; jmp 0x43568f
0x000000000047ab67 : sub al, ch ; ret
0x00000000004500f8 : sub bl, al ; call 0x44c374
0x000000000045005b : sub bl, al ; xor eax, eax ; jmp 0x450057
0x0000000000425b83 : sub byte ptr [rax + 0x39], cl ; ret
0x00000000004700d2 : sub byte ptr [rax + 0x39], cl ; ret 0x4573
0x0000000000470444 : sub byte ptr [rax + 0x39], cl ; ret 0x6b73
0x000000000046768c : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000425606 : sub byte ptr [rax + 0x63], cl ; ret
0x000000000047a6d0 : sub byte ptr [rax + 9], cl ; ret 0x8148
0x0000000000429bf7 : sub byte ptr [rax - 0x73], cl ; add qword ptr [r8 - 0x77], rcx ; ret 0x8b48
0x00000000004629f2 : sub byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; ret 0x1074
0x000000000046145d : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x77], cl ; adc al, 0x24 ; call rcx
0x0000000000464800 : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x77], cl ; xor al, 0x24 ; call rcx
0x000000000040f0d0 : sub byte ptr [rax - 0x75], cl ; sub al, 0x24 ; add rsp, 8 ; ret
0x000000000044dab1 : sub byte ptr [rax - 0x77], cl ; hlt ; mov dword ptr [rsp + 0x18], eax ; ret
0x000000000048e7d8 : sub byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rax
0x0000000000411d9f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004226e7 : sub byte ptr [rax - 0x77], cl ; ret 0x48f0
0x0000000000432049 : sub byte ptr [rax - 0x7f], cl ; ret
0x000000000041e677 : sub byte ptr [rax - 1], cl ; ret 0x8948
0x0000000000423d9a : sub byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x0000000000416358 : sub byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 1] ; ret 0x3948
0x00000000004462c2 : sub byte ptr [rdi], cl ; mov dh, 0x52 ; adc al, 0xf6 ; ret 0x7402
0x000000000048dbd7 : sub byte ptr [rsi], al ; add byte ptr [rax], al ; add al, ch ; jmp rsi
0x000000000045e82f : sub dword ptr [rax - 0x77], ecx ; ret 0xb848
0x0000000000474c37 : sub dword ptr [rdi], ecx ; mov dh, 0x50 ; adc al, 0xf6 ; ret 0xf01
0x000000000047954b : sub dword ptr [rip - 0x74ffffff], 0x44 ; ret 0x8904
0x000000000044d9b4 : sub dword ptr [rsp], 5 ; mov rbx, qword ptr [rdx] ; jmp rbx
0x0000000000474c36 : sub dword ptr ds:[rdi], ecx ; mov dh, 0x50 ; adc al, 0xf6 ; ret 0xf01
0x0000000000438673 : sub eax, -0x49 ; ret
0x000000000046319d : sub eax, 0x83481075 ; ret
0x0000000000463486 : sub eax, 0x83481075 ; ret 0x4802
0x000000000047954c : sub eax, 0x8b000001 ; ret 0x8904
0x000000000044d986 : sub eax, 1 ; jne 0x44d989 ; ret
0x000000000044af93 : sub ecx, dword ptr [rax - 0x77] ; ret 0x8348
0x00000000004630ef : sub ecx, dword ptr [rdi] ; test dword ptr [rax + rax - 0x7cb80000], esp ; ret
0x000000000046338d : sub ecx, dword ptr [rdi] ; test edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xbe02
0x000000000044e5f3 : sub edi, esi ; add rdi, rdx ; mov qword ptr [r8], rdi ; ret
0x000000000044e2e5 : sub edi, esi ; shl rdi, cl ; sete byte ptr [rax] ; ret
0x0000000000466d5f : sub edx, ecx ; mov qword ptr [rsp + 0x10], rdx ; ret
0x000000000044d9b3 : sub qword ptr [rsp], 5 ; mov rbx, qword ptr [rdx] ; jmp rbx
0x000000000044e5f2 : sub rdi, rsi ; add rdi, rdx ; mov qword ptr [r8], rdi ; ret
0x000000000044e2e4 : sub rdi, rsi ; shl rdi, cl ; sete byte ptr [rax] ; ret
0x0000000000466d5e : sub rdx, rcx ; mov qword ptr [rsp + 0x10], rdx ; ret
0x000000000044fdb9 : syscall ; mov dword ptr [rsp + 0x10], eax ; ret
0x000000000044f7c4 : syscall ; mov dword ptr [rsp + 0x20], eax ; ret
0x000000000044f949 : syscall ; mov dword ptr [rsp + 0x28], eax ; ret
0x000000000044fc61 : syscall ; mov dword ptr [rsp + 0x30], eax ; ret
0x000000000044f745 : syscall ; mov dword ptr [rsp + 8], eax ; ret
0x000000000044fe4c : syscall ; mov qword ptr [rsp + 8], rax ; ret
0x000000000044f609 : syscall ; ret
0x00000000004053b1 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000422492 : test al, 0x16 ; add byte ptr [rax], al ; ret
0x00000000004908c8 : test al, 1 ; add byte ptr [rax], al ; ret
0x000000000041ab18 : test bl, 0x10 ; setne dl ; jmp 0x41aab3
0x000000000041ab17 : test bl, 0x10 ; setne dl ; jmp 0x41aab4
0x000000000040c233 : test bl, bl ; je 0x40c21e ; mov qword ptr [rsp + 0x10], rdx ; ret
0x000000000043dd14 : test bl, bl ; jne 0x43dd07 ; mov qword ptr [rsp + 0x10], rcx ; ret
0x0000000000419f39 : test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; ret
0x0000000000449e48 : test byte ptr [rax + rax], ah ; add bl, ch ; ret 0xcccc
0x0000000000444bd2 : test byte ptr [rax + rcx*4], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000410870 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044306f : test byte ptr [rax + rcx*8], ah ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000048fcbd : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004166f8 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043bbcb : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret
0x000000000043bb8a : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret 0
0x000000000048a4d3 : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004191e7 : test byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000429c3a : test byte ptr [rax], 0 ; add byte ptr [rdi], cl ; mov dh, 0x98 ; ret 0
0x0000000000406c6c : test byte ptr [rax], ch ; add dword ptr [rax], eax ; add byte ptr [rax + 0x21], cl ; ret
0x0000000000412190 : test byte ptr [rcx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2548
0x000000000043006f : test byte ptr [rdi], 0x8e ; ret
0x000000000042aa7b : test byte ptr [rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xe875
0x0000000000406e9f : test byte ptr [rdx], dh ; add dword ptr [rax], eax ; add byte ptr [rax + 0x21], cl ; ret
0x000000000042ed25 : test cl, al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xd ; pop rdi ; ret
0x000000000042b8b0 : test cl, bl ; or dword ptr [rax], eax ; call rax
0x0000000000402707 : test cl, cl ; je 0x4026c6 ; mov byte ptr [rsp + 0x10], 1 ; ret
0x000000000044a0b2 : test cl, cl ; je 0x44a0c5 ; mov byte ptr [rsp + 0x18], 1 ; ret
0x0000000000433812 : test dl, dl ; je 0x4337f9 ; ret
0x0000000000436047 : test dl, dl ; je 0x43603e ; mov byte ptr [rsp + 0x10], 1 ; ret
0x000000000046697b : test dl, dl ; je 0x46698c ; inc rbx ; jmp 0x46694f
0x000000000044e5f4 : test dword ptr [rax + 1], 0x388949d7 ; ret
0x00000000004630f1 : test dword ptr [rax + rax - 0x7cb80000], esp ; ret
0x000000000044e2e6 : test dword ptr [rax - 0x2d], 0x940fe7 ; ret
0x0000000000463402 : test dword ptr [rcx - 0x73], 0x3948330c ; ret 0x2d75
0x000000000042d213 : test eax, 0xeb000153 ; ret 0x8948
0x00000000004389a3 : test eax, 0xffffebf ; or ebp, eax ; ret 0x139
0x0000000000426924 : test eax, eax ; jne 0x426922 ; mov byte ptr [rsp + 0x10], 1 ; ret
0x000000000042e5d7 : test eax, eax ; jne 0x42e5e0 ; ret
0x0000000000472323 : test eax, eax ; setne al ; mov byte ptr [rsp + 0x10], al ; ret
0x0000000000432eb7 : test ebx, ebx ; sete al ; mov byte ptr [rsp + 0x10], al ; ret
0x0000000000421c58 : test ecx, ecx ; jg 0x421c6b ; mov byte ptr [rsp + 0x10], 0 ; ret
0x0000000000446ec9 : test ecx, ecx ; jne 0x446edc ; movups xmmword ptr [rsp + 0x10], xmm0 ; ret
0x000000000046338f : test edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xbe02
0x00000000004268d5 : test edx, edx ; je 0x4268e8 ; mov byte ptr [rsp + 0x10], 0 ; ret
0x0000000000455c32 : test edx, edx ; je 0x455be7 ; jmp 0x455c00
0x00000000004561c2 : test edx, edx ; je 0x4561ab ; mov rax, qword ptr [rdx] ; call rax
0x0000000000433774 : test edx, edx ; jne 0x433772 ; mov dword ptr [rsp + 0x10], ecx ; ret
0x0000000000484c6c : test edx, edx ; jne 0x484c81 ; mov qword ptr [rdi], rax ; mov rdx, rax ; jmp 0x484c14
0x000000000048a38d : test edx, edx ; jne 0x48a3a2 ; mov qword ptr [rdi], rax ; mov rdx, rax ; jmp 0x48a335
0x0000000000429c39 : test esi, esi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x98 ; ret 0
0x000000000042e5d6 : test rax, rax ; jne 0x42e5e1 ; ret
0x00000000004561c1 : test rdx, rdx ; je 0x4561ac ; mov rax, qword ptr [rdx] ; call rax
0x0000000000448676 : ud2 ; call 0x424954
0x0000000000410093 : ud2 ; call 0x44c374
0x000000000040f2c2 : ud2 ; call 0x44c378
0x000000000044edef : vmovdqu ymmword ptr [rdi + rbx - 0x80], ymm0 ; vzeroupper ; ret
0x000000000044e271 : vzeroupper ; mov byte ptr [rax], 0 ; ret
0x000000000044e6a3 : vzeroupper ; ret
0x00000000004131fc : wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x93e9
0x000000000041fd41 : wait ; ret
0x0000000000401a79 : wait ; shl byte ptr [rcx], 0xc1 ; mov byte ptr [rsp + 0x18], cl ; ret
0x00000000004202c5 : xchg dword ptr [rax], esi ; add al, ch ; ret 0x69
0x0000000000401179 : xchg dword ptr [rbp], eax ; ret
0x0000000000427915 : xchg dword ptr [rcx], edi ; adc eax, dword ptr [rax] ; call 0x413b76
0x000000000040b2db : xchg dword ptr [rdi], eax ; inc qword ptr [rbx + 8] ; ret
0x0000000000428e67 : xchg eax, ebp ; ret
0x0000000000467eef : xchg eax, ebp ; ret 0x8948
0x000000000041ab1c : xchg eax, ebp ; ret 0x8eeb
0x000000000041aaac : xchg eax, ebp ; ret 0xd284
0x000000000041fd59 : xchg eax, ebx ; ret
0x00000000004667af : xchg eax, ebx ; ret 0xe0eb
0x000000000041331e : xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; ret 0xc77
0x0000000000428e13 : xchg eax, ecx ; add dword ptr [rax], eax ; add bl, ch ; ret 0x8948
0x000000000042d8ea : xchg eax, ecx ; mov eax, 0x84000000 ; add cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000413336 : xchg eax, ecx ; nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xc77
0x0000000000427885 : xchg eax, ecx ; push -0x7bffffff ; add cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000417e5a : xchg eax, ecx ; ret
0x000000000040fa90 : xchg eax, edi ; nop ; adc al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c10
0x0000000000406a70 : xchg eax, edi ; ret
0x0000000000408031 : xchg eax, edi ; ret 0xd284
0x000000000042f2a2 : xchg eax, edx ; call qword ptr [rax]
0x000000000040fc14 : xchg eax, edx ; nop ; adc al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c10
0x0000000000402a9c : xchg eax, edx ; ret
0x0000000000426820 : xchg eax, edx ; ret 0x2fe9
0x000000000040aad3 : xchg eax, edx ; ret 0x8b48
0x000000000040cbb6 : xchg eax, esi ; cmp byte ptr [rdx], dl ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000431b8e : xchg eax, esi ; cwde ; add byte ptr [rax + 0x39], cl ; ret 0x8c0f
0x0000000000445b71 : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x7f] ; ret 0xff00
0x000000000044cf53 : xchg eax, esp ; and al, 0x18 ; add byte ptr [rax + rax], al ; call qword ptr [rdx]
0x000000000044cce3 : xchg eax, esp ; and al, 0x18 ; add byte ptr [rax], 0 ; call qword ptr [rdx]
0x000000000044cc13 : xchg eax, esp ; and al, 0x18 ; add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000048e443 : xchg eax, esp ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000401166 : xchg eax, esp ; and al, 0x20 ; ret
0x000000000046e7df : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000471036 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret 0x8948
0x0000000000478377 : xchg eax, esp ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret 0x60
0x000000000046f4ce : xchg eax, esp ; and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x1074
0x0000000000447616 : xchg eax, esp ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000468a98 : xchg eax, esp ; and al, 0xd0 ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8548
0x0000000000476c64 : xchg eax, esp ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000448483 : xchg eax, esp ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4810
0x000000000044e148 : xchg eax, esp ; and al, 8 ; ret
0x000000000042fbc8 : xchg eax, esp ; not byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040477b : xchg eax, esp ; ret
0x000000000041cc8d : xchg eax, esp ; ret 0x4574
0x000000000046014a : xchg eax, esp ; ret 0x8445
0x000000000048924a : xchg eax, esp ; ret 0x850f
0x0000000000442f69 : xchg eax, esp ; ret 0x8b48
0x0000000000401aeb : xchg eax, esp ; ret 0x9b0f
0x000000000041ba37 : xchg eax, esp ; ret 0xd284
0x0000000000461ead : xchg eax, esp ; ret 0xfce9
0x00000000004748c6 : xchg edx, ebp ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x39], cl ; ret 0x870f
0x000000000040118a : xchg qword ptr [rbp], rax ; ret
0x000000000040b2da : xchg qword ptr [rdi], rax ; inc qword ptr [rbx + 8] ; ret
0x0000000000416faf : xlatb ; jmp 0x416f76
0x0000000000465530 : xlatb ; jmp 0x4654f7
0x000000000044e5f7 : xlatb ; mov qword ptr [r8], rdi ; ret
0x000000000044c1fa : xlatb ; pop rax ; lea rax, qword ptr [rip - 0x23ad3] ; jmp rax
0x000000000041300e : xor ah, byte ptr [rsi - 9] ; ret
0x000000000040e6a5 : xor al, 0x24 ; call 0x41a8e4
0x000000000044f80f : xor al, 0x24 ; call rax
0x0000000000472cbb : xor al, 0x24 ; call rbx
0x0000000000464807 : xor al, 0x24 ; call rcx
0x0000000000406c1c : xor al, 0x24 ; mov rdi, qword ptr [rdx] ; call rdi
0x000000000046cc5b : xor al, byte ptr [rcx] ; jmp 0x46cc25
0x000000000045e1b8 : xor bl, al ; mov rdx, rax ; jmp 0x45e195
0x000000000040e4c5 : xor bl, ch ; ret 0x8d48
0x0000000000404640 : xor byte ptr [r15], cl ; mov bh, 0x51 ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x348
0x000000000044e8fa : xor byte ptr [r8 - 0x73], r9b ; jg 0x44e946 ; ret
0x0000000000467cdb : xor byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000040b4ae : xor byte ptr [rax + 0x39], cl ; ret 0xa74
0x000000000044e8fb : xor byte ptr [rax - 0x73], cl ; jg 0x44e945 ; ret
0x00000000004027fc : xor byte ptr [rax - 0x75], cl ; adc dword ptr [rax + 0x39], ecx ; ret 0xa75
0x0000000000410db6 : xor byte ptr [rax - 0x75], cl ; sub al, 0x24 ; add rsp, 8 ; ret
0x000000000042de09 : xor byte ptr [rax - 0x77], cl ; add al, 0x24 ; mov rcx, qword ptr [rdx] ; call rcx
0x0000000000446350 : xor byte ptr [rax - 0x77], cl ; and al, 0x10 ; ret
0x000000000041a21b : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000443f18 : xor byte ptr [rax - 0x77], cl ; ret 0xd6ff
0x0000000000466ea6 : xor byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004419fd : xor byte ptr [rax - 0x7d], cl ; ret 0x4807
0x0000000000410975 : xor byte ptr [rax - 1], cl ; ret
0x0000000000466051 : xor byte ptr [rax - 1], cl ; ret 0x3948
0x0000000000466ce7 : xor byte ptr [rax - 9], cl ; ret
0x000000000043351c : xor byte ptr [rbx + 0x10080], al ; add bh, bh ; ret
0x0000000000457526 : xor byte ptr [rbx + 5], 0x48 ; inc edx ; jmp 0x457512
0x0000000000457666 : xor byte ptr [rbx + 5], 0x48 ; inc edx ; jmp 0x457652
0x0000000000440676 : xor byte ptr [rbx - 0x53ef83e], al ; add ecx, dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0x6348
0x000000000041098d : xor byte ptr [rcx - 0x3f], cl ; call 0xffffffffc44051a3
0x0000000000404641 : xor byte ptr [rdi], cl ; mov bh, 0x51 ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x348
0x000000000047112b : xor byte ptr [rdx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdx] ; call rax
0x000000000040882f : xor byte ptr [rsi + rbp + 0x48], 0x8b ; and byte ptr [r9 + 0x39], cl ; ret 0x1074
0x0000000000410375 : xor cl, byte ptr [rax - 1] ; ret 0x8b9
0x000000000042beac : xor dh, al ; adc byte ptr [rcx + rax], 0 ; add byte ptr [rcx], al ; ret
0x000000000044c070 : xor eax, 0x1a5b ; call rax
0x000000000040482d : xor eax, 1 ; mov byte ptr [rip + 0x156952], al ; ret
0x000000000045005d : xor eax, eax ; jmp 0x450055
0x0000000000452558 : xor eax, eax ; jmp 0x452522
0x0000000000467082 : xor eax, eax ; jmp 0x466e3b
0x0000000000406531 : xor eax, ecx ; mov qword ptr [rsp + 0x18], rax ; ret
0x0000000000478618 : xor ebx, ebx ; jmp 0x478398
0x0000000000463406 : xor ecx, dword ptr [rax + 0x39] ; ret 0x2d75
0x0000000000430ed5 : xor ecx, dword ptr [rax + 0x63] ; ror dword ptr [rax + 0x39], 1 ; ret 0x870f
0x000000000040659e : xor ecx, eax ; mov qword ptr [rsp + 0x18], rcx ; ret
0x00000000004418a3 : xor esi, edi ; dec dword ptr [rdi] ; or ebp, eax ; ret
0x000000000041a181 : xor esi, esi ; jmp 0x419dcf
0x0000000000406530 : xor rax, rcx ; mov qword ptr [rsp + 0x18], rax ; ret
0x000000000040659d : xor rcx, rax ; mov qword ptr [rsp + 0x18], rcx ; ret
0x000000000042beab : xor sil, al ; adc byte ptr [rcx + rax], 0 ; add byte ptr [rcx], al ; ret
0x0000000000486585 : xorps xmm0, xmm0 ; jmp 0x486551
0x0000000000420350 : xorps xmm0, xmm0 ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000042601a : xorps xmm0, xmm0 ; movups xmmword ptr [rsp + 0x10], xmm0 ; ret
0x0000000000486582 : xorps xmm1, xmm1 ; xorps xmm0, xmm0 ; jmp 0x486554

Unique gadgets found: 4029
