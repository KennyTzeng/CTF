
ncu_center:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x643>
 248:	78 38                	js     282 <_init-0x636>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 02                	add    BYTE PTR [rdx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 06                	add    BYTE PTR [rsi],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 18                	add    BYTE PTR [rax],bl
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 e2                	add    dl,ah
 285:	cc                   	int3   
 286:	1e                   	(bad)  
 287:	7a 2c                	jp     2b5 <_init-0x603>
 289:	d8 b7 b3 b3 c6 f3    	fdiv   DWORD PTR [rdi-0xc394c4d]
 28f:	34 8e                	xor    al,0x8e
 291:	a1                   	.byte 0xa1
 292:	d9 1e                	fstp   DWORD PTR [rsi]
 294:	b3 7f                	mov    bl,0x7f
 296:	05                   	.byte 0x5
 297:	47                   	rex.RXB

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	03 00                	add    eax,DWORD PTR [rax]
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	15 00 00 00 01       	adc    eax,0x1000000
 2a1:	00 00                	add    BYTE PTR [rax],al
 2a3:	00 06                	add    BYTE PTR [rsi],al
 2a5:	00 00                	add    BYTE PTR [rax],al
 2a7:	00 88 40 20 01 00    	add    BYTE PTR [rax+0x12040],cl
 2ad:	00 00                	add    BYTE PTR [rax],al
 2af:	08 15 00 00 00 17    	or     BYTE PTR [rip+0x17000000],dl        # 170002b5 <_end+0x16dfe29d>
 2b5:	00 00                	add    BYTE PTR [rax],al
 2b7:	00 00                	add    BYTE PTR [rax],al
 2b9:	00 00                	add    BYTE PTR [rax],al
 2bb:	00 42 45             	add    BYTE PTR [rdx+0x45],al
 2be:	d5                   	(bad)  
 2bf:	ec                   	in     al,dx
 2c0:	bb e3 92 7c d9       	mov    ebx,0xd97c92e3
 2c5:	71 58                	jno    31f <_init-0x599>
 2c7:	1c                   	.byte 0x1c

Disassembly of section .dynsym:

00000000000002c8 <.dynsym>:
	...
 2e4:	03 00                	add    eax,DWORD PTR [rax]
 2e6:	01 00                	add    DWORD PTR [rax],eax
 2e8:	38 02                	cmp    BYTE PTR [rdx],al
	...
 2f6:	00 00                	add    BYTE PTR [rax],al
 2f8:	9f                   	lahf   
 2f9:	00 00                	add    BYTE PTR [rax],al
 2fb:	00 20                	add    BYTE PTR [rax],ah
	...
 30d:	00 00                	add    BYTE PTR [rax],al
 30f:	00 52 00             	add    BYTE PTR [rdx+0x0],dl
 312:	00 00                	add    BYTE PTR [rax],al
 314:	11 00                	adc    DWORD PTR [rax],eax
	...
 326:	00 00                	add    BYTE PTR [rax],al
 328:	32 00                	xor    al,BYTE PTR [rax]
 32a:	00 00                	add    BYTE PTR [rax],al
 32c:	12 00                	adc    al,BYTE PTR [rax]
	...
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	0b 00                	or     eax,DWORD PTR [rax]
 342:	00 00                	add    BYTE PTR [rax],al
 344:	12 00                	adc    al,BYTE PTR [rax]
	...
 356:	00 00                	add    BYTE PTR [rax],al
 358:	16                   	(bad)  
 359:	00 00                	add    BYTE PTR [rax],al
 35b:	00 12                	add    BYTE PTR [rdx],dl
	...
 36d:	00 00                	add    BYTE PTR [rax],al
 36f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 372:	00 00                	add    BYTE PTR [rax],al
 374:	11 00                	adc    DWORD PTR [rax],eax
	...
 386:	00 00                	add    BYTE PTR [rax],al
 388:	3f                   	(bad)  
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 12                	add    BYTE PTR [rdx],dl
	...
 39d:	00 00                	add    BYTE PTR [rax],al
 39f:	00 1b                	add    BYTE PTR [rbx],bl
 3a1:	00 00                	add    BYTE PTR [rax],al
 3a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 3b5:	00 00                	add    BYTE PTR [rax],al
 3b7:	00 38                	add    BYTE PTR [rax],bh
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 3cd:	00 00                	add    BYTE PTR [rax],al
 3cf:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 3d2:	00 00                	add    BYTE PTR [rax],al
 3d4:	12 00                	adc    al,BYTE PTR [rax]
	...
 3e6:	00 00                	add    BYTE PTR [rax],al
 3e8:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 3eb:	00 12                	add    BYTE PTR [rdx],dl
	...
 3fd:	00 00                	add    BYTE PTR [rax],al
 3ff:	00 75 00             	add    BYTE PTR [rbp+0x0],dh
 402:	00 00                	add    BYTE PTR [rax],al
 404:	12 00                	adc    al,BYTE PTR [rax]
	...
 416:	00 00                	add    BYTE PTR [rax],al
 418:	bb 00 00 00 20       	mov    ebx,0x20000000
	...
 42d:	00 00                	add    BYTE PTR [rax],al
 42f:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
 432:	00 00                	add    BYTE PTR [rax],al
 434:	12 00                	adc    al,BYTE PTR [rax]
	...
 446:	00 00                	add    BYTE PTR [rax],al
 448:	ca 00 00             	retf   0x0
 44b:	00 20                	add    BYTE PTR [rax],ah
	...
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 59 00             	add    BYTE PTR [rcx+0x0],bl
 462:	00 00                	add    BYTE PTR [rax],al
 464:	12 00                	adc    al,BYTE PTR [rax]
	...
 476:	00 00                	add    BYTE PTR [rax],al
 478:	33 00                	xor    eax,DWORD PTR [rax]
 47a:	00 00                	add    BYTE PTR [rax],al
 47c:	12 00                	adc    al,BYTE PTR [rax]
	...
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	de 00                	fiadd  WORD PTR [rax]
 492:	00 00                	add    BYTE PTR [rax],al
 494:	20 00                	and    BYTE PTR [rax],al
	...
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	5e                   	pop    rsi
 4a9:	00 00                	add    BYTE PTR [rax],al
 4ab:	00 22                	add    BYTE PTR [rdx],ah
	...
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	00 87 00 00 00 10    	add    BYTE PTR [rdi+0x10000000],al
 4c5:	00 17                	add    BYTE PTR [rdi],dl
 4c7:	00 10                	add    BYTE PTR [rax],dl
 4c9:	20 20                	and    BYTE PTR [rax],ah
	...
 4d7:	00 9a 00 00 00 10    	add    BYTE PTR [rdx+0x10000000],bl
 4dd:	00 18                	add    BYTE PTR [rax],bl
 4df:	00 18                	add    BYTE PTR [rax],bl
 4e1:	20 20                	and    BYTE PTR [rax],ah
	...
 4ef:	00 8e 00 00 00 10    	add    BYTE PTR [rsi+0x10000000],cl
 4f5:	00 18                	add    BYTE PTR [rax],bl
 4f7:	00 10                	add    BYTE PTR [rax],dl
 4f9:	20 20                	and    BYTE PTR [rax],ah
	...

Disassembly of section .dynstr:

0000000000000508 <.dynstr>:
 508:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 50c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 50e:	73 6f                	jae    57f <_init-0x339>
 510:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 515:	72 65                	jb     57c <_init-0x33c>
 517:	61                   	(bad)  
 518:	64 5f                	fs pop rdi
 51a:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 51d:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 520:	74 73                	je     595 <_init-0x323>
 522:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 525:	73 74                	jae    59b <_init-0x31d>
 527:	61                   	(bad)  
 528:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 52b:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 52e:	5f                   	pop    rdi
 52f:	66 61                	data16 (bad) 
 531:	69 6c 00 73 74 64 69 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6e696474
 538:	6e 
 539:	00 5f 65             	add    BYTE PTR [rdi+0x65],bl
 53c:	78 69                	js     5a7 <_init-0x311>
 53e:	74 00                	je     540 <_init-0x378>
 540:	70 72                	jo     5b4 <_init-0x304>
 542:	69 6e 74 66 00 73 74 	imul   ebp,DWORD PTR [rsi+0x74],0x74730066
 549:	72 6c                	jb     5b7 <_init-0x301>
 54b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 54d:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
 550:	6d                   	ins    DWORD PTR es:[rdi],dx
 551:	73 65                	jae    5b8 <_init-0x300>
 553:	74 00                	je     555 <_init-0x363>
 555:	72 65                	jb     5bc <_init-0x2fc>
 557:	61                   	(bad)  
 558:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
 55c:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
 55e:	75 74                	jne    5d4 <_init-0x2e4>
 560:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
 563:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 564:	69 00 5f 5f 63 78    	imul   eax,DWORD PTR [rax],0x78635f5f
 56a:	61                   	(bad)  
 56b:	5f                   	pop    rdi
 56c:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 572:	7a 65                	jp     5d9 <_init-0x2df>
 574:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
 577:	74 76                	je     5ef <_init-0x2c9>
 579:	62                   	(bad)  
 57a:	75 66                	jne    5e2 <_init-0x2d6>
 57c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 57f:	6c                   	ins    BYTE PTR es:[rdi],dx
 580:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 587:	72 74                	jb     5fd <_init-0x2bb>
 589:	5f                   	pop    rdi
 58a:	6d                   	ins    DWORD PTR es:[rdi],dx
 58b:	61                   	(bad)  
 58c:	69 6e 00 5f 65 64 61 	imul   ebp,DWORD PTR [rsi+0x0],0x6164655f
 593:	74 61                	je     5f6 <_init-0x2c2>
 595:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 598:	62 73                	(bad)  
 59a:	73 5f                	jae    5fb <_init-0x2bd>
 59c:	73 74                	jae    612 <_init-0x2a6>
 59e:	61                   	(bad)  
 59f:	72 74                	jb     615 <_init-0x2a3>
 5a1:	00 5f 65             	add    BYTE PTR [rdi+0x65],bl
 5a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 5a5:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
 5a9:	54                   	push   rsp
 5aa:	4d 5f                	rex.WRB pop r15
 5ac:	64 65 72 65          	fs gs jb 615 <_init-0x2a3>
 5b0:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 5b7:	4d 
 5b8:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 5ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 5bc:	65 54                	gs push rsp
 5be:	61                   	(bad)  
 5bf:	62                   	(bad)  
 5c0:	6c                   	ins    BYTE PTR es:[rdi],dx
 5c1:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 5c5:	67 6d                	ins    DWORD PTR es:[edi],dx
 5c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5c8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 5c9:	5f                   	pop    rdi
 5ca:	73 74                	jae    640 <_init-0x278>
 5cc:	61                   	(bad)  
 5cd:	72 74                	jb     643 <_init-0x275>
 5cf:	5f                   	pop    rdi
 5d0:	5f                   	pop    rdi
 5d1:	00 5f 4a             	add    BYTE PTR [rdi+0x4a],bl
 5d4:	76 5f                	jbe    635 <_init-0x283>
 5d6:	52                   	push   rdx
 5d7:	65 67 69 73 74 65 72 	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
 5de:	43 6c 
 5e0:	61                   	(bad)  
 5e1:	73 73                	jae    656 <_init-0x262>
 5e3:	65 73 00             	gs jae 5e6 <_init-0x2d2>
 5e6:	5f                   	pop    rdi
 5e7:	49 54                	rex.WB push r12
 5e9:	4d 5f                	rex.WRB pop r15
 5eb:	72 65                	jb     652 <_init-0x266>
 5ed:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 5f4:	4d 
 5f5:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 5f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 5f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 5f9:	65 54                	gs push rsp
 5fb:	61                   	(bad)  
 5fc:	62                   	(bad)  
 5fd:	6c                   	ins    BYTE PTR es:[rdi],dx
 5fe:	65 00 47 4c          	add    BYTE PTR gs:[rdi+0x4c],al
 602:	49                   	rex.WB
 603:	42                   	rex.X
 604:	43 5f                	rex.XB pop r15
 606:	32 2e                	xor    ch,BYTE PTR [rsi]
 608:	34 00                	xor    al,0x0
 60a:	47                   	rex.RXB
 60b:	4c                   	rex.WR
 60c:	49                   	rex.WB
 60d:	42                   	rex.X
 60e:	43 5f                	rex.XB pop r15
 610:	32 2e                	xor    ch,BYTE PTR [rsi]
 612:	32 2e                	xor    ch,BYTE PTR [rsi]
 614:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000616 <.gnu.version>:
 616:	00 00                	add    BYTE PTR [rax],al
 618:	00 00                	add    BYTE PTR [rax],al
 61a:	00 00                	add    BYTE PTR [rax],al
 61c:	02 00                	add    al,BYTE PTR [rax]
 61e:	02 00                	add    al,BYTE PTR [rax]
 620:	03 00                	add    eax,DWORD PTR [rax]
 622:	02 00                	add    al,BYTE PTR [rax]
 624:	02 00                	add    al,BYTE PTR [rax]
 626:	02 00                	add    al,BYTE PTR [rax]
 628:	03 00                	add    eax,DWORD PTR [rax]
 62a:	02 00                	add    al,BYTE PTR [rax]
 62c:	02 00                	add    al,BYTE PTR [rax]
 62e:	02 00                	add    al,BYTE PTR [rax]
 630:	02 00                	add    al,BYTE PTR [rax]
 632:	00 00                	add    BYTE PTR [rax],al
 634:	02 00                	add    al,BYTE PTR [rax]
 636:	00 00                	add    BYTE PTR [rax],al
 638:	02 00                	add    al,BYTE PTR [rax]
 63a:	02 00                	add    al,BYTE PTR [rax]
 63c:	00 00                	add    BYTE PTR [rax],al
 63e:	02 00                	add    al,BYTE PTR [rax]
 640:	01 00                	add    DWORD PTR [rax],eax
 642:	01 00                	add    DWORD PTR [rax],eax
 644:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

0000000000000648 <.gnu.version_r>:
 648:	01 00                	add    DWORD PTR [rax],eax
 64a:	02 00                	add    al,BYTE PTR [rax]
 64c:	01 00                	add    DWORD PTR [rax],eax
 64e:	00 00                	add    BYTE PTR [rax],al
 650:	10 00                	adc    BYTE PTR [rax],al
 652:	00 00                	add    BYTE PTR [rax],al
 654:	00 00                	add    BYTE PTR [rax],al
 656:	00 00                	add    BYTE PTR [rax],al
 658:	14 69                	adc    al,0x69
 65a:	69 0d 00 00 03 00 f8 	imul   ecx,DWORD PTR [rip+0x30000],0xf8        # 30664 <__FRAME_END__+0x2f18c>
 661:	00 00 00 
 664:	10 00                	adc    BYTE PTR [rax],al
 666:	00 00                	add    BYTE PTR [rax],al
 668:	75 1a                	jne    684 <_init-0x234>
 66a:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 670:	02 01                	add    al,BYTE PTR [rcx]
 672:	00 00                	add    BYTE PTR [rax],al
 674:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000678 <.rela.dyn>:
 678:	38 1d 20 00 00 00    	cmp    BYTE PTR [rip+0x20],bl        # 69e <_init-0x21a>
 67e:	00 00                	add    BYTE PTR [rax],al
 680:	08 00                	or     BYTE PTR [rax],al
 682:	00 00                	add    BYTE PTR [rax],al
 684:	00 00                	add    BYTE PTR [rax],al
 686:	00 00                	add    BYTE PTR [rax],al
 688:	b0 0a                	mov    al,0xa
 68a:	00 00                	add    BYTE PTR [rax],al
 68c:	00 00                	add    BYTE PTR [rax],al
 68e:	00 00                	add    BYTE PTR [rax],al
 690:	40 1d 20 00 00 00    	rex sbb eax,0x20
 696:	00 00                	add    BYTE PTR [rax],al
 698:	08 00                	or     BYTE PTR [rax],al
 69a:	00 00                	add    BYTE PTR [rax],al
 69c:	00 00                	add    BYTE PTR [rax],al
 69e:	00 00                	add    BYTE PTR [rax],al
 6a0:	70 0a                	jo     6ac <_init-0x20c>
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	00 00                	add    BYTE PTR [rax],al
 6a6:	00 00                	add    BYTE PTR [rax],al
 6a8:	08 20                	or     BYTE PTR [rax],ah
 6aa:	20 00                	and    BYTE PTR [rax],al
 6ac:	00 00                	add    BYTE PTR [rax],al
 6ae:	00 00                	add    BYTE PTR [rax],al
 6b0:	08 00                	or     BYTE PTR [rax],al
 6b2:	00 00                	add    BYTE PTR [rax],al
 6b4:	00 00                	add    BYTE PTR [rax],al
 6b6:	00 00                	add    BYTE PTR [rax],al
 6b8:	08 20                	or     BYTE PTR [rax],ah
 6ba:	20 00                	and    BYTE PTR [rax],al
 6bc:	00 00                	add    BYTE PTR [rax],al
 6be:	00 00                	add    BYTE PTR [rax],al
 6c0:	c8 1f 20 00          	enter  0x201f,0x0
 6c4:	00 00                	add    BYTE PTR [rax],al
 6c6:	00 00                	add    BYTE PTR [rax],al
 6c8:	06                   	(bad)  
 6c9:	00 00                	add    BYTE PTR [rax],al
 6cb:	00 02                	add    BYTE PTR [rdx],al
	...
 6d5:	00 00                	add    BYTE PTR [rax],al
 6d7:	00 d0                	add    al,dl
 6d9:	1f                   	(bad)  
 6da:	20 00                	and    BYTE PTR [rax],al
 6dc:	00 00                	add    BYTE PTR [rax],al
 6de:	00 00                	add    BYTE PTR [rax],al
 6e0:	06                   	(bad)  
 6e1:	00 00                	add    BYTE PTR [rax],al
 6e3:	00 03                	add    BYTE PTR [rbx],al
	...
 6ed:	00 00                	add    BYTE PTR [rax],al
 6ef:	00 d8                	add    al,bl
 6f1:	1f                   	(bad)  
 6f2:	20 00                	and    BYTE PTR [rax],al
 6f4:	00 00                	add    BYTE PTR [rax],al
 6f6:	00 00                	add    BYTE PTR [rax],al
 6f8:	06                   	(bad)  
 6f9:	00 00                	add    BYTE PTR [rax],al
 6fb:	00 07                	add    BYTE PTR [rdi],al
	...
 705:	00 00                	add    BYTE PTR [rax],al
 707:	00 e0                	add    al,ah
 709:	1f                   	(bad)  
 70a:	20 00                	and    BYTE PTR [rax],al
 70c:	00 00                	add    BYTE PTR [rax],al
 70e:	00 00                	add    BYTE PTR [rax],al
 710:	06                   	(bad)  
 711:	00 00                	add    BYTE PTR [rax],al
 713:	00 0e                	add    BYTE PTR [rsi],cl
	...
 71d:	00 00                	add    BYTE PTR [rax],al
 71f:	00 e8                	add    al,ch
 721:	1f                   	(bad)  
 722:	20 00                	and    BYTE PTR [rax],al
 724:	00 00                	add    BYTE PTR [rax],al
 726:	00 00                	add    BYTE PTR [rax],al
 728:	06                   	(bad)  
 729:	00 00                	add    BYTE PTR [rax],al
 72b:	00 10                	add    BYTE PTR [rax],dl
	...
 735:	00 00                	add    BYTE PTR [rax],al
 737:	00 f0                	add    al,dh
 739:	1f                   	(bad)  
 73a:	20 00                	and    BYTE PTR [rax],al
 73c:	00 00                	add    BYTE PTR [rax],al
 73e:	00 00                	add    BYTE PTR [rax],al
 740:	06                   	(bad)  
 741:	00 00                	add    BYTE PTR [rax],al
 743:	00 13                	add    BYTE PTR [rbx],dl
	...
 74d:	00 00                	add    BYTE PTR [rax],al
 74f:	00 f8                	add    al,bh
 751:	1f                   	(bad)  
 752:	20 00                	and    BYTE PTR [rax],al
 754:	00 00                	add    BYTE PTR [rax],al
 756:	00 00                	add    BYTE PTR [rax],al
 758:	06                   	(bad)  
 759:	00 00                	add    BYTE PTR [rax],al
 75b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...

Disassembly of section .rela.plt:

0000000000000768 <.rela.plt>:
 768:	58                   	pop    rax
 769:	1f                   	(bad)  
 76a:	20 00                	and    BYTE PTR [rax],al
 76c:	00 00                	add    BYTE PTR [rax],al
 76e:	00 00                	add    BYTE PTR [rax],al
 770:	07                   	(bad)  
 771:	00 00                	add    BYTE PTR [rax],al
 773:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 77e:	00 00                	add    BYTE PTR [rax],al
 780:	60                   	(bad)  
 781:	1f                   	(bad)  
 782:	20 00                	and    BYTE PTR [rax],al
 784:	00 00                	add    BYTE PTR [rax],al
 786:	00 00                	add    BYTE PTR [rax],al
 788:	07                   	(bad)  
 789:	00 00                	add    BYTE PTR [rax],al
 78b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 791 <_init-0x127>
 791:	00 00                	add    BYTE PTR [rax],al
 793:	00 00                	add    BYTE PTR [rax],al
 795:	00 00                	add    BYTE PTR [rax],al
 797:	00 68 1f             	add    BYTE PTR [rax+0x1f],ch
 79a:	20 00                	and    BYTE PTR [rax],al
 79c:	00 00                	add    BYTE PTR [rax],al
 79e:	00 00                	add    BYTE PTR [rax],al
 7a0:	07                   	(bad)  
 7a1:	00 00                	add    BYTE PTR [rax],al
 7a3:	00 06                	add    BYTE PTR [rsi],al
	...
 7ad:	00 00                	add    BYTE PTR [rax],al
 7af:	00 70 1f             	add    BYTE PTR [rax+0x1f],dh
 7b2:	20 00                	and    BYTE PTR [rax],al
 7b4:	00 00                	add    BYTE PTR [rax],al
 7b6:	00 00                	add    BYTE PTR [rax],al
 7b8:	07                   	(bad)  
 7b9:	00 00                	add    BYTE PTR [rax],al
 7bb:	00 08                	add    BYTE PTR [rax],cl
	...
 7c5:	00 00                	add    BYTE PTR [rax],al
 7c7:	00 78 1f             	add    BYTE PTR [rax+0x1f],bh
 7ca:	20 00                	and    BYTE PTR [rax],al
 7cc:	00 00                	add    BYTE PTR [rax],al
 7ce:	00 00                	add    BYTE PTR [rax],al
 7d0:	07                   	(bad)  
 7d1:	00 00                	add    BYTE PTR [rax],al
 7d3:	00 09                	add    BYTE PTR [rcx],cl
	...
 7dd:	00 00                	add    BYTE PTR [rax],al
 7df:	00 80 1f 20 00 00    	add    BYTE PTR [rax+0x201f],al
 7e5:	00 00                	add    BYTE PTR [rax],al
 7e7:	00 07                	add    BYTE PTR [rdi],al
 7e9:	00 00                	add    BYTE PTR [rax],al
 7eb:	00 0a                	add    BYTE PTR [rdx],cl
	...
 7f5:	00 00                	add    BYTE PTR [rax],al
 7f7:	00 88 1f 20 00 00    	add    BYTE PTR [rax+0x201f],cl
 7fd:	00 00                	add    BYTE PTR [rax],al
 7ff:	00 07                	add    BYTE PTR [rdi],al
 801:	00 00                	add    BYTE PTR [rax],al
 803:	00 0b                	add    BYTE PTR [rbx],cl
	...
 80d:	00 00                	add    BYTE PTR [rax],al
 80f:	00 90 1f 20 00 00    	add    BYTE PTR [rax+0x201f],dl
 815:	00 00                	add    BYTE PTR [rax],al
 817:	00 07                	add    BYTE PTR [rdi],al
 819:	00 00                	add    BYTE PTR [rax],al
 81b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 826:	00 00                	add    BYTE PTR [rax],al
 828:	98                   	cwde   
 829:	1f                   	(bad)  
 82a:	20 00                	and    BYTE PTR [rax],al
 82c:	00 00                	add    BYTE PTR [rax],al
 82e:	00 00                	add    BYTE PTR [rax],al
 830:	07                   	(bad)  
 831:	00 00                	add    BYTE PTR [rax],al
 833:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 839 <_init-0x7f>
 839:	00 00                	add    BYTE PTR [rax],al
 83b:	00 00                	add    BYTE PTR [rax],al
 83d:	00 00                	add    BYTE PTR [rax],al
 83f:	00 a0 1f 20 00 00    	add    BYTE PTR [rax+0x201f],ah
 845:	00 00                	add    BYTE PTR [rax],al
 847:	00 07                	add    BYTE PTR [rdi],al
 849:	00 00                	add    BYTE PTR [rax],al
 84b:	00 0e                	add    BYTE PTR [rsi],cl
	...
 855:	00 00                	add    BYTE PTR [rax],al
 857:	00 a8 1f 20 00 00    	add    BYTE PTR [rax+0x201f],ch
 85d:	00 00                	add    BYTE PTR [rax],al
 85f:	00 07                	add    BYTE PTR [rdi],al
 861:	00 00                	add    BYTE PTR [rax],al
 863:	00 0f                	add    BYTE PTR [rdi],cl
	...
 86d:	00 00                	add    BYTE PTR [rax],al
 86f:	00 b0 1f 20 00 00    	add    BYTE PTR [rax+0x201f],dh
 875:	00 00                	add    BYTE PTR [rax],al
 877:	00 07                	add    BYTE PTR [rdi],al
 879:	00 00                	add    BYTE PTR [rax],al
 87b:	00 11                	add    BYTE PTR [rcx],dl
	...
 885:	00 00                	add    BYTE PTR [rax],al
 887:	00 b8 1f 20 00 00    	add    BYTE PTR [rax+0x201f],bh
 88d:	00 00                	add    BYTE PTR [rax],al
 88f:	00 07                	add    BYTE PTR [rdi],al
 891:	00 00                	add    BYTE PTR [rax],al
 893:	00 12                	add    BYTE PTR [rdx],dl
	...
 89d:	00 00                	add    BYTE PTR [rax],al
 89f:	00 c0                	add    al,al
 8a1:	1f                   	(bad)  
 8a2:	20 00                	and    BYTE PTR [rax],al
 8a4:	00 00                	add    BYTE PTR [rax],al
 8a6:	00 00                	add    BYTE PTR [rax],al
 8a8:	07                   	(bad)  
 8a9:	00 00                	add    BYTE PTR [rax],al
 8ab:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...

Disassembly of section .init:

00000000000008b8 <_init>:
 8b8:	48 83 ec 08          	sub    rsp,0x8
 8bc:	48 8b 05 1d 17 20 00 	mov    rax,QWORD PTR [rip+0x20171d]        # 201fe0 <_GLOBAL_OFFSET_TABLE_+0xa0>
 8c3:	48 85 c0             	test   rax,rax
 8c6:	74 05                	je     8cd <_init+0x15>
 8c8:	e8 b3 00 00 00       	call   980 <__gmon_start__@plt>
 8cd:	48 83 c4 08          	add    rsp,0x8
 8d1:	c3                   	ret    

Disassembly of section .plt:

00000000000008e0 <_exit@plt-0x10>:
 8e0:	ff 35 62 16 20 00    	push   QWORD PTR [rip+0x201662]        # 201f48 <_GLOBAL_OFFSET_TABLE_+0x8>
 8e6:	ff 25 64 16 20 00    	jmp    QWORD PTR [rip+0x201664]        # 201f50 <_GLOBAL_OFFSET_TABLE_+0x10>
 8ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000008f0 <_exit@plt>:
 8f0:	ff 25 62 16 20 00    	jmp    QWORD PTR [rip+0x201662]        # 201f58 <_GLOBAL_OFFSET_TABLE_+0x18>
 8f6:	68 00 00 00 00       	push   0x0
 8fb:	e9 e0 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000900 <__read_chk@plt>:
 900:	ff 25 5a 16 20 00    	jmp    QWORD PTR [rip+0x20165a]        # 201f60 <_GLOBAL_OFFSET_TABLE_+0x20>
 906:	68 01 00 00 00       	push   0x1
 90b:	e9 d0 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000910 <puts@plt>:
 910:	ff 25 52 16 20 00    	jmp    QWORD PTR [rip+0x201652]        # 201f68 <_GLOBAL_OFFSET_TABLE_+0x28>
 916:	68 02 00 00 00       	push   0x2
 91b:	e9 c0 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000920 <strlen@plt>:
 920:	ff 25 4a 16 20 00    	jmp    QWORD PTR [rip+0x20164a]        # 201f70 <_GLOBAL_OFFSET_TABLE_+0x30>
 926:	68 03 00 00 00       	push   0x3
 92b:	e9 b0 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000930 <__stack_chk_fail@plt>:
 930:	ff 25 42 16 20 00    	jmp    QWORD PTR [rip+0x201642]        # 201f78 <_GLOBAL_OFFSET_TABLE_+0x38>
 936:	68 04 00 00 00       	push   0x4
 93b:	e9 a0 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000940 <printf@plt>:
 940:	ff 25 3a 16 20 00    	jmp    QWORD PTR [rip+0x20163a]        # 201f80 <_GLOBAL_OFFSET_TABLE_+0x40>
 946:	68 05 00 00 00       	push   0x5
 94b:	e9 90 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000950 <memset@plt>:
 950:	ff 25 32 16 20 00    	jmp    QWORD PTR [rip+0x201632]        # 201f88 <_GLOBAL_OFFSET_TABLE_+0x48>
 956:	68 06 00 00 00       	push   0x6
 95b:	e9 80 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000960 <read@plt>:
 960:	ff 25 2a 16 20 00    	jmp    QWORD PTR [rip+0x20162a]        # 201f90 <_GLOBAL_OFFSET_TABLE_+0x50>
 966:	68 07 00 00 00       	push   0x7
 96b:	e9 70 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000970 <__libc_start_main@plt>:
 970:	ff 25 22 16 20 00    	jmp    QWORD PTR [rip+0x201622]        # 201f98 <_GLOBAL_OFFSET_TABLE_+0x58>
 976:	68 08 00 00 00       	push   0x8
 97b:	e9 60 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000980 <__gmon_start__@plt>:
 980:	ff 25 1a 16 20 00    	jmp    QWORD PTR [rip+0x20161a]        # 201fa0 <_GLOBAL_OFFSET_TABLE_+0x60>
 986:	68 09 00 00 00       	push   0x9
 98b:	e9 50 ff ff ff       	jmp    8e0 <_init+0x28>

0000000000000990 <setvbuf@plt>:
 990:	ff 25 12 16 20 00    	jmp    QWORD PTR [rip+0x201612]        # 201fa8 <_GLOBAL_OFFSET_TABLE_+0x68>
 996:	68 0a 00 00 00       	push   0xa
 99b:	e9 40 ff ff ff       	jmp    8e0 <_init+0x28>

00000000000009a0 <atoi@plt>:
 9a0:	ff 25 0a 16 20 00    	jmp    QWORD PTR [rip+0x20160a]        # 201fb0 <_GLOBAL_OFFSET_TABLE_+0x70>
 9a6:	68 0b 00 00 00       	push   0xb
 9ab:	e9 30 ff ff ff       	jmp    8e0 <_init+0x28>

00000000000009b0 <exit@plt>:
 9b0:	ff 25 02 16 20 00    	jmp    QWORD PTR [rip+0x201602]        # 201fb8 <_GLOBAL_OFFSET_TABLE_+0x78>
 9b6:	68 0c 00 00 00       	push   0xc
 9bb:	e9 20 ff ff ff       	jmp    8e0 <_init+0x28>

00000000000009c0 <__cxa_finalize@plt>:
 9c0:	ff 25 fa 15 20 00    	jmp    QWORD PTR [rip+0x2015fa]        # 201fc0 <_GLOBAL_OFFSET_TABLE_+0x80>
 9c6:	68 0d 00 00 00       	push   0xd
 9cb:	e9 10 ff ff ff       	jmp    8e0 <_init+0x28>

Disassembly of section .text:

00000000000009d0 <_start>:
     9d0:	31 ed                	xor    ebp,ebp
     9d2:	49 89 d1             	mov    r9,rdx
     9d5:	5e                   	pop    rsi
     9d6:	48 89 e2             	mov    rdx,rsp
     9d9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
     9dd:	50                   	push   rax
     9de:	54                   	push   rsp
     9df:	4c 8d 05 ea 06 00 00 	lea    r8,[rip+0x6ea]        # 10d0 <__libc_csu_fini>
     9e6:	48 8d 0d 73 06 00 00 	lea    rcx,[rip+0x673]        # 1060 <__libc_csu_init>
     9ed:	48 8d 3d 68 02 00 00 	lea    rdi,[rip+0x268]        # c5c <main>
     9f4:	e8 77 ff ff ff       	call   970 <__libc_start_main@plt>
     9f9:	f4                   	hlt    
     9fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000a00 <deregister_tm_clones>:
     a00:	48 8d 05 10 16 20 00 	lea    rax,[rip+0x201610]        # 202017 <__TMC_END__+0x7>
     a07:	48 8d 3d 02 16 20 00 	lea    rdi,[rip+0x201602]        # 202010 <__TMC_END__>
     a0e:	55                   	push   rbp
     a0f:	48 29 f8             	sub    rax,rdi
     a12:	48 89 e5             	mov    rbp,rsp
     a15:	48 83 f8 0e          	cmp    rax,0xe
     a19:	77 02                	ja     a1d <deregister_tm_clones+0x1d>
     a1b:	5d                   	pop    rbp
     a1c:	c3                   	ret    
     a1d:	48 8b 05 a4 15 20 00 	mov    rax,QWORD PTR [rip+0x2015a4]        # 201fc8 <_GLOBAL_OFFSET_TABLE_+0x88>
     a24:	48 85 c0             	test   rax,rax
     a27:	74 f2                	je     a1b <deregister_tm_clones+0x1b>
     a29:	5d                   	pop    rbp
     a2a:	ff e0                	jmp    rax
     a2c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000a30 <register_tm_clones>:
     a30:	48 8d 05 d9 15 20 00 	lea    rax,[rip+0x2015d9]        # 202010 <__TMC_END__>
     a37:	48 8d 3d d2 15 20 00 	lea    rdi,[rip+0x2015d2]        # 202010 <__TMC_END__>
     a3e:	55                   	push   rbp
     a3f:	48 29 f8             	sub    rax,rdi
     a42:	48 89 e5             	mov    rbp,rsp
     a45:	48 c1 f8 03          	sar    rax,0x3
     a49:	48 89 c2             	mov    rdx,rax
     a4c:	48 c1 ea 3f          	shr    rdx,0x3f
     a50:	48 01 d0             	add    rax,rdx
     a53:	48 d1 f8             	sar    rax,1
     a56:	75 02                	jne    a5a <register_tm_clones+0x2a>
     a58:	5d                   	pop    rbp
     a59:	c3                   	ret    
     a5a:	48 8b 15 8f 15 20 00 	mov    rdx,QWORD PTR [rip+0x20158f]        # 201ff0 <_GLOBAL_OFFSET_TABLE_+0xb0>
     a61:	48 85 d2             	test   rdx,rdx
     a64:	74 f2                	je     a58 <register_tm_clones+0x28>
     a66:	5d                   	pop    rbp
     a67:	48 89 c6             	mov    rsi,rax
     a6a:	ff e2                	jmp    rdx
     a6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000a70 <__do_global_dtors_aux>:
     a70:	80 3d 99 15 20 00 00 	cmp    BYTE PTR [rip+0x201599],0x0        # 202010 <__TMC_END__>
     a77:	75 27                	jne    aa0 <__do_global_dtors_aux+0x30>
     a79:	48 83 3d 77 15 20 00 	cmp    QWORD PTR [rip+0x201577],0x0        # 201ff8 <_GLOBAL_OFFSET_TABLE_+0xb8>
     a80:	00 
     a81:	55                   	push   rbp
     a82:	48 89 e5             	mov    rbp,rsp
     a85:	74 0c                	je     a93 <__do_global_dtors_aux+0x23>
     a87:	48 8b 3d 7a 15 20 00 	mov    rdi,QWORD PTR [rip+0x20157a]        # 202008 <__dso_handle>
     a8e:	e8 2d ff ff ff       	call   9c0 <__cxa_finalize@plt>
     a93:	e8 68 ff ff ff       	call   a00 <deregister_tm_clones>
     a98:	5d                   	pop    rbp
     a99:	c6 05 70 15 20 00 01 	mov    BYTE PTR [rip+0x201570],0x1        # 202010 <__TMC_END__>
     aa0:	f3 c3                	repz ret 
     aa2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nop WORD PTR cs:[rax+rax*1+0x0]
     aa9:	1f 84 00 00 00 00 00 

0000000000000ab0 <frame_dummy>:
     ab0:	48 83 3d 90 12 20 00 	cmp    QWORD PTR [rip+0x201290],0x0        # 201d48 <__JCR_END__>
     ab7:	00 
     ab8:	74 26                	je     ae0 <frame_dummy+0x30>
     aba:	48 8b 05 27 15 20 00 	mov    rax,QWORD PTR [rip+0x201527]        # 201fe8 <_GLOBAL_OFFSET_TABLE_+0xa8>
     ac1:	48 85 c0             	test   rax,rax
     ac4:	74 1a                	je     ae0 <frame_dummy+0x30>
     ac6:	55                   	push   rbp
     ac7:	48 8d 3d 7a 12 20 00 	lea    rdi,[rip+0x20127a]        # 201d48 <__JCR_END__>
     ace:	48 89 e5             	mov    rbp,rsp
     ad1:	ff d0                	call   rax
     ad3:	5d                   	pop    rbp
     ad4:	e9 57 ff ff ff       	jmp    a30 <register_tm_clones>
     ad9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
     ae0:	e9 4b ff ff ff       	jmp    a30 <register_tm_clones>

0000000000000ae5 <menu>:
     ae5:	55                   	push   rbp
     ae6:	48 89 e5             	mov    rbp,rsp
     ae9:	48 83 ec 10          	sub    rsp,0x10
     aed:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
     af4:	00 00 
     af6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
     afa:	31 c0                	xor    eax,eax
     afc:	48 8d 3d e5 05 00 00 	lea    rdi,[rip+0x5e5]        # 10e8 <_IO_stdin_used+0x8>
     b03:	e8 08 fe ff ff       	call   910 <puts@plt>
     b08:	48 8d 3d f5 05 00 00 	lea    rdi,[rip+0x5f5]        # 1104 <_IO_stdin_used+0x24>
     b0f:	e8 fc fd ff ff       	call   910 <puts@plt>
     b14:	48 8d 3d f8 05 00 00 	lea    rdi,[rip+0x5f8]        # 1113 <_IO_stdin_used+0x33>
     b1b:	e8 f0 fd ff ff       	call   910 <puts@plt>
     b20:	48 8d 3d fa 05 00 00 	lea    rdi,[rip+0x5fa]        # 1121 <_IO_stdin_used+0x41>
     b27:	e8 e4 fd ff ff       	call   910 <puts@plt>
     b2c:	48 8d 3d fb 05 00 00 	lea    rdi,[rip+0x5fb]        # 112e <_IO_stdin_used+0x4e>
     b33:	e8 d8 fd ff ff       	call   910 <puts@plt>
     b38:	48 8d 3d fc 05 00 00 	lea    rdi,[rip+0x5fc]        # 113b <_IO_stdin_used+0x5b>
     b3f:	e8 cc fd ff ff       	call   910 <puts@plt>
     b44:	48 8d 3d 9d 05 00 00 	lea    rdi,[rip+0x59d]        # 10e8 <_IO_stdin_used+0x8>
     b4b:	e8 c0 fd ff ff       	call   910 <puts@plt>
     b50:	48 8d 3d ec 05 00 00 	lea    rdi,[rip+0x5ec]        # 1143 <_IO_stdin_used+0x63>
     b57:	e8 b4 fd ff ff       	call   910 <puts@plt>
     b5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
     b60:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
     b67:	00 00 
     b69:	74 05                	je     b70 <menu+0x8b>
     b6b:	e8 c0 fd ff ff       	call   930 <__stack_chk_fail@plt>
     b70:	c9                   	leave  
     b71:	c3                   	ret    

0000000000000b72 <read_int>:
     b72:	55                   	push   rbp
     b73:	48 89 e5             	mov    rbp,rsp
     b76:	53                   	push   rbx
     b77:	48 83 ec 28          	sub    rsp,0x28
     b7b:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
     b82:	00 00 
     b84:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
     b88:	31 c0                	xor    eax,eax
     b8a:	48 8d 45 d0          	lea    rax,[rbp-0x30]
     b8e:	b9 10 00 00 00       	mov    ecx,0x10
     b93:	ba 0f 00 00 00       	mov    edx,0xf
     b98:	48 89 c6             	mov    rsi,rax
     b9b:	bf 00 00 00 00       	mov    edi,0x0
     ba0:	b8 00 00 00 00       	mov    eax,0x0
     ba5:	e8 56 fd ff ff       	call   900 <__read_chk@plt>
     baa:	85 c0                	test   eax,eax
     bac:	7f 16                	jg     bc4 <read_int+0x52>
     bae:	48 8d 3d 9b 05 00 00 	lea    rdi,[rip+0x59b]        # 1150 <_IO_stdin_used+0x70>
     bb5:	e8 56 fd ff ff       	call   910 <puts@plt>
     bba:	bf 01 00 00 00       	mov    edi,0x1
     bbf:	e8 2c fd ff ff       	call   8f0 <_exit@plt>
     bc4:	48 8d 45 d0          	lea    rax,[rbp-0x30]
     bc8:	48 89 c7             	mov    rdi,rax
     bcb:	e8 d0 fd ff ff       	call   9a0 <atoi@plt>
     bd0:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
     bd4:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
     bdb:	00 00 
     bdd:	74 05                	je     be4 <read_int+0x72>
     bdf:	e8 4c fd ff ff       	call   930 <__stack_chk_fail@plt>
     be4:	48 83 c4 28          	add    rsp,0x28
     be8:	5b                   	pop    rbx
     be9:	5d                   	pop    rbp
     bea:	c3                   	ret    

0000000000000beb <echo>:
     beb:	55                   	push   rbp
     bec:	48 89 e5             	mov    rbp,rsp
     bef:	48 83 c4 80          	add    rsp,0xffffffffffffff80
     bf3:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
     bfa:	00 00 
     bfc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
     c00:	31 c0                	xor    eax,eax
     c02:	48 8d 3d 52 05 00 00 	lea    rdi,[rip+0x552]        # 115b <_IO_stdin_used+0x7b>
     c09:	b8 00 00 00 00       	mov    eax,0x0
     c0e:	e8 2d fd ff ff       	call   940 <printf@plt>
     c13:	48 8d 45 80          	lea    rax,[rbp-0x80]
     c17:	ba 70 00 00 00       	mov    edx,0x70
     c1c:	48 89 c6             	mov    rsi,rax
     c1f:	bf 00 00 00 00       	mov    edi,0x0
     c24:	b8 00 00 00 00       	mov    eax,0x0
     c29:	e8 32 fd ff ff       	call   960 <read@plt>
     c2e:	48 8d 45 80          	lea    rax,[rbp-0x80]
     c32:	48 89 c6             	mov    rsi,rax
     c35:	48 8d 3d 38 05 00 00 	lea    rdi,[rip+0x538]        # 1174 <_IO_stdin_used+0x94>
     c3c:	b8 00 00 00 00       	mov    eax,0x0
     c41:	e8 fa fc ff ff       	call   940 <printf@plt>
     c46:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
     c4a:	64 48 33 04 25 28 00 	xor    rax,QWORD PTR fs:0x28
     c51:	00 00 
     c53:	74 05                	je     c5a <echo+0x6f>
     c55:	e8 d6 fc ff ff       	call   930 <__stack_chk_fail@plt>
     c5a:	c9                   	leave  
     c5b:	c3                   	ret    

0000000000000c5c <main>:
     c5c:	55                   	push   rbp
     c5d:	48 89 e5             	mov    rbp,rsp
     c60:	53                   	push   rbx
     c61:	48 83 ec 58          	sub    rsp,0x58
     c65:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
     c6c:	00 00 
     c6e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
     c72:	31 c0                	xor    eax,eax
     c74:	48 8b 05 55 13 20 00 	mov    rax,QWORD PTR [rip+0x201355]        # 201fd0 <_GLOBAL_OFFSET_TABLE_+0x90>
     c7b:	48 8b 00             	mov    rax,QWORD PTR [rax]
     c7e:	b9 00 00 00 00       	mov    ecx,0x0
     c83:	ba 02 00 00 00       	mov    edx,0x2
     c88:	be 00 00 00 00       	mov    esi,0x0
     c8d:	48 89 c7             	mov    rdi,rax
     c90:	e8 fb fc ff ff       	call   990 <setvbuf@plt>
     c95:	48 8b 05 3c 13 20 00 	mov    rax,QWORD PTR [rip+0x20133c]        # 201fd8 <_GLOBAL_OFFSET_TABLE_+0x98>
     c9c:	48 8b 00             	mov    rax,QWORD PTR [rax]
     c9f:	b9 00 00 00 00       	mov    ecx,0x0
     ca4:	ba 02 00 00 00       	mov    edx,0x2
     ca9:	be 00 00 00 00       	mov    esi,0x0
     cae:	48 89 c7             	mov    rdi,rax
     cb1:	e8 da fc ff ff       	call   990 <setvbuf@plt>
     cb6:	48 8d 3d c5 04 00 00 	lea    rdi,[rip+0x4c5]        # 1182 <_IO_stdin_used+0xa2>
     cbd:	e8 4e fc ff ff       	call   910 <puts@plt>
     cc2:	48 8d 45 b0          	lea    rax,[rbp-0x50]
     cc6:	ba 30 00 00 00       	mov    edx,0x30
     ccb:	be 00 00 00 00       	mov    esi,0x0
     cd0:	48 89 c7             	mov    rdi,rax
     cd3:	e8 78 fc ff ff       	call   950 <memset@plt>
     cd8:	c7 45 a0 10 00 00 00 	mov    DWORD PTR [rbp-0x60],0x10
     cdf:	b8 00 00 00 00       	mov    eax,0x0
     ce4:	e8 fc fd ff ff       	call   ae5 <menu>
     ce9:	b8 00 00 00 00       	mov    eax,0x0
     cee:	e8 7f fe ff ff       	call   b72 <read_int>
     cf3:	89 45 a8             	mov    DWORD PTR [rbp-0x58],eax
     cf6:	83 7d a8 05          	cmp    DWORD PTR [rbp-0x58],0x5
     cfa:	0f 87 41 03 00 00    	ja     1041 <main+0x3e5>
     d00:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
     d03:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
     d0a:	00 
     d0b:	48 8d 05 02 06 00 00 	lea    rax,[rip+0x602]        # 1314 <_IO_stdin_used+0x234>
     d12:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
     d15:	48 63 d0             	movsxd rdx,eax
     d18:	48 8d 05 f5 05 00 00 	lea    rax,[rip+0x5f5]        # 1314 <_IO_stdin_used+0x234>
     d1f:	48 01 d0             	add    rax,rdx
     d22:	ff e0                	jmp    rax
     d24:	b8 00 00 00 00       	mov    eax,0x0
     d29:	e8 bd fe ff ff       	call   beb <echo>
     d2e:	e9 1b 03 00 00       	jmp    104e <main+0x3f2>
     d33:	48 8d 3d 5e 04 00 00 	lea    rdi,[rip+0x45e]        # 1198 <_IO_stdin_used+0xb8>
     d3a:	b8 00 00 00 00       	mov    eax,0x0
     d3f:	e8 fc fb ff ff       	call   940 <printf@plt>
     d44:	b8 00 00 00 00       	mov    eax,0x0
     d49:	e8 24 fe ff ff       	call   b72 <read_int>
     d4e:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
     d51:	83 7d ac 00          	cmp    DWORD PTR [rbp-0x54],0x0
     d55:	7e 06                	jle    d5d <main+0x101>
     d57:	83 7d ac 03          	cmp    DWORD PTR [rbp-0x54],0x3
     d5b:	7e 16                	jle    d73 <main+0x117>
     d5d:	48 8d 3d 64 04 00 00 	lea    rdi,[rip+0x464]        # 11c8 <_IO_stdin_used+0xe8>
     d64:	e8 a7 fb ff ff       	call   910 <puts@plt>
     d69:	bf 00 00 00 00       	mov    edi,0x0
     d6e:	e8 3d fc ff ff       	call   9b0 <exit@plt>
     d73:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     d76:	89 c6                	mov    esi,eax
     d78:	48 8d 3d 51 04 00 00 	lea    rdi,[rip+0x451]        # 11d0 <_IO_stdin_used+0xf0>
     d7f:	b8 00 00 00 00       	mov    eax,0x0
     d84:	e8 b7 fb ff ff       	call   940 <printf@plt>
     d89:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     d8c:	8d 50 ff             	lea    edx,[rax-0x1]
     d8f:	48 8d 45 b0          	lea    rax,[rbp-0x50]
     d93:	48 63 d2             	movsxd rdx,edx
     d96:	48 c1 e2 04          	shl    rdx,0x4
     d9a:	48 01 d0             	add    rax,rdx
     d9d:	ba 10 00 00 00       	mov    edx,0x10
     da2:	48 89 c6             	mov    rsi,rax
     da5:	bf 00 00 00 00       	mov    edi,0x0
     daa:	b8 00 00 00 00       	mov    eax,0x0
     daf:	e8 ac fb ff ff       	call   960 <read@plt>
     db4:	c7 45 a4 09 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x9
     dbb:	eb 50                	jmp    e0d <main+0x1b1>
     dbd:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     dc0:	8d 50 ff             	lea    edx,[rax-0x1]
     dc3:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
     dc6:	48 98                	cdqe   
     dc8:	48 63 d2             	movsxd rdx,edx
     dcb:	48 c1 e2 04          	shl    rdx,0x4
     dcf:	48 8d 5d f0          	lea    rbx,[rbp-0x10]
     dd3:	48 01 da             	add    rdx,rbx
     dd6:	48 01 d0             	add    rax,rdx
     dd9:	48 83 e8 40          	sub    rax,0x40
     ddd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
     de0:	3c 0a                	cmp    al,0xa
     de2:	75 25                	jne    e09 <main+0x1ad>
     de4:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     de7:	8d 50 ff             	lea    edx,[rax-0x1]
     dea:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
     ded:	48 98                	cdqe   
     def:	48 63 d2             	movsxd rdx,edx
     df2:	48 c1 e2 04          	shl    rdx,0x4
     df6:	48 8d 4d f0          	lea    rcx,[rbp-0x10]
     dfa:	48 01 ca             	add    rdx,rcx
     dfd:	48 01 d0             	add    rax,rdx
     e00:	48 83 e8 40          	sub    rax,0x40
     e04:	c6 00 00             	mov    BYTE PTR [rax],0x0
     e07:	eb 0a                	jmp    e13 <main+0x1b7>
     e09:	83 6d a4 01          	sub    DWORD PTR [rbp-0x5c],0x1
     e0d:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
     e11:	79 aa                	jns    dbd <main+0x161>
     e13:	48 8d 3d e1 03 00 00 	lea    rdi,[rip+0x3e1]        # 11fb <_IO_stdin_used+0x11b>
     e1a:	e8 f1 fa ff ff       	call   910 <puts@plt>
     e1f:	e9 2a 02 00 00       	jmp    104e <main+0x3f2>
     e24:	48 8d 3d dd 03 00 00 	lea    rdi,[rip+0x3dd]        # 1208 <_IO_stdin_used+0x128>
     e2b:	b8 00 00 00 00       	mov    eax,0x0
     e30:	e8 0b fb ff ff       	call   940 <printf@plt>
     e35:	b8 00 00 00 00       	mov    eax,0x0
     e3a:	e8 33 fd ff ff       	call   b72 <read_int>
     e3f:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
     e42:	83 7d ac 00          	cmp    DWORD PTR [rbp-0x54],0x0
     e46:	7e 06                	jle    e4e <main+0x1f2>
     e48:	83 7d ac 03          	cmp    DWORD PTR [rbp-0x54],0x3
     e4c:	7e 16                	jle    e64 <main+0x208>
     e4e:	48 8d 3d 73 03 00 00 	lea    rdi,[rip+0x373]        # 11c8 <_IO_stdin_used+0xe8>
     e55:	e8 b6 fa ff ff       	call   910 <puts@plt>
     e5a:	bf 00 00 00 00       	mov    edi,0x0
     e5f:	e8 4c fb ff ff       	call   9b0 <exit@plt>
     e64:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     e67:	8d 50 ff             	lea    edx,[rax-0x1]
     e6a:	48 8d 45 b0          	lea    rax,[rbp-0x50]
     e6e:	48 63 d2             	movsxd rdx,edx
     e71:	48 c1 e2 04          	shl    rdx,0x4
     e75:	48 01 d0             	add    rax,rdx
     e78:	0f b6 00             	movzx  eax,BYTE PTR [rax]
     e7b:	84 c0                	test   al,al
     e7d:	75 11                	jne    e90 <main+0x234>
     e7f:	48 8d 3d ba 03 00 00 	lea    rdi,[rip+0x3ba]        # 1240 <_IO_stdin_used+0x160>
     e86:	e8 85 fa ff ff       	call   910 <puts@plt>
     e8b:	e9 be 01 00 00       	jmp    104e <main+0x3f2>
     e90:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     e93:	8d 50 ff             	lea    edx,[rax-0x1]
     e96:	48 8d 45 b0          	lea    rax,[rbp-0x50]
     e9a:	48 63 d2             	movsxd rdx,edx
     e9d:	48 c1 e2 04          	shl    rdx,0x4
     ea1:	48 01 c2             	add    rdx,rax
     ea4:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
     ea7:	89 c6                	mov    esi,eax
     ea9:	48 8d 3d d2 03 00 00 	lea    rdi,[rip+0x3d2]        # 1282 <_IO_stdin_used+0x1a2>
     eb0:	b8 00 00 00 00       	mov    eax,0x0
     eb5:	e8 86 fa ff ff       	call   940 <printf@plt>
     eba:	e9 8f 01 00 00       	jmp    104e <main+0x3f2>
     ebf:	48 8d 3d d2 03 00 00 	lea    rdi,[rip+0x3d2]        # 1298 <_IO_stdin_used+0x1b8>
     ec6:	b8 00 00 00 00       	mov    eax,0x0
     ecb:	e8 70 fa ff ff       	call   940 <printf@plt>
     ed0:	b8 00 00 00 00       	mov    eax,0x0
     ed5:	e8 98 fc ff ff       	call   b72 <read_int>
     eda:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
     edd:	83 7d ac 00          	cmp    DWORD PTR [rbp-0x54],0x0
     ee1:	7e 06                	jle    ee9 <main+0x28d>
     ee3:	83 7d ac 03          	cmp    DWORD PTR [rbp-0x54],0x3
     ee7:	7e 16                	jle    eff <main+0x2a3>
     ee9:	48 8d 3d d8 02 00 00 	lea    rdi,[rip+0x2d8]        # 11c8 <_IO_stdin_used+0xe8>
     ef0:	e8 1b fa ff ff       	call   910 <puts@plt>
     ef5:	bf 00 00 00 00       	mov    edi,0x0
     efa:	e8 b1 fa ff ff       	call   9b0 <exit@plt>
     eff:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     f02:	8d 50 ff             	lea    edx,[rax-0x1]
     f05:	48 8d 45 b0          	lea    rax,[rbp-0x50]
     f09:	48 63 d2             	movsxd rdx,edx
     f0c:	48 c1 e2 04          	shl    rdx,0x4
     f10:	48 01 d0             	add    rax,rdx
     f13:	0f b6 00             	movzx  eax,BYTE PTR [rax]
     f16:	84 c0                	test   al,al
     f18:	75 11                	jne    f2b <main+0x2cf>
     f1a:	48 8d 3d 1f 03 00 00 	lea    rdi,[rip+0x31f]        # 1240 <_IO_stdin_used+0x160>
     f21:	e8 ea f9 ff ff       	call   910 <puts@plt>
     f26:	e9 23 01 00 00       	jmp    104e <main+0x3f2>
     f2b:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
     f2e:	89 c6                	mov    esi,eax
     f30:	48 8d 3d 93 03 00 00 	lea    rdi,[rip+0x393]        # 12ca <_IO_stdin_used+0x1ea>
     f37:	b8 00 00 00 00       	mov    eax,0x0
     f3c:	e8 ff f9 ff ff       	call   940 <printf@plt>
     f41:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     f44:	8d 50 ff             	lea    edx,[rax-0x1]
     f47:	48 8d 45 b0          	lea    rax,[rbp-0x50]
     f4b:	48 63 d2             	movsxd rdx,edx
     f4e:	48 c1 e2 04          	shl    rdx,0x4
     f52:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
     f56:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
     f59:	89 c2                	mov    edx,eax
     f5b:	48 89 ce             	mov    rsi,rcx
     f5e:	bf 00 00 00 00       	mov    edi,0x0
     f63:	b8 00 00 00 00       	mov    eax,0x0
     f68:	e8 f3 f9 ff ff       	call   960 <read@plt>
     f6d:	c7 45 a4 09 00 00 00 	mov    DWORD PTR [rbp-0x5c],0x9
     f74:	eb 50                	jmp    fc6 <main+0x36a>
     f76:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     f79:	8d 50 ff             	lea    edx,[rax-0x1]
     f7c:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
     f7f:	48 98                	cdqe   
     f81:	48 63 d2             	movsxd rdx,edx
     f84:	48 c1 e2 04          	shl    rdx,0x4
     f88:	48 8d 5d f0          	lea    rbx,[rbp-0x10]
     f8c:	48 01 da             	add    rdx,rbx
     f8f:	48 01 d0             	add    rax,rdx
     f92:	48 83 e8 40          	sub    rax,0x40
     f96:	0f b6 00             	movzx  eax,BYTE PTR [rax]
     f99:	3c 0a                	cmp    al,0xa
     f9b:	75 25                	jne    fc2 <main+0x366>
     f9d:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     fa0:	8d 50 ff             	lea    edx,[rax-0x1]
     fa3:	8b 45 a4             	mov    eax,DWORD PTR [rbp-0x5c]
     fa6:	48 98                	cdqe   
     fa8:	48 63 d2             	movsxd rdx,edx
     fab:	48 c1 e2 04          	shl    rdx,0x4
     faf:	48 8d 5d f0          	lea    rbx,[rbp-0x10]
     fb3:	48 01 da             	add    rdx,rbx
     fb6:	48 01 d0             	add    rax,rdx
     fb9:	48 83 e8 40          	sub    rax,0x40
     fbd:	c6 00 00             	mov    BYTE PTR [rax],0x0
     fc0:	eb 0a                	jmp    fcc <main+0x370>
     fc2:	83 6d a4 01          	sub    DWORD PTR [rbp-0x5c],0x1
     fc6:	83 7d a4 00          	cmp    DWORD PTR [rbp-0x5c],0x0
     fca:	79 aa                	jns    f76 <main+0x31a>
     fcc:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
     fcf:	8d 50 ff             	lea    edx,[rax-0x1]
     fd2:	48 8d 45 b0          	lea    rax,[rbp-0x50]
     fd6:	48 63 d2             	movsxd rdx,edx
     fd9:	48 c1 e2 04          	shl    rdx,0x4
     fdd:	48 01 d0             	add    rax,rdx
     fe0:	48 89 c7             	mov    rdi,rax
     fe3:	e8 38 f9 ff ff       	call   920 <strlen@plt>
     fe8:	89 45 a0             	mov    DWORD PTR [rbp-0x60],eax
     feb:	83 7d a0 3e          	cmp    DWORD PTR [rbp-0x60],0x3e
     fef:	7e 16                	jle    1007 <main+0x3ab>
     ff1:	48 8d 3d e6 02 00 00 	lea    rdi,[rip+0x2e6]        # 12de <_IO_stdin_used+0x1fe>
     ff8:	e8 13 f9 ff ff       	call   910 <puts@plt>
     ffd:	bf 00 00 00 00       	mov    edi,0x0
    1002:	e8 a9 f9 ff ff       	call   9b0 <exit@plt>
    1007:	8b 45 a0             	mov    eax,DWORD PTR [rbp-0x60]
    100a:	89 c6                	mov    esi,eax
    100c:	48 8d 3d d5 02 00 00 	lea    rdi,[rip+0x2d5]        # 12e8 <_IO_stdin_used+0x208>
    1013:	b8 00 00 00 00       	mov    eax,0x0
    1018:	e8 23 f9 ff ff       	call   940 <printf@plt>
    101d:	eb 2f                	jmp    104e <main+0x3f2>
    101f:	48 8d 3d d7 02 00 00 	lea    rdi,[rip+0x2d7]        # 12fd <_IO_stdin_used+0x21d>
    1026:	e8 e5 f8 ff ff       	call   910 <puts@plt>
    102b:	b8 00 00 00 00       	mov    eax,0x0
    1030:	48 8b 5d e8          	mov    rbx,QWORD PTR [rbp-0x18]
    1034:	64 48 33 1c 25 28 00 	xor    rbx,QWORD PTR fs:0x28
    103b:	00 00 
    103d:	74 19                	je     1058 <main+0x3fc>
    103f:	eb 12                	jmp    1053 <main+0x3f7>
    1041:	48 8d 3d ba 02 00 00 	lea    rdi,[rip+0x2ba]        # 1302 <_IO_stdin_used+0x222>
    1048:	e8 c3 f8 ff ff       	call   910 <puts@plt>
    104d:	90                   	nop
    104e:	e9 8c fc ff ff       	jmp    cdf <main+0x83>
    1053:	e8 d8 f8 ff ff       	call   930 <__stack_chk_fail@plt>
    1058:	48 83 c4 58          	add    rsp,0x58
    105c:	5b                   	pop    rbx
    105d:	5d                   	pop    rbp
    105e:	c3                   	ret    
    105f:	90                   	nop

0000000000001060 <__libc_csu_init>:
    1060:	41 57                	push   r15
    1062:	41 89 ff             	mov    r15d,edi
    1065:	41 56                	push   r14
    1067:	49 89 f6             	mov    r14,rsi
    106a:	41 55                	push   r13
    106c:	49 89 d5             	mov    r13,rdx
    106f:	41 54                	push   r12
    1071:	4c 8d 25 c0 0c 20 00 	lea    r12,[rip+0x200cc0]        # 201d38 <__frame_dummy_init_array_entry>
    1078:	55                   	push   rbp
    1079:	48 8d 2d c0 0c 20 00 	lea    rbp,[rip+0x200cc0]        # 201d40 <__init_array_end>
    1080:	53                   	push   rbx
    1081:	4c 29 e5             	sub    rbp,r12
    1084:	31 db                	xor    ebx,ebx
    1086:	48 c1 fd 03          	sar    rbp,0x3
    108a:	48 83 ec 08          	sub    rsp,0x8
    108e:	e8 25 f8 ff ff       	call   8b8 <_init>
    1093:	48 85 ed             	test   rbp,rbp
    1096:	74 1e                	je     10b6 <__libc_csu_init+0x56>
    1098:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    109f:	00 
    10a0:	4c 89 ea             	mov    rdx,r13
    10a3:	4c 89 f6             	mov    rsi,r14
    10a6:	44 89 ff             	mov    edi,r15d
    10a9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
    10ad:	48 83 c3 01          	add    rbx,0x1
    10b1:	48 39 eb             	cmp    rbx,rbp
    10b4:	75 ea                	jne    10a0 <__libc_csu_init+0x40>
    10b6:	48 83 c4 08          	add    rsp,0x8
    10ba:	5b                   	pop    rbx
    10bb:	5d                   	pop    rbp
    10bc:	41 5c                	pop    r12
    10be:	41 5d                	pop    r13
    10c0:	41 5e                	pop    r14
    10c2:	41 5f                	pop    r15
    10c4:	c3                   	ret    
    10c5:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    10cc:	00 00 00 00 

00000000000010d0 <__libc_csu_fini>:
    10d0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000010d4 <_fini>:
    10d4:	48 83 ec 08          	sub    rsp,0x8
    10d8:	48 83 c4 08          	add    rsp,0x8
    10dc:	c3                   	ret    

Disassembly of section .rodata:

00000000000010e0 <_IO_stdin_used>:
    10e0:	01 00                	add    DWORD PTR [rax],eax
    10e2:	02 00                	add    al,BYTE PTR [rax]
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    10ed:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    10f2:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    10f7:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    10fc:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    1101:	2d 2d 00 31 2e       	sub    eax,0x2e31002d
    1106:	20 65 63             	and    BYTE PTR [rbp+0x63],ah
    1109:	68 6f 20 73 65       	push   0x6573206f
    110e:	72 76                	jb     1186 <_IO_stdin_used+0xa6>
    1110:	65 72 00             	gs jb  1113 <_IO_stdin_used+0x33>
    1113:	32 2e                	xor    ch,BYTE PTR [rsi]
    1115:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1118:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1119:	72 65                	jb     1180 <_IO_stdin_used+0xa0>
    111b:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    111e:	6d                   	ins    DWORD PTR es:[rdi],dx
    111f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1120:	00 33                	add    BYTE PTR [rbx],dh
    1122:	2e 20 73 68          	and    BYTE PTR cs:[rbx+0x68],dh
    1126:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1127:	77 20                	ja     1149 <_IO_stdin_used+0x69>
    1129:	6d                   	ins    DWORD PTR es:[rdi],dx
    112a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    112c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    112d:	00 34 2e             	add    BYTE PTR [rsi+rbp*1],dh
    1130:	20 65 64             	and    BYTE PTR [rbp+0x64],ah
    1133:	69 74 20 6d 65 6d 6f 	imul   esi,DWORD PTR [rax+riz*1+0x6d],0x6f6d65
    113a:	00 
    113b:	35 2e 20 65 78       	xor    eax,0x7865202e
    1140:	69 74 00 59 6f 75 72 	imul   esi,DWORD PTR [rax+rax*1+0x59],0x2072756f
    1147:	20 
    1148:	63 68 6f             	movsxd ebp,DWORD PTR [rax+0x6f]
    114b:	69 63 65 3a 00 72 65 	imul   esp,DWORD PTR [rbx+0x65],0x6572003a
    1152:	61                   	(bad)  
    1153:	64 20 65 72          	and    BYTE PTR fs:[rbp+0x72],ah
    1157:	72 6f                	jb     11c8 <_IO_stdin_used+0xe8>
    1159:	72 00                	jb     115b <_IO_stdin_used+0x7b>
    115b:	57                   	push   rdi
    115c:	68 61 74 20 64       	push   0x64207461
    1161:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1162:	20 79 6f             	and    BYTE PTR [rcx+0x6f],bh
    1165:	75 20                	jne    1187 <_IO_stdin_used+0xa7>
    1167:	77 61                	ja     11ca <_IO_stdin_used+0xea>
    1169:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    116a:	74 20                	je     118c <_IO_stdin_used+0xac>
    116c:	74 6f                	je     11dd <_IO_stdin_used+0xfd>
    116e:	20 73 61             	and    BYTE PTR [rbx+0x61],dh
    1171:	79 3a                	jns    11ad <_IO_stdin_used+0xcd>
    1173:	00 59 6f             	add    BYTE PTR [rcx+0x6f],bl
    1176:	75 20                	jne    1198 <_IO_stdin_used+0xb8>
    1178:	73 61                	jae    11db <_IO_stdin_used+0xfb>
    117a:	69 64 3a 20 25 73 0a 	imul   esp,DWORD PTR [rdx+rdi*1+0x20],0xa7325
    1181:	00 
    1182:	57                   	push   rdi
    1183:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1185:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    1188:	65 20 74 6f 20       	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
    118d:	4e                   	rex.WRX
    118e:	43 55                	rex.XB push r13
    1190:	20 63 65             	and    BYTE PTR [rbx+0x65],ah
    1193:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1194:	74 65                	je     11fb <_IO_stdin_used+0x11b>
    1196:	72 00                	jb     1198 <_IO_stdin_used+0xb8>
    1198:	57                   	push   rdi
    1199:	68 69 63 68 20       	push   0x20686369
    119e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    119f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11a0:	65 20 64 6f 20       	and    BYTE PTR gs:[rdi+rbp*2+0x20],ah
    11a5:	79 6f                	jns    1216 <_IO_stdin_used+0x136>
    11a7:	75 20                	jne    11c9 <_IO_stdin_used+0xe9>
    11a9:	77 61                	ja     120c <_IO_stdin_used+0x12c>
    11ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11ac:	74 20                	je     11ce <_IO_stdin_used+0xee>
    11ae:	74 6f                	je     121f <_IO_stdin_used+0x13f>
    11b0:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    11b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11b4:	72 65                	jb     121b <_IO_stdin_used+0x13b>
    11b6:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    11b9:	20 28                	and    BYTE PTR [rax],ch
    11bb:	31 20                	xor    DWORD PTR [rax],esp
    11bd:	2c 20                	sub    al,0x20
    11bf:	32 20                	xor    ah,BYTE PTR [rax]
    11c1:	2c 20                	sub    al,0x20
    11c3:	33 29                	xor    ebp,DWORD PTR [rcx]
    11c5:	3f                   	(bad)  
    11c6:	3a 00                	cmp    al,BYTE PTR [rax]
    11c8:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
    11ca:	70 21                	jo     11ed <_IO_stdin_used+0x10d>
    11cc:	00 00                	add    BYTE PTR [rax],al
    11ce:	00 00                	add    BYTE PTR [rax],al
    11d0:	57                   	push   rdi
    11d1:	68 61 74 20 64       	push   0x64207461
    11d6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11d7:	20 79 6f             	and    BYTE PTR [rcx+0x6f],bh
    11da:	75 20                	jne    11fc <_IO_stdin_used+0x11c>
    11dc:	77 61                	ja     123f <_IO_stdin_used+0x15f>
    11de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11df:	74 20                	je     1201 <_IO_stdin_used+0x121>
    11e1:	74 6f                	je     1252 <_IO_stdin_used+0x172>
    11e3:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    11e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11e7:	72 65                	jb     124e <_IO_stdin_used+0x16e>
    11e9:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    11ec:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
    11ef:	6d                   	ins    DWORD PTR es:[rdi],dx
    11f0:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    11f3:	67 65 20 25 64 20 3a 	and    BYTE PTR gs:[eip+0x3a2064],ah        # 3a325f <_end+0x1a1247>
    11fa:	00 
    11fb:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    11fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11fe:	65 21 00             	and    DWORD PTR gs:[rax],eax
    1201:	00 00                	add    BYTE PTR [rax],al
    1203:	00 00                	add    BYTE PTR [rax],al
    1205:	00 00                	add    BYTE PTR [rax],al
    1207:	00 57 68             	add    BYTE PTR [rdi+0x68],dl
    120a:	69 63 68 20 6d 65 6d 	imul   esp,DWORD PTR [rbx+0x68],0x6d656d20
    1211:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1212:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    1215:	67 65 20 64 6f 20    	and    BYTE PTR gs:[edi+ebp*2+0x20],ah
    121b:	79 6f                	jns    128c <_IO_stdin_used+0x1ac>
    121d:	75 20                	jne    123f <_IO_stdin_used+0x15f>
    121f:	77 61                	ja     1282 <_IO_stdin_used+0x1a2>
    1221:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1222:	74 20                	je     1244 <_IO_stdin_used+0x164>
    1224:	74 6f                	je     1295 <_IO_stdin_used+0x1b5>
    1226:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
    1229:	65 20 28             	and    BYTE PTR gs:[rax],ch
    122c:	31 20                	xor    DWORD PTR [rax],esp
    122e:	2c 20                	sub    al,0x20
    1230:	32 20                	xor    ah,BYTE PTR [rax]
    1232:	2c 20                	sub    al,0x20
    1234:	33 29                	xor    ebp,DWORD PTR [rcx]
    1236:	3f                   	(bad)  
    1237:	3a 00                	cmp    al,BYTE PTR [rax]
    1239:	00 00                	add    BYTE PTR [rax],al
    123b:	00 00                	add    BYTE PTR [rax],al
    123d:	00 00                	add    BYTE PTR [rax],al
    123f:	00 54 68 65          	add    BYTE PTR [rax+rbp*2+0x65],dl
    1243:	72 65                	jb     12aa <_IO_stdin_used+0x1ca>
    1245:	20 69 73             	and    BYTE PTR [rcx+0x73],ch
    1248:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    124b:	74 68                	je     12b5 <_IO_stdin_used+0x1d5>
    124d:	69 6e 67 20 69 6e 20 	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
    1254:	74 68                	je     12be <_IO_stdin_used+0x1de>
    1256:	69 73 20 6d 65 6d 6f 	imul   esi,DWORD PTR [rbx+0x20],0x6f6d656d
    125d:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    1260:	67 65 2c 20          	addr32 gs sub al,0x20
    1264:	70 6c                	jo     12d2 <_IO_stdin_used+0x1f2>
    1266:	65 61                	gs (bad) 
    1268:	73 65                	jae    12cf <_IO_stdin_used+0x1ef>
    126a:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    126d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    126e:	72 65                	jb     12d5 <_IO_stdin_used+0x1f5>
    1270:	20 73 6f             	and    BYTE PTR [rbx+0x6f],dh
    1273:	6d                   	ins    DWORD PTR es:[rdi],dx
    1274:	65 74 68             	gs je  12df <_IO_stdin_used+0x1ff>
    1277:	69 6e 67 20 66 69 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72696620
    127e:	73 74                	jae    12f4 <_IO_stdin_used+0x214>
    1280:	2e 00 6d 65          	add    BYTE PTR cs:[rbp+0x65],ch
    1284:	6d                   	ins    DWORD PTR es:[rdi],dx
    1285:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1286:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    1289:	67 65 20 25 64 20 3a 	and    BYTE PTR gs:[eip+0x203a2064],ah        # 203a32f5 <_end+0x201a12dd>
    1290:	20 
    1291:	25 73 0a 00 00       	and    eax,0xa73
    1296:	00 00                	add    BYTE PTR [rax],al
    1298:	57                   	push   rdi
    1299:	68 69 63 68 20       	push   0x20686369
    129e:	6d                   	ins    DWORD PTR es:[rdi],dx
    129f:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    12a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12a2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
    12a5:	67 65 20 64 6f 20    	and    BYTE PTR gs:[edi+ebp*2+0x20],ah
    12ab:	79 6f                	jns    131c <_IO_stdin_used+0x23c>
    12ad:	75 20                	jne    12cf <_IO_stdin_used+0x1ef>
    12af:	77 61                	ja     1312 <_IO_stdin_used+0x232>
    12b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12b2:	74 20                	je     12d4 <_IO_stdin_used+0x1f4>
    12b4:	74 6f                	je     1325 <_IO_stdin_used+0x245>
    12b6:	20 65 64             	and    BYTE PTR [rbp+0x64],ah
    12b9:	69 74 20 28 31 20 2c 	imul   esi,DWORD PTR [rax+riz*1+0x28],0x202c2031
    12c0:	20 
    12c1:	32 20                	xor    ah,BYTE PTR [rax]
    12c3:	2c 20                	sub    al,0x20
    12c5:	33 29                	xor    ebp,DWORD PTR [rcx]
    12c7:	3f                   	(bad)  
    12c8:	3a 00                	cmp    al,BYTE PTR [rax]
    12ca:	45                   	rex.RB
    12cb:	64 69 74 20 6d 65 6d 	imul   esi,DWORD PTR fs:[rax+riz*1+0x6d],0x206f6d65
    12d2:	6f 20 
    12d4:	70 61                	jo     1337 <_IO_stdin_used+0x257>
    12d6:	67 65 20 25 64 20 3a 	and    BYTE PTR gs:[eip+0x3a2064],ah        # 3a3342 <_end+0x1a132a>
    12dd:	00 
    12de:	54                   	push   rsp
    12df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12e1:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    12e5:	67 21 00             	and    DWORD PTR [eax],eax
    12e8:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    12ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12eb:	65 21 20             	and    DWORD PTR gs:[rax],esp
    12ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12ef:	65 77 20             	gs ja  1312 <_IO_stdin_used+0x232>
    12f2:	73 69                	jae    135d <_IO_stdin_used+0x27d>
    12f4:	7a 65                	jp     135b <_IO_stdin_used+0x27b>
    12f6:	20 3a                	and    BYTE PTR [rdx],bh
    12f8:	20 25 64 0a 00 42    	and    BYTE PTR [rip+0x42000a64],ah        # 42001d62 <_end+0x41dffd4a>
    12fe:	79 65                	jns    1365 <_IO_stdin_used+0x285>
    1300:	21 00                	and    DWORD PTR [rax],eax
    1302:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    1304:	76 61                	jbe    1367 <_IO_stdin_used+0x287>
    1306:	6c                   	ins    BYTE PTR es:[rdi],dx
    1307:	69 64 20 63 68 6f 69 	imul   esp,DWORD PTR [rax+riz*1+0x63],0x63696f68
    130e:	63 
    130f:	65 21 00             	and    DWORD PTR gs:[rax],eax
    1312:	00 00                	add    BYTE PTR [rax],al
    1314:	2d fd ff ff 10       	sub    eax,0x10fffffd
    1319:	fa                   	cli    
    131a:	ff                   	(bad)  
    131b:	ff 1f                	call   FWORD PTR [rdi]
    131d:	fa                   	cli    
    131e:	ff                   	(bad)  
    131f:	ff 10                	call   QWORD PTR [rax]
    1321:	fb                   	sti    
    1322:	ff                   	(bad)  
    1323:	ff ab fb ff ff 0b    	jmp    FWORD PTR [rbx+0xbfffffb]
    1329:	fd                   	std    
    132a:	ff                   	(bad)  
    132b:	ff                   	.byte 0xff

Disassembly of section .eh_frame_hdr:

000000000000132c <.eh_frame_hdr>:
    132c:	01 1b                	add    DWORD PTR [rbx],ebx
    132e:	03 3b                	add    edi,DWORD PTR [rbx]
    1330:	48 00 00             	rex.W add BYTE PTR [rax],al
    1333:	00 08                	add    BYTE PTR [rax],cl
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 b4 f5 ff ff 94 00 	add    BYTE PTR [rbp+rsi*8+0x94ffff],dh
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1341:	f6 ff                	idiv   bh
    1343:	ff 64 00 00          	jmp    QWORD PTR [rax+rax*1+0x0]
    1347:	00 b9 f7 ff ff bc    	add    BYTE PTR [rcx-0x43000009],bh
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	00 46 f8             	add    BYTE PTR [rsi-0x8],al
    1352:	ff                   	(bad)  
    1353:	ff                   	(bad)  
    1354:	dc 00                	fadd   QWORD PTR [rax]
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	bf f8 ff ff 04       	mov    edi,0x4fffff8
    135d:	01 00                	add    DWORD PTR [rax],eax
    135f:	00 30                	add    BYTE PTR [rax],dh
    1361:	f9                   	stc    
    1362:	ff                   	(bad)  
    1363:	ff 24 01             	jmp    QWORD PTR [rcx+rax*1]
    1366:	00 00                	add    BYTE PTR [rax],al
    1368:	34 fd                	xor    al,0xfd
    136a:	ff                   	(bad)  
    136b:	ff 4c 01 00          	dec    DWORD PTR [rcx+rax*1+0x0]
    136f:	00 a4 fd ff ff 94 01 	add    BYTE PTR [rbp+rdi*8+0x194ffff],ah
	...

Disassembly of section .eh_frame:

0000000000001378 <__FRAME_END__-0x160>:
    1378:	14 00                	adc    al,0x0
    137a:	00 00                	add    BYTE PTR [rax],al
    137c:	00 00                	add    BYTE PTR [rax],al
    137e:	00 00                	add    BYTE PTR [rax],al
    1380:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    1383:	00 01                	add    BYTE PTR [rcx],al
    1385:	78 10                	js     1397 <_IO_stdin_used+0x2b7>
    1387:	01 1b                	add    DWORD PTR [rbx],ebx
    1389:	0c 07                	or     al,0x7
    138b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    1396:	00 00                	add    BYTE PTR [rax],al
    1398:	38 f6                	cmp    dh,dh
    139a:	ff                   	(bad)  
    139b:	ff 2a                	jmp    FWORD PTR [rdx]
	...
    13a5:	00 00                	add    BYTE PTR [rax],al
    13a7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    13aa:	00 00                	add    BYTE PTR [rax],al
    13ac:	00 00                	add    BYTE PTR [rax],al
    13ae:	00 00                	add    BYTE PTR [rax],al
    13b0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    13b3:	00 01                	add    BYTE PTR [rcx],al
    13b5:	78 10                	js     13c7 <_IO_stdin_used+0x2e7>
    13b7:	01 1b                	add    DWORD PTR [rbx],ebx
    13b9:	0c 07                	or     al,0x7
    13bb:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
    13c1:	00 00                	add    BYTE PTR [rax],al
    13c3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    13c6:	00 00                	add    BYTE PTR [rax],al
    13c8:	18 f5                	sbb    ch,dh
    13ca:	ff                   	(bad)  
    13cb:	ff f0                	push   rax
    13cd:	00 00                	add    BYTE PTR [rax],al
    13cf:	00 00                	add    BYTE PTR [rax],al
    13d1:	0e                   	(bad)  
    13d2:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    13d5:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    13d8:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    13db:	80 00 3f             	add    BYTE PTR [rax],0x3f
    13de:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    13e0:	2a 33                	sub    dh,BYTE PTR [rbx]
    13e2:	24 22                	and    al,0x22
    13e4:	00 00                	add    BYTE PTR [rax],al
    13e6:	00 00                	add    BYTE PTR [rax],al
    13e8:	1c 00                	sbb    al,0x0
    13ea:	00 00                	add    BYTE PTR [rax],al
    13ec:	44 00 00             	add    BYTE PTR [rax],r8b
    13ef:	00 f5                	add    ch,dh
    13f1:	f6 ff                	idiv   bh
    13f3:	ff 8d 00 00 00 00    	dec    DWORD PTR [rbp+0x0]
    13f9:	41 0e                	rex.B (bad) 
    13fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    1401:	02 88 0c 07 08 00    	add    cl,BYTE PTR [rax+0x8070c]
    1407:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    140a:	00 00                	add    BYTE PTR [rax],al
    140c:	64 00 00             	add    BYTE PTR fs:[rax],al
    140f:	00 62 f7             	add    BYTE PTR [rdx-0x9],ah
    1412:	ff                   	(bad)  
    1413:	ff                   	(bad)  
    1414:	79 00                	jns    1416 <_IO_stdin_used+0x336>
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    141b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    1421:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
    1425:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1426:	0c 07                	or     al,0x7
    1428:	08 00                	or     BYTE PTR [rax],al
    142a:	00 00                	add    BYTE PTR [rax],al
    142c:	00 00                	add    BYTE PTR [rax],al
    142e:	00 00                	add    BYTE PTR [rax],al
    1430:	1c 00                	sbb    al,0x0
    1432:	00 00                	add    BYTE PTR [rax],al
    1434:	8c 00                	mov    WORD PTR [rax],es
    1436:	00 00                	add    BYTE PTR [rax],al
    1438:	b3 f7                	mov    bl,0xf7
    143a:	ff                   	(bad)  
    143b:	ff 71 00             	push   QWORD PTR [rcx+0x0]
    143e:	00 00                	add    BYTE PTR [rax],al
    1440:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    1443:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    1449:	02 6c 0c 07          	add    ch,BYTE PTR [rsp+rcx*1+0x7]
    144d:	08 00                	or     BYTE PTR [rax],al
    144f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    1452:	00 00                	add    BYTE PTR [rax],al
    1454:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1455:	00 00                	add    BYTE PTR [rax],al
    1457:	00 04 f8             	add    BYTE PTR [rax+rdi*8],al
    145a:	ff                   	(bad)  
    145b:	ff 03                	inc    DWORD PTR [rbx]
    145d:	04 00                	add    al,0x0
    145f:	00 00                	add    BYTE PTR [rax],al
    1461:	41 0e                	rex.B (bad) 
    1463:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    1469:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
    146d:	f9                   	stc    
    146e:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    1471:	08 00                	or     BYTE PTR [rax],al
    1473:	00 00                	add    BYTE PTR [rax],al
    1475:	00 00                	add    BYTE PTR [rax],al
    1477:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    147b:	00 d4                	add    ah,dl
    147d:	00 00                	add    BYTE PTR [rax],al
    147f:	00 e0                	add    al,ah
    1481:	fb                   	sti    
    1482:	ff                   	(bad)  
    1483:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
    1486:	00 00                	add    BYTE PTR [rax],al
    1488:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
    148b:	10 8f 02 45 0e 18    	adc    BYTE PTR [rdi+0x180e4502],cl
    1491:	8e 03                	mov    es,WORD PTR [rbx]
    1493:	45 0e                	rex.RB (bad) 
    1495:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    149b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff863022e9 <_end+0xffffffff861002d1>
    14a1:	06                   	(bad)  
    14a2:	48 0e                	rex.W (bad) 
    14a4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
    14aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    14ab:	0e                   	(bad)  
    14ac:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    14af:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    14b2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    14b5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    14b8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    14bb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    14be:	08 00                	or     BYTE PTR [rax],al
    14c0:	14 00                	adc    al,0x0
    14c2:	00 00                	add    BYTE PTR [rax],al
    14c4:	1c 01                	sbb    al,0x1
    14c6:	00 00                	add    BYTE PTR [rax],al
    14c8:	08 fc                	or     ah,bh
    14ca:	ff                   	(bad)  
    14cb:	ff 02                	inc    DWORD PTR [rdx]
	...

00000000000014d8 <__FRAME_END__>:
    14d8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000201d38 <__frame_dummy_init_array_entry>:
  201d38:	b0 0a                	mov    al,0xa
  201d3a:	00 00                	add    BYTE PTR [rax],al
  201d3c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000201d40 <__do_global_dtors_aux_fini_array_entry>:
  201d40:	70 0a                	jo     201d4c <__JCR_END__+0x4>
  201d42:	00 00                	add    BYTE PTR [rax],al
  201d44:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000201d48 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000201d50 <_DYNAMIC>:
  201d50:	01 00                	add    DWORD PTR [rax],eax
  201d52:	00 00                	add    BYTE PTR [rax],al
  201d54:	00 00                	add    BYTE PTR [rax],al
  201d56:	00 00                	add    BYTE PTR [rax],al
  201d58:	01 00                	add    DWORD PTR [rax],eax
  201d5a:	00 00                	add    BYTE PTR [rax],al
  201d5c:	00 00                	add    BYTE PTR [rax],al
  201d5e:	00 00                	add    BYTE PTR [rax],al
  201d60:	0c 00                	or     al,0x0
  201d62:	00 00                	add    BYTE PTR [rax],al
  201d64:	00 00                	add    BYTE PTR [rax],al
  201d66:	00 00                	add    BYTE PTR [rax],al
  201d68:	b8 08 00 00 00       	mov    eax,0x8
  201d6d:	00 00                	add    BYTE PTR [rax],al
  201d6f:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 201d75 <_DYNAMIC+0x25>
  201d75:	00 00                	add    BYTE PTR [rax],al
  201d77:	00 d4                	add    ah,dl
  201d79:	10 00                	adc    BYTE PTR [rax],al
  201d7b:	00 00                	add    BYTE PTR [rax],al
  201d7d:	00 00                	add    BYTE PTR [rax],al
  201d7f:	00 19                	add    BYTE PTR [rcx],bl
  201d81:	00 00                	add    BYTE PTR [rax],al
  201d83:	00 00                	add    BYTE PTR [rax],al
  201d85:	00 00                	add    BYTE PTR [rax],al
  201d87:	00 38                	add    BYTE PTR [rax],bh
  201d89:	1d 20 00 00 00       	sbb    eax,0x20
  201d8e:	00 00                	add    BYTE PTR [rax],al
  201d90:	1b 00                	sbb    eax,DWORD PTR [rax]
  201d92:	00 00                	add    BYTE PTR [rax],al
  201d94:	00 00                	add    BYTE PTR [rax],al
  201d96:	00 00                	add    BYTE PTR [rax],al
  201d98:	08 00                	or     BYTE PTR [rax],al
  201d9a:	00 00                	add    BYTE PTR [rax],al
  201d9c:	00 00                	add    BYTE PTR [rax],al
  201d9e:	00 00                	add    BYTE PTR [rax],al
  201da0:	1a 00                	sbb    al,BYTE PTR [rax]
  201da2:	00 00                	add    BYTE PTR [rax],al
  201da4:	00 00                	add    BYTE PTR [rax],al
  201da6:	00 00                	add    BYTE PTR [rax],al
  201da8:	40 1d 20 00 00 00    	rex sbb eax,0x20
  201dae:	00 00                	add    BYTE PTR [rax],al
  201db0:	1c 00                	sbb    al,0x0
  201db2:	00 00                	add    BYTE PTR [rax],al
  201db4:	00 00                	add    BYTE PTR [rax],al
  201db6:	00 00                	add    BYTE PTR [rax],al
  201db8:	08 00                	or     BYTE PTR [rax],al
  201dba:	00 00                	add    BYTE PTR [rax],al
  201dbc:	00 00                	add    BYTE PTR [rax],al
  201dbe:	00 00                	add    BYTE PTR [rax],al
  201dc0:	f5                   	cmc    
  201dc1:	fe                   	(bad)  
  201dc2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201dc5:	00 00                	add    BYTE PTR [rax],al
  201dc7:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  201dcd:	00 00                	add    BYTE PTR [rax],al
  201dcf:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 201dd5 <_DYNAMIC+0x85>
  201dd5:	00 00                	add    BYTE PTR [rax],al
  201dd7:	00 08                	add    BYTE PTR [rax],cl
  201dd9:	05 00 00 00 00       	add    eax,0x0
  201dde:	00 00                	add    BYTE PTR [rax],al
  201de0:	06                   	(bad)  
  201de1:	00 00                	add    BYTE PTR [rax],al
  201de3:	00 00                	add    BYTE PTR [rax],al
  201de5:	00 00                	add    BYTE PTR [rax],al
  201de7:	00 c8                	add    al,cl
  201de9:	02 00                	add    al,BYTE PTR [rax]
  201deb:	00 00                	add    BYTE PTR [rax],al
  201ded:	00 00                	add    BYTE PTR [rax],al
  201def:	00 0a                	add    BYTE PTR [rdx],cl
  201df1:	00 00                	add    BYTE PTR [rax],al
  201df3:	00 00                	add    BYTE PTR [rax],al
  201df5:	00 00                	add    BYTE PTR [rax],al
  201df7:	00 0e                	add    BYTE PTR [rsi],cl
  201df9:	01 00                	add    DWORD PTR [rax],eax
  201dfb:	00 00                	add    BYTE PTR [rax],al
  201dfd:	00 00                	add    BYTE PTR [rax],al
  201dff:	00 0b                	add    BYTE PTR [rbx],cl
  201e01:	00 00                	add    BYTE PTR [rax],al
  201e03:	00 00                	add    BYTE PTR [rax],al
  201e05:	00 00                	add    BYTE PTR [rax],al
  201e07:	00 18                	add    BYTE PTR [rax],bl
  201e09:	00 00                	add    BYTE PTR [rax],al
  201e0b:	00 00                	add    BYTE PTR [rax],al
  201e0d:	00 00                	add    BYTE PTR [rax],al
  201e0f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 201e15 <_DYNAMIC+0xc5>
	...
  201e1d:	00 00                	add    BYTE PTR [rax],al
  201e1f:	00 03                	add    BYTE PTR [rbx],al
  201e21:	00 00                	add    BYTE PTR [rax],al
  201e23:	00 00                	add    BYTE PTR [rax],al
  201e25:	00 00                	add    BYTE PTR [rax],al
  201e27:	00 40 1f             	add    BYTE PTR [rax+0x1f],al
  201e2a:	20 00                	and    BYTE PTR [rax],al
  201e2c:	00 00                	add    BYTE PTR [rax],al
  201e2e:	00 00                	add    BYTE PTR [rax],al
  201e30:	02 00                	add    al,BYTE PTR [rax]
  201e32:	00 00                	add    BYTE PTR [rax],al
  201e34:	00 00                	add    BYTE PTR [rax],al
  201e36:	00 00                	add    BYTE PTR [rax],al
  201e38:	50                   	push   rax
  201e39:	01 00                	add    DWORD PTR [rax],eax
  201e3b:	00 00                	add    BYTE PTR [rax],al
  201e3d:	00 00                	add    BYTE PTR [rax],al
  201e3f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  201e42:	00 00                	add    BYTE PTR [rax],al
  201e44:	00 00                	add    BYTE PTR [rax],al
  201e46:	00 00                	add    BYTE PTR [rax],al
  201e48:	07                   	(bad)  
  201e49:	00 00                	add    BYTE PTR [rax],al
  201e4b:	00 00                	add    BYTE PTR [rax],al
  201e4d:	00 00                	add    BYTE PTR [rax],al
  201e4f:	00 17                	add    BYTE PTR [rdi],dl
  201e51:	00 00                	add    BYTE PTR [rax],al
  201e53:	00 00                	add    BYTE PTR [rax],al
  201e55:	00 00                	add    BYTE PTR [rax],al
  201e57:	00 68 07             	add    BYTE PTR [rax+0x7],ch
  201e5a:	00 00                	add    BYTE PTR [rax],al
  201e5c:	00 00                	add    BYTE PTR [rax],al
  201e5e:	00 00                	add    BYTE PTR [rax],al
  201e60:	07                   	(bad)  
  201e61:	00 00                	add    BYTE PTR [rax],al
  201e63:	00 00                	add    BYTE PTR [rax],al
  201e65:	00 00                	add    BYTE PTR [rax],al
  201e67:	00 78 06             	add    BYTE PTR [rax+0x6],bh
  201e6a:	00 00                	add    BYTE PTR [rax],al
  201e6c:	00 00                	add    BYTE PTR [rax],al
  201e6e:	00 00                	add    BYTE PTR [rax],al
  201e70:	08 00                	or     BYTE PTR [rax],al
  201e72:	00 00                	add    BYTE PTR [rax],al
  201e74:	00 00                	add    BYTE PTR [rax],al
  201e76:	00 00                	add    BYTE PTR [rax],al
  201e78:	f0 00 00             	lock add BYTE PTR [rax],al
  201e7b:	00 00                	add    BYTE PTR [rax],al
  201e7d:	00 00                	add    BYTE PTR [rax],al
  201e7f:	00 09                	add    BYTE PTR [rcx],cl
  201e81:	00 00                	add    BYTE PTR [rax],al
  201e83:	00 00                	add    BYTE PTR [rax],al
  201e85:	00 00                	add    BYTE PTR [rax],al
  201e87:	00 18                	add    BYTE PTR [rax],bl
  201e89:	00 00                	add    BYTE PTR [rax],al
  201e8b:	00 00                	add    BYTE PTR [rax],al
  201e8d:	00 00                	add    BYTE PTR [rax],al
  201e8f:	00 18                	add    BYTE PTR [rax],bl
	...
  201e9d:	00 00                	add    BYTE PTR [rax],al
  201e9f:	00 fb                	add    bl,bh
  201ea1:	ff                   	(bad)  
  201ea2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201ea5:	00 00                	add    BYTE PTR [rax],al
  201ea7:	00 01                	add    BYTE PTR [rcx],al
  201ea9:	00 00                	add    BYTE PTR [rax],al
  201eab:	00 00                	add    BYTE PTR [rax],al
  201ead:	00 00                	add    BYTE PTR [rax],al
  201eaf:	00 fe                	add    dh,bh
  201eb1:	ff                   	(bad)  
  201eb2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201eb5:	00 00                	add    BYTE PTR [rax],al
  201eb7:	00 48 06             	add    BYTE PTR [rax+0x6],cl
  201eba:	00 00                	add    BYTE PTR [rax],al
  201ebc:	00 00                	add    BYTE PTR [rax],al
  201ebe:	00 00                	add    BYTE PTR [rax],al
  201ec0:	ff                   	(bad)  
  201ec1:	ff                   	(bad)  
  201ec2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201ec5:	00 00                	add    BYTE PTR [rax],al
  201ec7:	00 01                	add    BYTE PTR [rcx],al
  201ec9:	00 00                	add    BYTE PTR [rax],al
  201ecb:	00 00                	add    BYTE PTR [rax],al
  201ecd:	00 00                	add    BYTE PTR [rax],al
  201ecf:	00 f0                	add    al,dh
  201ed1:	ff                   	(bad)  
  201ed2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201ed5:	00 00                	add    BYTE PTR [rax],al
  201ed7:	00 16                	add    BYTE PTR [rsi],dl
  201ed9:	06                   	(bad)  
  201eda:	00 00                	add    BYTE PTR [rax],al
  201edc:	00 00                	add    BYTE PTR [rax],al
  201ede:	00 00                	add    BYTE PTR [rax],al
  201ee0:	f9                   	stc    
  201ee1:	ff                   	(bad)  
  201ee2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201ee5:	00 00                	add    BYTE PTR [rax],al
  201ee7:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000201f40 <_GLOBAL_OFFSET_TABLE_>:
  201f40:	50                   	push   rax
  201f41:	1d 20 00 00 00       	sbb    eax,0x20
	...
  201f56:	00 00                	add    BYTE PTR [rax],al
  201f58:	f6                   	(bad)  
  201f59:	08 00                	or     BYTE PTR [rax],al
  201f5b:	00 00                	add    BYTE PTR [rax],al
  201f5d:	00 00                	add    BYTE PTR [rax],al
  201f5f:	00 06                	add    BYTE PTR [rsi],al
  201f61:	09 00                	or     DWORD PTR [rax],eax
  201f63:	00 00                	add    BYTE PTR [rax],al
  201f65:	00 00                	add    BYTE PTR [rax],al
  201f67:	00 16                	add    BYTE PTR [rsi],dl
  201f69:	09 00                	or     DWORD PTR [rax],eax
  201f6b:	00 00                	add    BYTE PTR [rax],al
  201f6d:	00 00                	add    BYTE PTR [rax],al
  201f6f:	00 26                	add    BYTE PTR [rsi],ah
  201f71:	09 00                	or     DWORD PTR [rax],eax
  201f73:	00 00                	add    BYTE PTR [rax],al
  201f75:	00 00                	add    BYTE PTR [rax],al
  201f77:	00 36                	add    BYTE PTR [rsi],dh
  201f79:	09 00                	or     DWORD PTR [rax],eax
  201f7b:	00 00                	add    BYTE PTR [rax],al
  201f7d:	00 00                	add    BYTE PTR [rax],al
  201f7f:	00 46 09             	add    BYTE PTR [rsi+0x9],al
  201f82:	00 00                	add    BYTE PTR [rax],al
  201f84:	00 00                	add    BYTE PTR [rax],al
  201f86:	00 00                	add    BYTE PTR [rax],al
  201f88:	56                   	push   rsi
  201f89:	09 00                	or     DWORD PTR [rax],eax
  201f8b:	00 00                	add    BYTE PTR [rax],al
  201f8d:	00 00                	add    BYTE PTR [rax],al
  201f8f:	00 66 09             	add    BYTE PTR [rsi+0x9],ah
  201f92:	00 00                	add    BYTE PTR [rax],al
  201f94:	00 00                	add    BYTE PTR [rax],al
  201f96:	00 00                	add    BYTE PTR [rax],al
  201f98:	76 09                	jbe    201fa3 <_GLOBAL_OFFSET_TABLE_+0x63>
  201f9a:	00 00                	add    BYTE PTR [rax],al
  201f9c:	00 00                	add    BYTE PTR [rax],al
  201f9e:	00 00                	add    BYTE PTR [rax],al
  201fa0:	86 09                	xchg   BYTE PTR [rcx],cl
  201fa2:	00 00                	add    BYTE PTR [rax],al
  201fa4:	00 00                	add    BYTE PTR [rax],al
  201fa6:	00 00                	add    BYTE PTR [rax],al
  201fa8:	96                   	xchg   esi,eax
  201fa9:	09 00                	or     DWORD PTR [rax],eax
  201fab:	00 00                	add    BYTE PTR [rax],al
  201fad:	00 00                	add    BYTE PTR [rax],al
  201faf:	00 a6 09 00 00 00    	add    BYTE PTR [rsi+0x9],ah
  201fb5:	00 00                	add    BYTE PTR [rax],al
  201fb7:	00 b6 09 00 00 00    	add    BYTE PTR [rsi+0x9],dh
  201fbd:	00 00                	add    BYTE PTR [rax],al
  201fbf:	00 c6                	add    dh,al
  201fc1:	09 00                	or     DWORD PTR [rax],eax
	...

Disassembly of section .data:

0000000000202000 <__data_start>:
	...

0000000000202008 <__dso_handle>:
  202008:	08 20                	or     BYTE PTR [rax],ah
  20200a:	20 00                	and    BYTE PTR [rax],al
  20200c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000202010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x840>
   a:	74 75                	je     81 <_init-0x837>
   c:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
   f:	38 2e                	cmp    BYTE PTR [rsi],ch
  11:	34 2d                	xor    al,0x2d
  13:	32 75 62             	xor    dh,BYTE PTR [rbp+0x62]
  16:	75 6e                	jne    86 <_init-0x832>
  18:	74 75                	je     8f <_init-0x829>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	34 2e                	xor    al,0x2e
  1f:	30 34 2e             	xor    BYTE PTR [rsi+rbp*1],dh
  22:	33 29                	xor    ebp,DWORD PTR [rcx]
  24:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  27:	38 2e                	cmp    BYTE PTR [rsi],ch
  29:	34 00                	xor    al,0x0
